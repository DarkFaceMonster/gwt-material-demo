$wnd.gwtmaterialdemo.runAsyncCallback6("function $clinit_MaterialImageCropper(){\n  $clinit_MaterialImageCropper = emptyMethod;\n  !startupState && (startupState = new StartupState$DebugState);\n  if (startupState) {\n    injectCss(($clinit_MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$imageCropperDebugCssInitializer() , imageCropperDebugCss));\n    $clinit_MaterialDesignBase();\n    injectJs(($clinit_MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$imageCropperDebugJsInitializer() , imageCropperDebugJs), false, true);\n  }\n   else {\n    injectCss(($clinit_MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$imageCropperCssInitializer() , imageCropperCss));\n    $clinit_MaterialDesignBase();\n    injectJs(($clinit_MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$imageCropperJsInitializer() , imageCropperJs), true, false);\n  }\n}\n\nfunction $crop(this$static, type_0){\n  this$static.cropper.croppie('result', type_0.name_0).then(makeLambdaFunction(MaterialImageCropper$lambda$2$Type.prototype.call_5, MaterialImageCropper$lambda$2$Type, [this$static]));\n}\n\nfunction $reload_0(this$static){\n  this$static.cropper != null?this$static.cropper.croppie('destroy'):($clinit_GWT() , $clinit_GWT());\n  this$static.cropper = $wnd.$(($clinit_DOM() , this$static.element_0)).croppie(this$static.options_0);\n}\n\nfunction $setBoundary(this$static, boundary){\n  this$static.options_0.boundary = boundary;\n}\n\nfunction $setEnableOrientation(this$static, enableOrientation){\n  this$static.options_0.enableOrientation = enableOrientation;\n}\n\nfunction $setEnableResize(this$static, enableResize){\n  this$static.options_0.enableResize = enableResize;\n}\n\nfunction $setEnableZoom(this$static, enableZoom){\n  this$static.options_0.enableZoom = enableZoom;\n}\n\nfunction $setEnforceBoundary(this$static, enforceBoundary){\n  this$static.options_0.enforceBoundary = enforceBoundary;\n}\n\nfunction $setMouseWheelZoom(this$static, mouseWheelZoom){\n  this$static.options_0.mouseWheelZoom = mouseWheelZoom;\n}\n\nfunction $setShape(this$static, shape_0){\n  this$static.options_0.viewport.type = shape_0.name_0;\n}\n\nfunction $setShowZoomer(this$static, showZoomer){\n  this$static.options_0.showZoomer = showZoomer;\n}\n\nfunction $setViewport(this$static, viewport){\n  this$static.options_0.viewport = viewport;\n}\n\nfunction MaterialImageCropper(){\n  var options, viewPort, boundary;\n  $clinit_MaterialImageCropper();\n  MaterialImage.call(this);\n  this.options_0 = (options = new $wnd.Object , viewPort = new $wnd.Object , viewPort.height = 200 , viewPort.width = 200 , viewPort.type = ($clinit_Shape() , SQUARE).name_0 , boundary = new $wnd.Object , boundary.height = 400 , boundary.width = 400 , boundary.type = SQUARE.name_0 , options.viewport = viewPort , options.boundary = boundary , options.enableZoom = true , options.enableOrientation = true , options.enableResize = true , options.mouseWheelZoom = true , options.showZoomer = true , options);\n}\n\ndefineClass(2113, 44, $intern_70, MaterialImageCropper);\n_.load_0 = function load_5(){\n  this.cropper = $wnd.$(($clinit_DOM() , this.element_0)).croppie(this.options_0);\n}\n;\n_.onLoad = function onLoad_18(){\n  $onLoad(this);\n  $wnd.$('.materialboxed').materialbox();\n  this.cropper = $wnd.$(($clinit_DOM() , this.element_0)).croppie(this.options_0);\n}\n;\n_.onUnload = function onUnload_9(){\n  !this.handlerRegistry_0 && (this.handlerRegistry_0 = new DefaultHandlerRegistry(this));\n  $clearHandlers(this.handlerRegistry_0);\n  this.cropper != null?this.cropper.croppie('destroy'):($clinit_GWT() , $clinit_GWT());\n}\n;\n_.unload_0 = function unload_5(){\n  this.cropper != null?this.cropper.croppie('destroy'):($clinit_GWT() , $clinit_GWT());\n}\n;\nvar Lgwt_material_design_addins_client_cropper_MaterialImageCropper_2_classLit = createForClass('gwt.material.design.addins.client.cropper', 'MaterialImageCropper', 2113);\nfunction MaterialImageCropper$lambda$2$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(2945, $wnd.Function, {}, MaterialImageCropper$lambda$2$Type);\n_.call_5 = function call_15(arg0){\n  return $clinit_CropEvent() , $fireEvent(this.$$outer_0, new CropEvent(toString_9(arg0))) , $clinit_Boolean() , $clinit_Boolean() , true;\n}\n;\nvar imageCropperCss, imageCropperJs;\nfunction MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2719, 1, {}, MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_26(){\n  return 'imageCropperCss';\n}\n;\n_.getText = function getText_25(){\n  return \".croppie-container{width:100%;height:100%}.croppie-container .cr-image{z-index:-1;position:absolute;top:0;left:0;transform-origin:0 0;max-height:none;max-width:none}.croppie-container .cr-boundary{position:relative;overflow:hidden;margin:0 auto;z-index:1;width:100%;height:100%}.croppie-container .cr-resizer,.croppie-container .cr-viewport{position:absolute;border:2px solid #fff;margin:auto;top:0;bottom:0;right:0;left:0;box-shadow:0 0 2000px 2000px rgba(0,0,0,.5);z-index:0}.croppie-container .cr-resizer{z-index:2;box-shadow:none;pointer-events:none}.croppie-container .cr-resizer-horisontal,.croppie-container .cr-resizer-vertical{position:absolute;pointer-events:all}.croppie-container .cr-resizer-horisontal::after,.croppie-container .cr-resizer-vertical::after{display:block;position:absolute;box-sizing:border-box;border:1px solid #000;background:#fff;width:10px;height:10px;content:''}.croppie-container .cr-resizer-vertical{bottom:-5px;cursor:row-resize;width:100%;height:10px}.croppie-container .cr-resizer-vertical::after{left:50%;margin-left:-5px}.croppie-container .cr-resizer-horisontal{right:-5px;cursor:col-resize;width:10px;height:100%}.croppie-container .cr-resizer-horisontal::after{top:50%;margin-top:-5px}.croppie-container .cr-original-image{display:none}.croppie-container .cr-vp-circle{border-radius:50%}.croppie-container .cr-overlay{z-index:1;position:absolute;cursor:move;touch-action:none}.croppie-container .cr-slider-wrap{width:75%;margin:15px auto;text-align:center}.croppie-result{position:relative;overflow:hidden}.croppie-result img{position:absolute}.croppie-container .cr-image,.croppie-container .cr-overlay,.croppie-container .cr-viewport{-webkit-transform:translateZ(0);-moz-transform:translateZ(0);-ms-transform:translateZ(0);transform:translateZ(0)}.cr-slider{-webkit-appearance:none;width:300px;max-width:100%;padding-top:8px;padding-bottom:8px;background-color:transparent}.cr-slider::-webkit-slider-runnable-track{width:100%;height:3px;background:rgba(0,0,0,.5);border:0;border-radius:3px}.cr-slider::-webkit-slider-thumb{-webkit-appearance:none;border:none;height:16px;width:16px;border-radius:50%;background:#ddd;margin-top:-6px}.cr-slider:focus{outline:0}.cr-slider::-moz-range-track{width:100%;height:3px;background:rgba(0,0,0,.5);border:0;border-radius:3px}.cr-slider::-moz-range-thumb{border:none;height:16px;width:16px;border-radius:50%;background:#ddd;margin-top:-6px}.cr-slider:-moz-focusring{outline:#fff solid 1px;outline-offset:-1px}.cr-slider::-ms-track{width:100%;height:5px;background:0 0;border-color:transparent;border-width:6px 0;color:transparent}.cr-slider::-ms-fill-lower{background:rgba(0,0,0,.5);border-radius:10px}.cr-slider::-ms-fill-upper{background:rgba(0,0,0,.5);border-radius:10px}.cr-slider::-ms-thumb{border:none;height:16px;width:16px;border-radius:50%;background:#ddd;margin-top:1px}.cr-slider:focus::-ms-fill-lower{background:rgba(0,0,0,.5)}.cr-slider:focus::-ms-fill-upper{background:rgba(0,0,0,.5)}.cr-rotate-controls{position:absolute;bottom:5px;left:5px;z-index:1}.cr-rotate-controls button{border:0;background:0 0}.cr-rotate-controls i:before{display:inline-block;font-style:normal;font-weight:900;font-size:22px}.cr-rotate-l i:before{content:'\\u21BA'}.cr-rotate-r i:before{content:'\\u21BB'}\";\n}\n;\nvar Lgwt_material_design_addins_client_cropper_MaterialImageCropperClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('gwt.material.design.addins.client.cropper', 'MaterialImageCropperClientBundle_default_InlineClientBundleGenerator/1', 2719);\nfunction MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(2720, 1, {}, MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_27(){\n  return 'imageCropperJs';\n}\n;\n_.getText = function getText_26(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += '!function(e,t){\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(\"object\"==typeof exports&&\"string\"!=typeof exports.nodeName?exports:e.commonJsStrict={})}(this,function(e){function t(e){if(e in q)return e;for(var t=e[0].toUpperCase()+e.slice(1),n=T.length;n--;)if(e=T[n]+t,e in q)return e}function n(e,t){e=e||{};for(var i in t)t[i]&&t[i].constructor&&t[i].constructor===Object?(e[i]=e[i]||{},n(e[i],t[i])):e[i]=t[i];return e}function i(e,t,n){var i;return function(){var o=this,r=arguments,a=function(){i=null,n||e.apply(o,r)},s=n&&!i;clearTimeout(i),i=setTimeout(a,t),s&&e.apply(o,r)}}function o(e){if(\"createEvent\"in document){var t=document.createEvent(\"HTMLEvents\");t.initEvent(\"change\",!1,!0),e.dispatchEvent(t)}else e.fireEvent(\"onchange\")}function r(e,t,n){if(\"string\"==typeof t){var i=t;t={},t[i]=n}for(var o in t)e.style[o]=t[o]}function a(e,t){e.classList?e.classList.add(t):e.className+=\" \"+t}function s(e,t){e.classList?e.classList.remove(t):e.className=e.className.replace(t,\"\")}function l(e){return parseInt(e,10)}function u(e,t,n){var i=t||new Image;return i.style.opacity=0,new Promise(function(t){function o(){setTimeout(function(){t(i)},1)}return i.src===e?void o():(i.exifdata=null,i.removeAttribute(\"crossOrigin\"),e.match(/^https?:\\\\/\\\\/|^\\\\/\\\\//)&&i.setAttribute(\"crossOrigin\",\"anonymous\"),i.onload=function(){n?EXIF.getData(i,function(){o()}):o()},void(i.src=e))})}function c(e){var t=e.naturalWidth,n=e.naturalHeight;if(e.exifdata&&e.exifdata.Orientation>=5){var i=t;t=n,n=i}return{width:t,height:n}}function h(e){return e.exifdata.Orientation}function p(e,t,n){var i=t.width,o=t.height,r=e.getContext(\"2d\");switch(e.width=t.width,e.height=t.height,r.save(),n){case 2:r.translate(i,0),r.scale(-1,1);break;case 3:r.translate(i,o),r.rotate(180*Math.PI/180);break;case 4:r.translate(0,o),r.scale(1,-1);break;case 5:e.width=o,e.height=i,r.rotate(90*Math.PI/180),r.scale(1,-1);break;case 6:e.width=o,e.height=i,r.rotate(90*Math.PI/180),r.translate(0,-o);break;case 7:e.width=o,e.height=i,r.rotate(-90*Math.PI/180),r.translate(-i,o),r.scale(1,-1);break;case 8:e.width=o,e.height=i,r.translate(0,i),r.rotate(-90*Math.PI/180)}r.drawImage(t,0,0,i,o),r.restore()}function d(){var e,t,n,i,o,s,l=this,u=\"croppie-container\",c=l.options.viewport.type?\"cr-vp-\"+l.options.viewport.type:null;l.options.useCanvas=l.options.enableOrientation||m.call(l),l.data={},l.elements={},e=l.elements.boundary=document.createElement(\"div\"),n=l.elements.viewport=document.createElement(\"div\"),t=l.elements.img=document.createElement(\"img\"),i=l.elements.overlay=document.createElement(\"div\"),l.options.useCanvas?(l.elements.canvas=document.createElement(\"canvas\"),l.elements.preview=l.elements.canvas):l.elements.preview=l.elements.img,a(e,\"cr-boundary\"),o=l.options.boundary.width,s=l.options.boundary.height,r(e,{width:o+(isNaN(o)?\"\":\"px\"),height:s+(isNaN(s)?\"\":\"px\")}),a(n,\"cr-viewport\"),c&&a(n,c),r(n,{width:l.options.viewport.width+\"px\",height:l.options.viewport.height+\"px\"}),n.setAttribute(\"tabindex\",0),a(l.elements.preview,\"cr-image\"),a(i,\"cr-overlay\"),l.element.appendChild(e),e.appendChild(l.elements.preview),e.appendChild(n),e.appendChild(i),a(l.element,u),l.options.customClass&&a(l.element,l.options.customClass),x.call(this),l.options.enableZoom&&g.call(l),l.options.enableResize&&f.call(l)}function m(){return this.options.enableExif&&window.EXIF}function f(){function e(e){if((void 0===e.button||0===e.button)&&(e.preventDefault(),!m)){var r=p.elements.overlay.getBoundingClientRect();if(m=!0,o=e.pageX,s=e.pageY,i=-1!==e.currentTarget.className.indexOf(\"vertical\")?\"v\":\"h\",l=r.width,u=r.height,e.touches){var a=e.touches[0];o=a.pageX,s=a.pageY}window.addEventListener(\"mousemove\",t),window.addEventListener(\"touchmove\",t),window.addEventListener(\"mouseup\",n),window.addEventListener(\"touchend\",n),document.body.style[D]=\"none\"}}function t(e){var t=e.pageX,n=e.pageY;if(e.preventDefault(),e.touches){var a=e.touches[0];t=a.pageX,n=a.pageY}var c=t-o,h=n-s,m=p.options.viewport.height+h,v=p.options.viewport.width+c;\"v\"===i&&m>=f&&u>=m?(r(d,{height:m+\"px\"}),p.options.boundary.height+=h,r(p.elements.boundary,{height:p.options.boundary.height+\"px\"}),p.options.viewport.height+=h,r(p.elements.viewport,{height:p.options.viewport.height+\"px\"})):\"h\"===i&&v>=f&&l>=v&&(r(d,{width:v+\"px\"}),p.options.boundary.width+=c,r(p.elements.boundary,{width:p.options.boundary.width+\"px\"}),p.options.viewport.width+=c,r(p.elements.viewport,{width:p.options.viewport.width+\"px\"})),C.call(p),B.call(p),b.call(p),E.call(p),s=n,o=t}function n(){m=!1,window.removeEventListener(\"mousemove\",t),window.removeEventListener(\"touchmove\",t),window.removeEventListener(\"mouseup\",n),window.removeEventListener(\"touchend\",n),document.body.style[D]=\"\"}var i,o,s,l,u,c,h,p=this,d=document.createElement(\"div\"),m=!1,f=50;a(d,\"cr-resizer\"),r(d,{width:this.options.viewport.width+\"px\",height:this.options.viewport.height+\"px\"}),this.options.resizeControls.height&&(c=document.createElement(\"div\"),a(c,\"cr-resizer-vertical\"),d.appendChild(c)),this.options.resizeControls.width&&(h=document.createElement(\"div\"),a(h,\"cr-resizer-horisontal\"),d.appendChild(h)),c&&c.addEventListener(\"mousedown\",e),h&&h.addEventListener(\"mousedown\",e),this.elements.boundary.appendChild(d)}function v(e){if(this.options.enableZoom){var t=this.elements.zoomer,n=F(e,4);t.value=Math.max(t.min,Math.min(t.max,n))}}function g(){function e(){w.call(n,{value:parseFloat(o.value),origin:new $(n.elements.preview),viewportRect:n.elements.viewport.getBoundingClientRect(),transform:K.parse(n.elements.preview)})}function t(t){var i,o;i=t.wheelDelta?t.wheelDelta/1200:t.deltaY?t.deltaY/1060:t.detail?t.detail/-60:0,o=n._currentZoom+i*n._currentZoom,t.preventDefault(),v.call(n,o),e.call(n)}var n=this,i=n.elements.zoomerWrap=document.createElement(\"div\"),o=n.elements.zoomer=document.createElement(\"input\");a(i,\"cr-slider-wrap\"),a(o,\"cr-slider\"),o.type=\"range\",o.step=\"0.0001\",o.value=1,o.style.display=n.options.showZoomer?\"\":\"none\",n.element.appendChild(i),i.appendChild(o),n._currentZoom=1,n.elements.zoomer.addEventListener(\"input\",e),n.elements.zoomer.addEventListener(\"change\",e),n.options.mouseWheelZoom&&(n.elements.boundary.addEventListener(\"mousewheel\",t),n.elements.boundary.addEventListener(\"DOMMouseScroll\",t))}function w(e){function t(){var e={};e[A]=i.toString(),e[P]=a.toString(),r(n.elements.preview,e)}var n=this,i=e?e.transform:K.parse(n.elements.preview),o=e?e.viewportRect:n.elements.viewport.getBoundingClientRect(),a=e?e.origin:new $(n.elements.preview);if(n._currentZoom=e?e.value:n._currentZoom,i.scale=n._currentZoom,t(),n.options.enforceBoundary){var s=y.call(n,o),l=s.translate,u=s.origin;i.x>=l.maxX&&(a.x=u.minX,i.x=l.maxX),i.x<=l.minX&&(a.x=u.maxX,i.x=l.minX),i.y>=l.maxY&&(a.y=u.minY,i.y=l.maxY),i.y<=l.minY&&(a.y=u.maxY,i.y=l.minY)}t(),Q.call(n),E.call(n)}function y(e){var t=this,n=t._currentZoom,i=e.width,o=e.height,r=t.elements.boundary.clientWidth/2,a=t.elements.boundary.clientHeight/2,s=t.elements.preview.getBoundingClientRect(),l=s.width,u=s.height,c=i/2,h=o/2,p=-1*(c/n-r),d=p-(l*(1/n)-i*(1/n)),m=-1*(h/n-a),f=m-(u*(1/n)-o*(1/n)),v=1/n*c,g=l*(1/n)-v,w=1/n*h,y=u*(1/n)-w;return{translate:{maxX:p,minX:d,maxY:m,minY:f},origin:{maxX:g,minX:v,maxY:y,minY:w}}}function b(){var e=this,t=e._currentZoom,n=e.elements.preview.getBoundingClientRect(),i=e.elements.viewport.getBoundingClientRect(),o=K.parse(e.elements.preview.style[A]),a=new $(e.elements.preview),s=i.top-n.top+i.height/2,l=i.left-n.left+i.width/2,u={},c={};u.y=s/t,u.x=l/t,c.y=(u.y-a.y)*(1-t),c.x=(u.x-a.x)*(1-t),o.x-=c.x,o.y-=c.y;var h={};h[P]=u.x+\"px \"+u.y+\"px\",h[A]=o.toString(),r(e.elements.preview,h)}function x(){function e(e,t){var n=d.elements.preview.getBoundingClientRect(),i=p.y+t,o=p.x+e;d.options.enforceBoundary?(h.top>n.top+t&&h.bottom<n.bottom+t&&(p.y=i),h.left>n.left+e&&h.right<n.right+e&&(p.x=o)):(p.y=i,p.x=o)}function t(e){function t(e){switch(e){case i:return[1,0];case o:return[0,1];case r:return[-1,0];case a:return[0,-1]}}var i=37,o=38,r=39,a=40;if(!e.shiftKey||e.keyCode!=o&&e.keyCode!=a){if(d.options.enableKeyMovement&&e.keyCode>=37&&e.keyCode<=40){e.preventDefault();var s=t(e.keyCode);p=K.parse(d.elements.preview),document.body.style[D]=\"none\",h=d.elements.viewport.getBoundingClientRect(),n(s)}}else{var l=0;l=e.keyCode==o?parseFloat(d.elements.zoomer.value,10)+parseFloat(d.elements.zoomer.step,10):parseFloat(d.elements.zoomer.value,10)-parseFloat(d.elements.zoomer.step,10),d.setZoom(l)}}function n(t){var n=t[0],i=t[1],o={};e(n,i),o[A]=p.toString(),r(d.elements.preview,o),C.call(d),document.body.style[D]=\"\",b.call(d),E.call(d),c=0}function i(e){if((void 0===e.button||0===e.button)&&(e.preventDefault(),!m)){if(m=!0,l=e.pageX,u=e.pageY,e.touches){var t=e.touches[0];l=t.pageX,u=t.pageY}p=K.parse(d.elements.preview),window.addEventListener(\"mousemove\",a),window.addEventListener(\"touchmove\",a),window.addEventListener(\"mouseup\",s),window.addEventListener(\"touchend\",s),document.body.style[D]=\"none\",h=d.elements.viewport.getBoundingClientRect()}}function a(t){t.preventDefault();var n=t.pageX,i=t.pageY;if(t.touches){var a=t.touches[0];n=a.pageX,i=a.pageY}var s=n-l,h=i-u,m={};if(\"touchmove\"==t.type&&t.touches.length>1){var f=t.touches[0],g=t.touches[1],w=Math.sqrt((f.pageX-g.pageX)*(f.pageX-g.pageX)+(f.pageY-g.pageY)*(f.pageY-g.pageY));c||(c=w/d._currentZoom);var y=w/c;return v.call(d,y),void o(d.elements.zoomer)}e(s,h),m[A]=p.toString(),r(d.elements.preview,m),C.call(d),u=i,l=n}function s(){m=!1,window.removeEventListener(\"mousemove\",a),window.removeEventListener(\"touchmove\",a),window.removeEventListener(\"mouseup\",s),window.removeEventListener(\"touchend\",s),document.body.style[D]=\"\",b.call(d),E.call(d),c=0}var l,u,c,h,p,d=this,m=!1;d.elements.overlay.addEventListener(\"mousedown\",i),d.elements.viewport.addEventListener(\"keydown\",t),d.elements.overlay.addEventListener(\"touchstart\",i)}function C(){var e=this,t=e.elements.boundary.getBoundingClientRect(),n=e.elements.preview.getBoundingClientRect();r(e.elements.overlay,{width:n.width+\"px\",height:n.height+\"px\",top:n.top-t.top+\"px\",left:n.left-t.left+\"px\"})}function E(){var e,t=this,n=t.get();if(_.call(t))if(t.options.update.call(t,n),t.$&&\"undefined\"==typeof Prototype)t.$(t.element).trigger(\"update\",n);else{var e;window.CustomEvent?e=new CustomEvent(\"update\",{detail:n}):(e=document.createEvent(\"CustomEvent\"),e.initCustomEvent(\"update\",!0,!0,n)),t.element.dispatchEvent(e)}}function _(){return this.elements.preview.offsetHeight>0&&this.elements.preview.offsetWidth>0}function L(){var e=this,t=1,n={},i=e.elements.preview,o=e.elements.preview.getBoundingClientRect(),a=new K(0,0,t),s=new $,l=_.call(e);l&&!e.data.bound&&(e.data.bound=!0,n[A]=a.toString(),n[P]=s.toString(),n.opacity=1,r(i,n),e._originalImageWidth=o.width,e._originalImageHeight=o.height,e.options.enableZoom?B.call(e,!0):e._currentZoom=t,a.scale=e._currentZoom,n[A]=a.toString(),r(i,n),e.data.points.length?R.call(e,e.data.points):I.call(e),b.call(e),C.call(e))}function B(e){var t,n,i,r,a=this,s=0,l=1.5,u=a.elements.zoomer,c=parseFloat(u.value),h=a.elements.boundary.getBoundingClientRect(),p=a.elements.preview.getBoundingClientRect(),d=a.elements.viewport.getBoundingClientRect();a.options.enforceBoundary&&(i=d.width/(e?p.width:p.width/c),r=d.height/(e?p.height:p.height/c),s=Math.max(i,r)),s>=l&&(l=s+1),u.min=F(s,4),u.max=F(l,4),e&&(n=Math.max(h.width/p.width,h.height/p.height),t=null!==a.data.boundZoom?a.data.boundZoom:n,v.call(a,t)),o(u)}function R(e){if(4!=e.length)throw\"Croppie - Invalid number of points supplied: \"+e;var t=this,n=e[2]-e[0],i=t.elements.viewport.getBoundingClientRect(),o=t.elements.boundary.getBoundingClientRect(),a={left:i.left-o.left,top:i.top-o.top},s=i.width/n,l=e[1],u=e[0],c=-1*e[1]+a.top,h=-1*e[0]+a.left,p={};p[P]=u+\"px \"+l+\"px\",p[A]=new K(h,c,s).toString(),r(t.elements.preview,p),v.call(t,s),t._currentZoom=s}function I(){var e=this,t=e.elements.preview.getBoundingClientRect(),n=e.elements.viewport.getBoundingClientRect(),i=e.elements.boundary.getBoundingClientRect(),o=n.left-i.left,a=n.top-i.top,s=o-(t.width-n.width)/2,l=a-(t.height-n.height)/2,u=new K(s,l,e._currentZoom);r(e.elements.preview,A,u.toString())}function M(e){var t=this,n=t.elements.canvas,i=t.elements.img,o=n.getContext(\"2d\"),r=m.call(t),e=t.options.enableOrientation&&e;if(o.clearRect(0,0,n.width,n.height),n.width=i.width,n.height=i.height,r&&!e){var a=h(i);p(n,i,l(a||0,10))}else e&&p(n,i,e)}function Z(e){var t=this,n=e.points,i=l(n[0]),o=l(n[1]),r=l(n[2]),a=l(n[3]),s=r-i,u=a-o,c=e.circle,h=document.createElement(\"canvas\"),p=h.getContext(\"2d\"),d=s,m=u,f=0,v=0,g=d,w=m,y=e.outputWidth&&e.outputHeight,b=1;return y&&(g=e.outputWidth,w=e.outputHeight,b=g/d),h.width=g,h.height=w,e.backgroundColor&&(p.fillStyle=e.backgroundColor,p.fillRect(0,0,d,m)),t.options.enforceBoundary||(0>i&&(f=Math.abs(i),i=0),0>o&&(v=Math.abs(o),o=0),r>t._originalImageWidth&&(s=t._originalImageWidth-i,d=s),a>t._originalImageHeight&&(u=t._originalImageHeight-o,m=u)),1!==b&&(f*=b,v*=b,d*=b,m*=b),p.drawImage(this.elements.preview,i,o,Math.min(s,t._originalImageWidth),Math.min(u,t._originalImageHeight),f,v,d,m),c&&(p.fillStyle=\"#fff\",p.globalCompositeOperation=\"destination-in\",p.beginPath(),p.arc(d/2,m/2,d/2,0,2*Math.PI,!0),p.closePath(),p.fill()),h}function z(e){var t=e.points,n=document.createElement(\"div\"),i=document.createElement(\"img\"),o=t[2]-t[0],s=t[3]-t[1];return a(n,\"croppie-result\"),n.appendChild(i),r(i,{left:-1*t[0]+\"px\",top:-1*t[1]+\"px\"}),i.src=e.url,r(n,{width:o+\"px\",height:s+\"px\"}),n}function Y(e){return Z.call(this,e).toDataURL(e.format,e.quality)}function W(e){var t=this;return new Promise(function(n){Z.call(t,e).toBlob(function(e){n(e)},e.format,e.quality)})}function X(e,t){var n,i=this,o=[],r=null,a=m.call(i);if(\"string\"==typeof e)n=e,e={};else if(Array.isArray(e))o=e.slice();else{if(\"undefined\"==typeof e&&i.data.url)return L.call(i),E.call(i),null;n=e.url,o=e.points||[],r=\"undefined\"==typeof e.zoom?null:e.zoom}return i.data.bound=!1,i.data.url=n||i.data.url,i.data.boundZoom=r,u(n,i.elements.img,a).then(function(n){if(o.length)i.options.relative&&(o=[o[0]*n.naturalWidth/100,o[1]*n.naturalHeight/100,o[2]*n.naturalWidth/100,o[3]*n.naturalHeight/100]);else{var r,a,s=c(n),l=i.elements.viewport.getBoundingClientRect(),u=l.width/l.height,h=s.width/s.height;h>u?(a=s.height,r=a*u):(r=s.width,a=r/u);var p=(s.width-r)/2,d=(s.height-a)/2,m=p+r,f=d+a;i.data.points=[p,d,m,f]}i.data.points=o.map(function(e){return parseFloat(e)}),i.options.useCanvas&&M.call(i,e.orientation||1),L.call(i),E.call(i),t&&t()})}function F(e,t){return parseFloat(e).toFixed(t||0)}function H(){var e=this,t=e.elements.preview.getBoundingClientRect(),n=e.elements.viewport.getBoundingClientRect(),i=n.left-t.left,o=n.top-t.top,r=(n.width-e.elements.viewport.offsetWidth)/2,a=(n.height-e.elements.viewport.offsetHeight)/2,s=i+e.elements.viewport.offsetWidth+r,l=o+e.elements.viewport.offsetHeight+a,u=e._currentZoom;(u===1/0||isNaN(u))&&(u=1);var c=e.options.enforceBoundary?0:Number.NEGATIVE_INFINITY;return i=Math.max(c,i/u),o=Math.max(c,o/u),s=Math.max(c,s/u),l=Math.max(c,l/u),{points:[F(i),F(o),F(s),F(l)],zoom:u}}function k(e){var t,i=this,o=H.call(i),r=n(G,n({},e)),a=\"string\"==typeof e?e:r.type||\"base64\",s=r.size||\"viewport\",l=r.format,u=r.quality,c=r.backgroundColor,h=\"boolean\"==typeof r.circle?r.circle:\"circle\"===i.options.viewport.type,p=i.elements.viewport.getBoundingClientRect(),d=p.width/p.height;return\"viewport\"===s?(o.outputWidth=p.width,o.outputHeight=p.height):\"object\"==typeof s&&(s.width&&s.height?(o.outputWidth=s.width,o.outputHeight=s.height):s.width?(o.outputWidth=s.width,o.outputHeight=s.width/d):s.height&&(o.outputWidth=s.height*d,o.outputHeight=s.height)),J.indexOf(l)>-1&&(o.format=\"image/\"+l,o.quality=u),o.circle=h,o.url=i.data.url,o.backgroundColor=c,t=new Promise(function(e){switch(a.toLowerCase()){case\"rawcanvas\":e(Z.call(i,o));break;case\"canvas\":case\"base64\":e(Y.call(i,o));break;case\"blob\":W.call(i,o).then(e);break;default:e(z.call(i,o))}})}function j(){L.call(this)}function S(e){if(!this.options.useCanvas)throw\"Croppie: Cannot rotate without enableOrientation\";var t=this,n=t.elements.canvas,i=document.createElement(\"canvas\"),o=1;i.width=n.width,i.height=n.height;var r=i.getContext(\"2d\");r.drawImage(n,0,0),(90===e||-270===e)&&(o=6),(-90===e||270===e)&&(o=8),(180===e||-180===e)&&(o=3),p(n,i,o),w.call(t)';\n  builder.string += ',i=null}function O(){var e=this;e.element.removeChild(e.elements.boundary),s(e.element,\"croppie-container\"),e.options.enableZoom&&e.element.removeChild(e.elements.zoomerWrap),delete e.elements}function N(e,t){if(this.element=e,this.options=n(n({},N.defaults),t),\"img\"===this.element.tagName.toLowerCase()){var i=this.element;a(i,\"cr-original-image\");var o=document.createElement(\"div\");this.element.parentNode.appendChild(o),o.appendChild(i),this.element=o,this.options.url=this.options.url||i.src}if(d.call(this),this.options.url){var r={url:this.options.url,points:this.options.points};delete this.options.url,delete this.options.points,X.call(this,r)}}\"function\"!=typeof Promise&&!function(e){function t(e,t){return function(){e.apply(t,arguments)}}function n(e){if(\"object\"!=typeof this)throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof e)throw new TypeError(\"not a function\");this._state=null,this._value=null,this._deferreds=[],l(e,t(o,this),t(r,this))}function i(e){var t=this;return null===this._state?void this._deferreds.push(e):void c(function(){var n=t._state?e.onFulfilled:e.onRejected;if(null===n)return void(t._state?e.resolve:e.reject)(t._value);var i;try{i=n(t._value)}catch(o){return void e.reject(o)}e.resolve(i)})}function o(e){try{if(e===this)throw new TypeError(\"A promise cannot be resolved with itself.\");if(e&&(\"object\"==typeof e||\"function\"==typeof e)){var n=e.then;if(\"function\"==typeof n)return void l(t(n,e),t(o,this),t(r,this))}this._state=!0,this._value=e,a.call(this)}catch(i){r.call(this,i)}}function r(e){this._state=!1,this._value=e,a.call(this)}function a(){for(var e=0,t=this._deferreds.length;t>e;e++)i.call(this,this._deferreds[e]);this._deferreds=null}function s(e,t,n,i){this.onFulfilled=\"function\"==typeof e?e:null,this.onRejected=\"function\"==typeof t?t:null,this.resolve=n,this.reject=i}function l(e,t,n){var i=!1;try{e(function(e){i||(i=!0,t(e))},function(e){i||(i=!0,n(e))})}catch(o){if(i)return;i=!0,n(o)}}var u=setTimeout,c=\"function\"==typeof setImmediate&&setImmediate||function(e){u(e,1)},h=Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)};n.prototype[\"catch\"]=function(e){return this.then(null,e)},n.prototype.then=function(e,t){var o=this;return new n(function(n,r){i.call(o,new s(e,t,n,r))})},n.all=function(){var e=Array.prototype.slice.call(1===arguments.length&&h(arguments[0])?arguments[0]:arguments);return new n(function(t,n){function i(r,a){try{if(a&&(\"object\"==typeof a||\"function\"==typeof a)){var s=a.then;if(\"function\"==typeof s)return void s.call(a,function(e){i(r,e)},n)}e[r]=a,0===--o&&t(e)}catch(l){n(l)}}if(0===e.length)return t([]);for(var o=e.length,r=0;r<e.length;r++)i(r,e[r])})},n.resolve=function(e){return e&&\"object\"==typeof e&&e.constructor===n?e:new n(function(t){t(e)})},n.reject=function(e){return new n(function(t,n){n(e)})},n.race=function(e){return new n(function(t,n){for(var i=0,o=e.length;o>i;i++)e[i].then(t,n)})},n._setImmediateFn=function(e){c=e},\"undefined\"!=typeof module&&module.exports?module.exports=n:e.Promise||(e.Promise=n)}(this),\"function\"!=typeof window.CustomEvent&&!function(){function e(e,t){t=t||{bubbles:!1,cancelable:!1,detail:void 0};var n=document.createEvent(\"CustomEvent\");return n.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),n}e.prototype=window.Event.prototype,window.CustomEvent=e}(),HTMLCanvasElement.prototype.toBlob||Object.defineProperty(HTMLCanvasElement.prototype,\"toBlob\",{value:function(e,t,n){for(var i=atob(this.toDataURL(t,n).split(\",\")[1]),o=i.length,r=new Uint8Array(o),a=0;o>a;a++)r[a]=i.charCodeAt(a);e(new Blob([r],{type:t||\"image/png\"}))}});var P,A,D,T=[\"Webkit\",\"Moz\",\"ms\"],q=document.createElement(\"div\").style;A=t(\"transform\"),P=t(\"transformOrigin\"),D=t(\"userSelect\");var U={translate3d:{suffix:\", 0px\"},translate:{suffix:\"\"}},K=function(e,t,n){this.x=parseFloat(e),this.y=parseFloat(t),this.scale=parseFloat(n)};K.parse=function(e){return e.style?K.parse(e.style[A]):e.indexOf(\"matrix\")>-1||e.indexOf(\"none\")>-1?K.fromMatrix(e):K.fromString(e)},K.fromMatrix=function(e){var t=e.substring(7).split(\",\");return t.length&&\"none\"!==e||(t=[1,0,0,1,0,0]),new K(l(t[4]),l(t[5]),parseFloat(t[0]))},K.fromString=function(e){var t=e.split(\") \"),n=t[0].substring(N.globals.translate.length+1).split(\",\"),i=t.length>1?t[1].substring(6):1,o=n.length>1?n[0]:0,r=n.length>1?n[1]:0;return new K(o,r,i)},K.prototype.toString=function(){var e=U[N.globals.translate].suffix||\"\";return N.globals.translate+\"(\"+this.x+\"px, \"+this.y+\"px\"+e+\") scale(\"+this.scale+\")\"};var $=function(e){if(!e||!e.style[P])return this.x=0,void(this.y=0);var t=e.style[P].split(\" \");this.x=parseFloat(t[0]),this.y=parseFloat(t[1])};$.prototype.toString=function(){return this.x+\"px \"+this.y+\"px\"};var Q=i(C,500),G={type:\"canvas\",format:\"png\",quality:1},J=[\"jpeg\",\"webp\",\"png\"];if(window.jQuery){var V=window.jQuery;V.fn.croppie=function(e){var t=typeof e;if(\"string\"===t){var n=Array.prototype.slice.call(arguments,1),i=V(this).data(\"croppie\");return\"get\"===e?i.get():\"result\"===e?i.result.apply(i,n):\"bind\"===e?i.bind.apply(i,n):this.each(function(){var t=V(this).data(\"croppie\");if(t){var i=t[e];if(!V.isFunction(i))throw\"Croppie \"+e+\" method not found\";i.apply(t,n),\"destroy\"===e&&V(this).removeData(\"croppie\")}})}return this.each(function(){var t=new N(this,e);t.$=V,V(this).data(\"croppie\",t)})}}N.defaults={viewport:{width:100,height:100,type:\"square\"},boundary:{},orientationControls:{enabled:!0,leftClass:\"\",rightClass:\"\"},resizeControls:{width:!0,height:!0},customClass:\"\",showZoomer:!0,enableZoom:!0,enableResize:!1,mouseWheelZoom:!0,enableExif:!1,enforceBoundary:!0,enableOrientation:!1,enableKeyMovement:!0,update:function(){}},N.globals={translate:\"translate3d\"},n(N.prototype,{bind:function(e,t){return X.call(this,e,t)},get:function(){var e=H.call(this),t=e.points;return this.options.relative&&(t[0]/=this.elements.img.naturalWidth/100,t[1]/=this.elements.img.naturalHeight/100,t[2]/=this.elements.img.naturalWidth/100,t[3]/=this.elements.img.naturalHeight/100),e},result:function(e){return k.call(this,e)},refresh:function(){return j.call(this)},setZoom:function(e){v.call(this,e),o(this.elements.zoomer)},rotate:function(e){S.call(this,e)},destroy:function(){return O.call(this)}}),e.Croppie=window.Croppie=N,\"object\"==typeof module&&module.exports&&(module.exports=N)});';\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_cropper_MaterialImageCropperClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass('gwt.material.design.addins.client.cropper', 'MaterialImageCropperClientBundle_default_InlineClientBundleGenerator/2', 2720);\nfunction $clinit_MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$imageCropperCssInitializer(){\n  $clinit_MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$imageCropperCssInitializer = emptyMethod;\n  imageCropperCss = new MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$imageCropperJsInitializer(){\n  $clinit_MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$imageCropperJsInitializer = emptyMethod;\n  imageCropperJs = new MaterialImageCropperClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nvar imageCropperDebugCss, imageCropperDebugJs;\nfunction MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2717, 1, {}, MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_28(){\n  return 'imageCropperDebugCss';\n}\n;\n_.getText = function getText_27(){\n  return \".croppie-container {\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.croppie-container .cr-image {\\n    z-index: -1;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    transform-origin: 0 0;\\n    max-height: none;\\n    max-width: none;\\n}\\n\\n.croppie-container .cr-boundary {\\n    position: relative;\\n    overflow: hidden;\\n    margin: 0 auto;\\n    z-index: 1;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.croppie-container .cr-viewport,\\n.croppie-container .cr-resizer {\\n    position: absolute;\\n    border: 2px solid #fff;\\n    margin: auto;\\n    top: 0;\\n    bottom: 0;\\n    right: 0;\\n    left: 0;\\n    box-shadow: 0 0 2000px 2000px rgba(0, 0, 0, 0.5);\\n    z-index: 0;\\n}\\n\\n.croppie-container .cr-resizer {\\n  z-index: 2;\\n  box-shadow: none;\\n  pointer-events: none;\\n}\\n\\n.croppie-container .cr-resizer-vertical,\\n.croppie-container .cr-resizer-horisontal {\\n  position: absolute;\\n  pointer-events: all;\\n}\\n\\n.croppie-container .cr-resizer-vertical::after,\\n.croppie-container .cr-resizer-horisontal::after {\\n    display: block;\\n    position: absolute;\\n    box-sizing: border-box;\\n    border: 1px solid black;\\n    background: #fff;\\n    width: 10px;\\n    height: 10px;\\n    content: '';\\n}\\n\\n.croppie-container .cr-resizer-vertical {\\n  bottom: -5px;\\n  cursor: row-resize;\\n  width: 100%;\\n  height: 10px;\\n}\\n\\n.croppie-container .cr-resizer-vertical::after {\\n    left: 50%;\\n    margin-left: -5px;\\n}\\n\\n.croppie-container .cr-resizer-horisontal {\\n  right: -5px;\\n  cursor: col-resize;\\n  width: 10px;\\n  height: 100%;\\n}\\n\\n.croppie-container .cr-resizer-horisontal::after {\\n    top: 50%;\\n    margin-top: -5px;\\n}\\n\\n.croppie-container .cr-original-image {\\n    display: none;\\n}\\n\\n.croppie-container .cr-vp-circle {\\n    border-radius: 50%;\\n}\\n\\n.croppie-container .cr-overlay {\\n    z-index: 1;\\n    position: absolute;\\n    cursor: move;\\n    touch-action: none;\\n}\\n\\n.croppie-container .cr-slider-wrap {\\n    width: 75%;\\n    margin: 15px auto;\\n    text-align: center;\\n}\\n\\n.croppie-result {\\n    position: relative;\\n    overflow: hidden;\\n}\\n\\n.croppie-result img {\\n    position: absolute;\\n}\\n\\n.croppie-container .cr-image,\\n.croppie-container .cr-overlay,\\n.croppie-container .cr-viewport {\\n    -webkit-transform: translateZ(0);\\n    -moz-transform: translateZ(0);\\n    -ms-transform: translateZ(0);\\n    transform: translateZ(0);\\n}\\n\\n/*************************************/\\n/***** STYLING RANGE INPUT ***********/\\n/*************************************/\\n/*http://brennaobrien.com/blog/2014/05/style-input-type-range-in-every-browser.html */\\n/*************************************/\\n\\n.cr-slider {\\n    -webkit-appearance: none;\\n/*removes default webkit styles*/\\n\\t/*border: 1px solid white; *//*fix for FF unable to apply focus style bug */\\n    width: 300px;\\n/*required for proper track sizing in FF*/\\n    max-width: 100%;\\n    padding-top: 8px;\\n    padding-bottom: 8px;\\n    background-color: transparent;\\n}\\n\\n.cr-slider::-webkit-slider-runnable-track {\\n    width: 100%;\\n    height: 3px;\\n    background: rgba(0, 0, 0, 0.5);\\n    border: 0;\\n    border-radius: 3px;\\n}\\n\\n.cr-slider::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    border: none;\\n    height: 16px;\\n    width: 16px;\\n    border-radius: 50%;\\n    background: #ddd;\\n    margin-top: -6px;\\n}\\n\\n.cr-slider:focus {\\n    outline: none;\\n}\\n/*\\n.cr-slider:focus::-webkit-slider-runnable-track {\\nbackground: #ccc;\\n}\\n*/\\n\\n.cr-slider::-moz-range-track {\\n    width: 100%;\\n    height: 3px;\\n    background: rgba(0, 0, 0, 0.5);\\n    border: 0;\\n    border-radius: 3px;\\n}\\n\\n.cr-slider::-moz-range-thumb {\\n    border: none;\\n    height: 16px;\\n    width: 16px;\\n    border-radius: 50%;\\n    background: #ddd;\\n    margin-top: -6px;\\n}\\n\\n/*hide the outline behind the border*/\\n.cr-slider:-moz-focusring {\\n    outline: 1px solid white;\\n    outline-offset: -1px;\\n}\\n\\n.cr-slider::-ms-track {\\n    width: 100%;\\n    height: 5px;\\n    background: transparent;\\n/*remove bg colour from the track, we'll use ms-fill-lower and ms-fill-upper instead */\\n\\tborder-color: transparent;/*leave room for the larger thumb to overflow with a transparent border */\\n\\tborder-width: 6px 0;\\n\\tcolor: transparent;/*remove default tick marks*/\\n}\\n.cr-slider::-ms-fill-lower {\\n\\tbackground: rgba(0, 0, 0, 0.5);\\n\\tborder-radius: 10px;\\n}\\n.cr-slider::-ms-fill-upper {\\n\\tbackground: rgba(0, 0, 0, 0.5);\\n\\tborder-radius: 10px;\\n}\\n.cr-slider::-ms-thumb {\\n\\tborder: none;\\n\\theight: 16px;\\n\\twidth: 16px;\\n\\tborder-radius: 50%;\\n\\tbackground: #ddd;\\n\\tmargin-top:1px;\\n}\\n.cr-slider:focus::-ms-fill-lower {\\n\\tbackground: rgba(0, 0, 0, 0.5);\\n}\\n.cr-slider:focus::-ms-fill-upper {\\n\\tbackground: rgba(0, 0, 0, 0.5);\\n}\\n/*******************************************/\\n\\n/***********************************/\\n/* Rotation Tools */\\n/***********************************/\\n.cr-rotate-controls {\\n\\tposition: absolute;\\n\\tbottom: 5px;\\n\\tleft: 5px;\\n\\tz-index: 1;\\n}\\n.cr-rotate-controls button {\\n\\tborder: 0;\\n\\tbackground: none;\\n}\\n.cr-rotate-controls i:before {\\n\\tdisplay: inline-block;\\n\\tfont-style: normal;\\n\\tfont-weight: 900;\\n\\tfont-size: 22px;\\n}\\n.cr-rotate-l i:before {\\n\\tcontent: '\\u21BA';\\n}\\n.cr-rotate-r i:before {\\n\\tcontent: '\\u21BB';\\n}\\n\";\n}\n;\nvar Lgwt_material_design_addins_client_cropper_MaterialImageCropperDebugClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('gwt.material.design.addins.client.cropper', 'MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator/1', 2717);\nfunction MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(2718, 1, {}, MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_29(){\n  return 'imageCropperDebugJs';\n}\n;\n_.getText = function getText_28(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += \"/*************************\\r\\n * Croppie\\r\\n * Copyright 2017\\r\\n * Foliotek\\r\\n * Version: 2.5.0\\r\\n *************************/\\r\\n(function (root, factory) {\\r\\n    if (typeof define === 'function' && define.amd) {\\r\\n        // AMD. Register as an anonymous module.\\r\\n        define(['exports'], factory);\\r\\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\\r\\n        // CommonJS\\r\\n        factory(exports);\\r\\n    } else {\\r\\n        // Browser globals\\r\\n        factory((root.commonJsStrict = {}));\\r\\n    }\\r\\n}(this, function (exports) {\\r\\n\\r\\n    /* Polyfills */\\r\\n    if (typeof Promise !== 'function') {\\r\\n        /*! promise-polyfill 3.1.0 */\\r\\n        !function(a){function b(a,b){return function(){a.apply(b,arguments)}}function c(a){if(\\\"object\\\"!=typeof this)throw new TypeError(\\\"Promises must be constructed via new\\\");if(\\\"function\\\"!=typeof a)throw new TypeError(\\\"not a function\\\");this._state=null,this._value=null,this._deferreds=[],i(a,b(e,this),b(f,this))}function d(a){var b=this;return null===this._state?void this._deferreds.push(a):void k(function(){var c=b._state?a.onFulfilled:a.onRejected;if(null===c)return void(b._state?a.resolve:a.reject)(b._value);var d;try{d=c(b._value)}catch(e){return void a.reject(e)}a.resolve(d)})}function e(a){try{if(a===this)throw new TypeError(\\\"A promise cannot be resolved with itself.\\\");if(a&&(\\\"object\\\"==typeof a||\\\"function\\\"==typeof a)){var c=a.then;if(\\\"function\\\"==typeof c)return void i(b(c,a),b(e,this),b(f,this))}this._state=!0,this._value=a,g.call(this)}catch(d){f.call(this,d)}}function f(a){this._state=!1,this._value=a,g.call(this)}function g(){for(var a=0,b=this._deferreds.length;b>a;a++)d.call(this,this._deferreds[a]);this._deferreds=null}function h(a,b,c,d){this.onFulfilled=\\\"function\\\"==typeof a?a:null,this.onRejected=\\\"function\\\"==typeof b?b:null,this.resolve=c,this.reject=d}function i(a,b,c){var d=!1;try{a(function(a){d||(d=!0,b(a))},function(a){d||(d=!0,c(a))})}catch(e){if(d)return;d=!0,c(e)}}var j=setTimeout,k=\\\"function\\\"==typeof setImmediate&&setImmediate||function(a){j(a,1)},l=Array.isArray||function(a){return\\\"[object Array]\\\"===Object.prototype.toString.call(a)};c.prototype[\\\"catch\\\"]=function(a){return this.then(null,a)},c.prototype.then=function(a,b){var e=this;return new c(function(c,f){d.call(e,new h(a,b,c,f))})},c.all=function(){var a=Array.prototype.slice.call(1===arguments.length&&l(arguments[0])?arguments[0]:arguments);return new c(function(b,c){function d(f,g){try{if(g&&(\\\"object\\\"==typeof g||\\\"function\\\"==typeof g)){var h=g.then;if(\\\"function\\\"==typeof h)return void h.call(g,function(a){d(f,a)},c)}a[f]=g,0===--e&&b(a)}catch(i){c(i)}}if(0===a.length)return b([]);for(var e=a.length,f=0;f<a.length;f++)d(f,a[f])})},c.resolve=function(a){return a&&\\\"object\\\"==typeof a&&a.constructor===c?a:new c(function(b){b(a)})},c.reject=function(a){return new c(function(b,c){c(a)})},c.race=function(a){return new c(function(b,c){for(var d=0,e=a.length;e>d;d++)a[d].then(b,c)})},c._setImmediateFn=function(a){k=a},\\\"undefined\\\"!=typeof module&&module.exports?module.exports=c:a.Promise||(a.Promise=c)}(this);\\r\\n    }\\r\\n\\r\\n    if ( typeof window.CustomEvent !== \\\"function\\\" ) {\\r\\n        (function(){\\r\\n            function CustomEvent ( event, params ) {\\r\\n                params = params || { bubbles: false, cancelable: false, detail: undefined };\\r\\n                var evt = document.createEvent( 'CustomEvent' );\\r\\n                evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\\r\\n                return evt;\\r\\n            }\\r\\n            CustomEvent.prototype = window.Event.prototype;\\r\\n            window.CustomEvent = CustomEvent;\\r\\n        }());\\r\\n    }\\r\\n\\r\\n    if (!HTMLCanvasElement.prototype.toBlob) {\\r\\n        Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\\r\\n            value: function (callback, type, quality) {\\r\\n                var binStr = atob( this.toDataURL(type, quality).split(',')[1] ),\\r\\n                len = binStr.length,\\r\\n                arr = new Uint8Array(len);\\r\\n\\r\\n                for (var i=0; i<len; i++ ) {\\r\\n                    arr[i] = binStr.charCodeAt(i);\\r\\n                }\\r\\n\\r\\n                callback( new Blob( [arr], {type: type || 'image/png'} ) );\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    /* End Polyfills */\\r\\n\\r\\n    var cssPrefixes = ['Webkit', 'Moz', 'ms'],\\r\\n        emptyStyles = document.createElement('div').style,\\r\\n        CSS_TRANS_ORG,\\r\\n        CSS_TRANSFORM,\\r\\n        CSS_USERSELECT;\\r\\n\\r\\n    function vendorPrefix(prop) {\\r\\n        if (prop in emptyStyles) {\\r\\n            return prop;\\r\\n        }\\r\\n\\r\\n        var capProp = prop[0].toUpperCase() + prop.slice(1),\\r\\n            i = cssPrefixes.length;\\r\\n\\r\\n        while (i--) {\\r\\n            prop = cssPrefixes[i] + capProp;\\r\\n            if (prop in emptyStyles) {\\r\\n                return prop;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    CSS_TRANSFORM = vendorPrefix('transform');\\r\\n    CSS_TRANS_ORG = vendorPrefix('transformOrigin');\\r\\n    CSS_USERSELECT = vendorPrefix('userSelect');\\r\\n\\r\\n    // Credits to : Andrew Dupont - http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/\\r\\n    function deepExtend(destination, source) {\\r\\n        destination = destination || {};\\r\\n        for (var property in source) {\\r\\n            if (source[property] && source[property].constructor && source[property].constructor === Object) {\\r\\n                destination[property] = destination[property] || {};\\r\\n                deepExtend(destination[property], source[property]);\\r\\n            } else {\\r\\n                destination[property] = source[property];\\r\\n            }\\r\\n        }\\r\\n        return destination;\\r\\n    }\\r\\n\\r\\n    function debounce(func, wait, immediate) {\\r\\n        var timeout;\\r\\n        return function () {\\r\\n            var context = this, args = arguments;\\r\\n            var later = function () {\\r\\n                timeout = null;\\r\\n                if (!immediate) func.apply(context, args);\\r\\n            };\\r\\n            var callNow = immediate && !timeout;\\r\\n            clearTimeout(timeout);\\r\\n            timeout = setTimeout(later, wait);\\r\\n            if (callNow) func.apply(context, args);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    function dispatchChange(element) {\\r\\n        if (\\\"createEvent\\\" in document) {\\r\\n            var evt = document.createEvent(\\\"HTMLEvents\\\");\\r\\n            evt.initEvent(\\\"change\\\", false, true);\\r\\n            element.dispatchEvent(evt);\\r\\n        }\\r\\n        else {\\r\\n            element.fireEvent(\\\"onchange\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //http://jsperf.com/vanilla-css\\r\\n    function css(el, styles, val) {\\r\\n        if (typeof (styles) === 'string') {\\r\\n            var tmp = styles;\\r\\n            styles = {};\\r\\n            styles[tmp] = val;\\r\\n        }\\r\\n\\r\\n        for (var prop in styles) {\\r\\n            el.style[prop] = styles[prop];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addClass(el, c) {\\r\\n        if (el.classList) {\\r\\n            el.classList.add(c);\\r\\n        }\\r\\n        else {\\r\\n            el.className += ' ' + c;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function removeClass(el, c) {\\r\\n        if (el.classList) {\\r\\n            el.classList.remove(c);\\r\\n        }\\r\\n        else {\\r\\n            el.className = el.className.replace(c, '');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function num(v) {\\r\\n        return parseInt(v, 10);\\r\\n    }\\r\\n\\r\\n    /* Utilities */\\r\\n    function loadImage(src, imageEl, doExif) {\\r\\n        var img = imageEl || new Image();\\r\\n        img.style.opacity = 0;\\r\\n\\r\\n        return new Promise(function (resolve) {\\r\\n            function _resolve() {\\r\\n                setTimeout(function(){\\r\\n                    resolve(img);\\r\\n                }, 1);\\r\\n            }\\r\\n\\r\\n            if (img.src === src) {// If image source hasn't changed resolve immediately\\r\\n                _resolve();\\r\\n                return;\\r\\n            } \\r\\n\\r\\n            img.exifdata = null;\\r\\n            img.removeAttribute('crossOrigin');\\r\\n            if (src.match(/^https?:\\\\/\\\\/|^\\\\/\\\\//)) {\\r\\n                img.setAttribute('crossOrigin', 'anonymous');\\r\\n            }\\r\\n            img.onload = function () {\\r\\n                if (doExif) {\\r\\n                    EXIF.getData(img, function () {\\r\\n                        _resolve();\\r\\n                    });    \\r\\n                }\\r\\n                else {\\r\\n                    _resolve();\\r\\n                }\\r\\n            };\\r\\n            img.src = src;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    function naturalImageDimensions(img) {\\r\\n        var w = img.naturalWidth;\\r\\n        var h = img.naturalHeight;\\r\\n        if (img.exifdata && img.exifdata.Orientation >= 5) {\\r\\n            var x= w;\\r\\n            w = h;\\r\\n            h = x;\\r\\n        }\\r\\n        return { width: w, height: h };\\r\\n    }\\r\\n\\r\\n    /* CSS Transform Prototype */\\r\\n    var TRANSLATE_OPTS = {\\r\\n        'translate3d': {\\r\\n            suffix: ', 0px'\\r\\n        },\\r\\n        'translate': {\\r\\n            suffix: ''\\r\\n        }\\r\\n    };\\r\\n    var Transform = function (x, y, scale) {\\r\\n        this.x = parseFloat(x);\\r\\n        this.y = parseFloat(y);\\r\\n        this.scale = parseFloat(scale);\\r\\n    };\\r\\n\\r\\n    Transform.parse = function (v) {\\r\\n        if (v.style) {\\r\\n            return Transform.parse(v.style[CSS_TRANSFORM]);\\r\\n        }\\r\\n        else if (v.indexOf('matrix') > -1 || v.indexOf('none') > -1) {\\r\\n            return Transform.fromMatrix(v);\\r\\n        }\\r\\n        else {\\r\\n            return Transform.fromString(v);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    Transform.fromMatrix = function (v) {\\r\\n        var vals = v.substring(7).split(',');\\r\\n        if (!vals.length || v === 'none') {\\r\\n            vals = [1, 0, 0, 1, 0, 0];\\r\\n        }\\r\\n\\r\\n        return new Transform(num(vals[4]), num(vals[5]), parseFloat(vals[0]));\\r\\n    };\\r\\n\\r\\n    Transform.fromString = function (v) {\\r\\n        var values = v.split(') '),\\r\\n            translate = values[0].substring(Croppie.globals.translate.length + 1).split(','),\\r\\n            scale = values.length > 1 ? values[1].substring(6) : 1,\\r\\n            x = translate.length > 1 ? translate[0] : 0,\\r\\n            y = translate.length > 1 ? translate[1] : 0;\\r\\n\\r\\n        return new Transform(x, y, scale);\\r\\n    };\\r\\n\\r\\n    Transform.prototype.toString = function () {\\r\\n        var suffix = TRANSLATE_OPTS[Croppie.globals.translate].suffix || '';\\r\\n        return Croppie.globals.translate + '(' + this.x + 'px, ' + this.y + 'px' + suffix + ') scale(' + this.scale + ')';\\r\\n    };\\r\\n\\r\\n    var TransformOrigin = function (el) {\\r\\n        if (!el || !el.style[CSS_TRANS_ORG]) {\\r\\n            this.x = 0;\\r\\n            this.y = 0;\\r\\n            return;\\r\\n        }\\r\\n        var css = el.style[CSS_TRANS_ORG].split(' ');\\r\\n        this.x = parseFloat(css[0]);\\r\\n        this.y = parseFloat(css[1]);\\r\\n    };\\r\\n\\r\\n    TransformOrigin.prototype.toString = function () {\\r\\n        return this.x + 'px ' + this.y + 'px';\\r\\n    };\\r\\n\\r\\n    function getExifOrientation (img) {\\r\\n        return img.exifdata.Orientation;\\r\\n    }\\r\\n\\r\\n    function drawCanvas(canvas, img, orientation) {\\r\\n        var width = img.width,\\r\\n            height = img.height,\\r\\n            ctx = canvas.getContext('2d');\\r\\n\\r\\n        canvas.width = img.width;\\r\\n        canvas.height = img.height;\\r\\n\\r\\n        ctx.save();\\r\\n        switch (orientation) {\\r\\n          case 2:\\r\\n             ctx.translate(width, 0);\\r\\n             ctx.scale(-1, 1);\\r\\n             break;\\r\\n\\r\\n          case 3:\\r\\n              ctx.translate(width, height);\\r\\n              ctx.rotate(180*Math.PI/180);\\r\\n              break;\\r\\n\\r\\n          case 4:\\r\\n              ctx.translate(0, height);\\r\\n              ctx.scale(1, -1);\\r\\n              break;\\r\\n\\r\\n          case 5:\\r\\n              canvas.width = height;\\r\\n              canvas.height = width;\\r\\n              ctx.rotate(90*Math.PI/180);\\r\\n              ctx.scale(1, -1);\\r\\n              break;\\r\\n\\r\\n          case 6:\\r\\n              canvas.width = height;\\r\\n              canvas.height = width;\\r\\n              ctx.rotate(90*Math.PI/180);\\r\\n              ctx.translate(0, -height);\\r\\n              break;\\r\\n\\r\\n          case 7:\\r\\n              canvas.width = height;\\r\\n              canvas.height = width;\\r\\n              ctx.rotate(-90*Math.PI/180);\\r\\n              ctx.translate(-width, height);\\r\\n              ctx.scale(1, -1);\\r\\n              break;\\r\\n\\r\\n          case 8:\\r\\n              canvas.width = height;\\r\\n              canvas.height = width;\\r\\n              ctx.translate(0, width);\\r\\n              ctx.rotate(-90*Math.PI/180);\\r\\n              break;\\r\\n        }\\r\\n        ctx.drawImage(img, 0,0, width, height);\\r\\n        ctx.restore();\\r\\n    }\\r\\n\\r\\n    /* Private Methods */\\r\\n    function _create() {\\r\\n        var self = this,\\r\\n            contClass = 'croppie-container',\\r\\n            customViewportClass = self.options.viewport.type ? 'cr-vp-' + self.options.viewport.type : null,\\r\\n            boundary, img, viewport, overlay, bw, bh;\\r\\n\\r\\n        self.options.useCanvas = self.options.enableOrientation || _hasExif.call(self);\\r\\n        // Properties on class\\r\\n        self.data = {};\\r\\n        self.elements = {};\\r\\n\\r\\n        boundary = self.elements.boundary = document.createElement('div');\\r\\n        viewport = self.elements.viewport = document.createElement('div');\\r\\n        img = self.elements.img = document.createElement('img');\\r\\n        overlay = self.elements.overlay = document.createElement('div');\\r\\n\\r\\n        if (self.options.useCanvas) {\\r\\n            self.elements.canvas = document.createElement('canvas');\\r\\n            self.elements.preview = self.elements.canvas;\\r\\n        }\\r\\n        else {\\r\\n            self.elements.preview = self.elements.img;\\r\\n        }\\r\\n\\r\\n        addClass(boundary, 'cr-boundary');\\r\\n        bw = self.options.boundary.width;\\r\\n        bh = self.options.boundary.height;\\r\\n        css(boundary, {\\r\\n            width: (bw + (isNaN(bw) ? '' : 'px')),\\r\\n            height: (bh + (isNaN(bh) ? '' : 'px'))\\r\\n        });\\r\\n\\r\\n        addClass(viewport, 'cr-viewport');\\r\\n        if (customViewportClass) {\\r\\n            addClass(viewport, customViewportClass);\\r\\n        }\\r\\n        css(viewport, {\\r\\n            width: self.options.viewport.width + 'px',\\r\\n            height: self.options.viewport.height + 'px'\\r\\n        });\\r\\n        viewport.setAttribute('tabindex', 0);\\r\\n\\r\\n        addClass(self.elements.preview, 'cr-image');\\r\\n        addClass(overlay, 'cr-overlay');\\r\\n\\r\\n        self.element.appendChild(boundary);\\r\\n        boundary.appendChild(self.elements.preview);\\r\\n        boundary.appendChild(viewport);\\r\\n        boundary.appendChild(overlay);\\r\\n\\r\\n        addClass(self.element, contClass);\\r\\n        if (self.options.customClass) {\\r\\n            addClass(self.element, self.options.customClass);\\r\\n        }\\r\\n\\r\\n        _initDraggable.call(this);\\r\\n\\r\\n        if (self.options.enableZoom) {\\r\\n            _initializeZoom.call(self);\\r\\n        }\\r\\n\\r\\n        // if (self.options.enableOrientation) {\\r\\n        //     _initRotationControls.call(self);\\r\\n        // }\\r\\n\\r\\n        if (self.options.enableResize) {\\r\\n            _initializeResize.call(self);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // function _initRotationControls () {\\r\\n    //     var self = this,\\r\\n    //         wrap, btnLeft, btnRight, iLeft, iRight;\\r\\n\\r\\n    //     wrap = document.createElement('div');\\r\\n    //     self.elements.orientationBtnLeft = btnLeft = document.createElement('button');\\r\\n    //     self.elements.orientationBtnRight = btnRight = document.createElement('button');\\r\\n\\r\\n    //     wrap.appendChild(btnLeft);\\r\\n    //     wrap.appendChild(btnRight);\\r\\n\\r\\n    //     iLeft = document.createElement('i');\\r\\n    //     iRight = document.createElement('i');\\r\\n    //     btnLeft.appendChild(iLeft);\\r\\n    //     btnRight.appendChild(iRight);\\r\\n\\r\\n    //     addClass(wrap, 'cr-rotate-controls');\\r\\n    //     addClass(btnLeft, 'cr-rotate-l');\\r\\n    //     addClass(btnRight, 'cr-rotate-r');\\r\\n\\r\\n    //     self.elements.boundary.appendChild(wrap);\\r\\n\\r\\n    //     btnLeft.addEventListener('click', function () {\\r\\n    //         self.rotate(-90);\\r\\n    //     });\\r\\n    //     btnRight.addEventListener('click', function () {\\r\\n    //         self.rotate(90);\\r\\n    //     });\\r\\n    // }\\r\\n\\r\\n    function _hasExif() {\\r\\n        return this.options.enableExif && window.EXIF;\\r\\n    }\\r\\n\\r\\n    function _initializeResize () {\\r\\n        var self = this;\\r\\n        var wrap = document.createElement('div');\\r\\n        var isDragging = false;\\r\\n        var direction;\\r\\n        var originalX;\\r\\n        var originalY;\\r\\n        var minSize = 50;\\r\\n        var maxWidth;\\r\\n        var maxHeight;\\r\\n        var vr;\\r\\n        var hr;\\r\\n\\r\\n        addClass(wrap, 'cr-resizer');\\r\\n        css(wrap, {\\r\\n            width: this.options.viewpor\";\n  builder.string += \"t.width + 'px',\\r\\n            height: this.options.viewport.height + 'px'\\r\\n        });\\r\\n\\r\\n        if (this.options.resizeControls.height) {\\r\\n            vr = document.createElement('div');\\r\\n            addClass(vr, 'cr-resizer-vertical');\\r\\n            wrap.appendChild(vr);\\r\\n        }\\r\\n\\r\\n        if (this.options.resizeControls.width) {\\r\\n            hr = document.createElement('div');\\r\\n            addClass(hr, 'cr-resizer-horisontal');\\r\\n            wrap.appendChild(hr);\\r\\n        }\\r\\n\\r\\n        function mouseDown(ev) {\\r\\n            if (ev.button !== undefined && ev.button !== 0) return;\\r\\n\\r\\n            ev.preventDefault();\\r\\n            if (isDragging) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            var overlayRect = self.elements.overlay.getBoundingClientRect();\\r\\n\\r\\n            isDragging = true;\\r\\n            originalX = ev.pageX;\\r\\n            originalY = ev.pageY;\\r\\n            direction = ev.currentTarget.className.indexOf('vertical') !== -1 ? 'v' : 'h';\\r\\n            maxWidth = overlayRect.width;\\r\\n            maxHeight = overlayRect.height;\\r\\n\\r\\n            if (ev.touches) {\\r\\n                var touches = ev.touches[0];\\r\\n                originalX = touches.pageX;\\r\\n                originalY = touches.pageY;\\r\\n            }\\r\\n\\r\\n            window.addEventListener('mousemove', mouseMove);\\r\\n            window.addEventListener('touchmove', mouseMove);\\r\\n            window.addEventListener('mouseup', mouseUp);\\r\\n            window.addEventListener('touchend', mouseUp);\\r\\n            document.body.style[CSS_USERSELECT] = 'none';\\r\\n        }\\r\\n\\r\\n        function mouseMove(ev) {\\r\\n            var pageX = ev.pageX;\\r\\n            var pageY = ev.pageY;\\r\\n\\r\\n            ev.preventDefault();\\r\\n\\r\\n            if (ev.touches) {\\r\\n                var touches = ev.touches[0];\\r\\n                pageX = touches.pageX;\\r\\n                pageY = touches.pageY;\\r\\n            }\\r\\n\\r\\n            var deltaX = pageX - originalX;\\r\\n            var deltaY = pageY - originalY;\\r\\n            var newHeight = self.options.viewport.height + deltaY;\\r\\n            var newWidth = self.options.viewport.width + deltaX;\\r\\n\\r\\n            if (direction === 'v' && newHeight >= minSize && newHeight <= maxHeight) {\\r\\n                css(wrap, {\\r\\n                    height: newHeight + 'px'\\r\\n                });\\r\\n\\r\\n                self.options.boundary.height += deltaY;\\r\\n                css(self.elements.boundary, {\\r\\n                    height: self.options.boundary.height + 'px'\\r\\n                });\\r\\n\\r\\n                self.options.viewport.height += deltaY;\\r\\n                css(self.elements.viewport, {\\r\\n                    height: self.options.viewport.height + 'px'\\r\\n                });\\r\\n            }\\r\\n            else if (direction === 'h' && newWidth >= minSize && newWidth <= maxWidth) {\\r\\n                css(wrap, {\\r\\n                    width: newWidth + 'px'\\r\\n                });\\r\\n\\r\\n                self.options.boundary.width += deltaX;\\r\\n                css(self.elements.boundary, {\\r\\n                    width: self.options.boundary.width + 'px'\\r\\n                });\\r\\n\\r\\n                self.options.viewport.width += deltaX;\\r\\n                css(self.elements.viewport, {\\r\\n                    width: self.options.viewport.width + 'px'\\r\\n                }); \\r\\n            }\\r\\n\\r\\n            _updateOverlay.call(self);\\r\\n            _updateZoomLimits.call(self);\\r\\n            _updateCenterPoint.call(self);\\r\\n            _triggerUpdate.call(self);\\r\\n            originalY = pageY;\\r\\n            originalX = pageX;\\r\\n        }\\r\\n\\r\\n        function mouseUp() {\\r\\n            isDragging = false;\\r\\n            window.removeEventListener('mousemove', mouseMove);\\r\\n            window.removeEventListener('touchmove', mouseMove);\\r\\n            window.removeEventListener('mouseup', mouseUp);\\r\\n            window.removeEventListener('touchend', mouseUp);\\r\\n            document.body.style[CSS_USERSELECT] = '';\\r\\n        }\\r\\n\\r\\n        if (vr) {\\r\\n            vr.addEventListener('mousedown', mouseDown);\\r\\n        }\\r\\n\\r\\n        if (hr) {\\r\\n            hr.addEventListener('mousedown', mouseDown);\\r\\n        }\\r\\n\\r\\n        this.elements.boundary.appendChild(wrap);\\r\\n    }\\r\\n\\r\\n    function _setZoomerVal(v) {\\r\\n        if (this.options.enableZoom) {\\r\\n            var z = this.elements.zoomer,\\r\\n                val = fix(v, 4);\\r\\n\\r\\n            z.value = Math.max(z.min, Math.min(z.max, val));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _initializeZoom() {\\r\\n        var self = this,\\r\\n            wrap = self.elements.zoomerWrap = document.createElement('div'),\\r\\n            zoomer = self.elements.zoomer = document.createElement('input');\\r\\n\\r\\n        addClass(wrap, 'cr-slider-wrap');\\r\\n        addClass(zoomer, 'cr-slider');\\r\\n        zoomer.type = 'range';\\r\\n        zoomer.step = '0.0001';\\r\\n        zoomer.value = 1;\\r\\n        zoomer.style.display = self.options.showZoomer ? '' : 'none';\\r\\n\\r\\n        self.element.appendChild(wrap);\\r\\n        wrap.appendChild(zoomer);\\r\\n\\r\\n        self._currentZoom = 1;\\r\\n\\r\\n        function change() {\\r\\n            _onZoom.call(self, {\\r\\n                value: parseFloat(zoomer.value),\\r\\n                origin: new TransformOrigin(self.elements.preview),\\r\\n                viewportRect: self.elements.viewport.getBoundingClientRect(),\\r\\n                transform: Transform.parse(self.elements.preview)\\r\\n            });\\r\\n        }\\r\\n\\r\\n        function scroll(ev) {\\r\\n            var delta, targetZoom;\\r\\n\\r\\n            if (ev.wheelDelta) {\\r\\n                delta = ev.wheelDelta / 1200; //wheelDelta min: -120 max: 120 // max x 10 x 2\\r\\n            } else if (ev.deltaY) {\\r\\n                delta = ev.deltaY / 1060; //deltaY min: -53 max: 53 // max x 10 x 2\\r\\n            } else if (ev.detail) {\\r\\n                delta = ev.detail / -60; //delta min: -3 max: 3 // max x 10 x 2\\r\\n            } else {\\r\\n                delta = 0;\\r\\n            }\\r\\n\\r\\n            targetZoom = self._currentZoom + (delta * self._currentZoom);\\r\\n\\r\\n            ev.preventDefault();\\r\\n            _setZoomerVal.call(self, targetZoom);\\r\\n            change.call(self);\\r\\n        }\\r\\n\\r\\n        self.elements.zoomer.addEventListener('input', change);// this is being fired twice on keypress\\r\\n        self.elements.zoomer.addEventListener('change', change);\\r\\n\\r\\n        if (self.options.mouseWheelZoom) {\\r\\n            self.elements.boundary.addEventListener('mousewheel', scroll);\\r\\n            self.elements.boundary.addEventListener('DOMMouseScroll', scroll);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _onZoom(ui) {\\r\\n        var self = this,\\r\\n            transform = ui ? ui.transform : Transform.parse(self.elements.preview),\\r\\n            vpRect = ui ? ui.viewportRect : self.elements.viewport.getBoundingClientRect(),\\r\\n            origin = ui ? ui.origin : new TransformOrigin(self.elements.preview);\\r\\n\\r\\n        function applyCss() {\\r\\n            var transCss = {};\\r\\n            transCss[CSS_TRANSFORM] = transform.toString();\\r\\n            transCss[CSS_TRANS_ORG] = origin.toString();\\r\\n            css(self.elements.preview, transCss);\\r\\n        }\\r\\n\\r\\n        self._currentZoom = ui ? ui.value : self._currentZoom;\\r\\n        transform.scale = self._currentZoom;\\r\\n        applyCss();\\r\\n\\r\\n        if (self.options.enforceBoundary) {\\r\\n            var boundaries = _getVirtualBoundaries.call(self, vpRect),\\r\\n                transBoundaries = boundaries.translate,\\r\\n                oBoundaries = boundaries.origin;\\r\\n\\r\\n            if (transform.x >= transBoundaries.maxX) {\\r\\n                origin.x = oBoundaries.minX;\\r\\n                transform.x = transBoundaries.maxX;\\r\\n            }\\r\\n\\r\\n            if (transform.x <= transBoundaries.minX) {\\r\\n                origin.x = oBoundaries.maxX;\\r\\n                transform.x = transBoundaries.minX;\\r\\n            }\\r\\n\\r\\n            if (transform.y >= transBoundaries.maxY) {\\r\\n                origin.y = oBoundaries.minY;\\r\\n                transform.y = transBoundaries.maxY;\\r\\n            }\\r\\n\\r\\n            if (transform.y <= transBoundaries.minY) {\\r\\n                origin.y = oBoundaries.maxY;\\r\\n                transform.y = transBoundaries.minY;\\r\\n            }\\r\\n        }\\r\\n        applyCss();\\r\\n        _debouncedOverlay.call(self);\\r\\n        _triggerUpdate.call(self);\\r\\n    }\\r\\n\\r\\n    function _getVirtualBoundaries(viewport) {\\r\\n        var self = this,\\r\\n            scale = self._currentZoom,\\r\\n            vpWidth = viewport.width,\\r\\n            vpHeight = viewport.height,\\r\\n            centerFromBoundaryX = self.elements.boundary.clientWidth / 2,\\r\\n            centerFromBoundaryY = self.elements.boundary.clientHeight / 2,\\r\\n            imgRect = self.elements.preview.getBoundingClientRect(),\\r\\n            curImgWidth = imgRect.width,\\r\\n            curImgHeight = imgRect.height,\\r\\n            halfWidth = vpWidth / 2,\\r\\n            halfHeight = vpHeight / 2;\\r\\n\\r\\n        var maxX = ((halfWidth / scale) - centerFromBoundaryX) * -1;\\r\\n        var minX = maxX - ((curImgWidth * (1 / scale)) - (vpWidth * (1 / scale)));\\r\\n\\r\\n        var maxY = ((halfHeight / scale) - centerFromBoundaryY) * -1;\\r\\n        var minY = maxY - ((curImgHeight * (1 / scale)) - (vpHeight * (1 / scale)));\\r\\n\\r\\n        var originMinX = (1 / scale) * halfWidth;\\r\\n        var originMaxX = (curImgWidth * (1 / scale)) - originMinX;\\r\\n\\r\\n        var originMinY = (1 / scale) * halfHeight;\\r\\n        var originMaxY = (curImgHeight * (1 / scale)) - originMinY;\\r\\n\\r\\n        return {\\r\\n            translate: {\\r\\n                maxX: maxX,\\r\\n                minX: minX,\\r\\n                maxY: maxY,\\r\\n                minY: minY\\r\\n            },\\r\\n            origin: {\\r\\n                maxX: originMaxX,\\r\\n                minX: originMinX,\\r\\n                maxY: originMaxY,\\r\\n                minY: originMinY\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n\\r\\n    function _updateCenterPoint() {\\r\\n        var self = this,\\r\\n            scale = self._currentZoom,\\r\\n            data = self.elements.preview.getBoundingClientRect(),\\r\\n            vpData = self.elements.viewport.getBoundingClientRect(),\\r\\n            transform = Transform.parse(self.elements.preview.style[CSS_TRANSFORM]),\\r\\n            pc = new TransformOrigin(self.elements.preview),\\r\\n            top = (vpData.top - data.top) + (vpData.height / 2),\\r\\n            left = (vpData.left - data.left) + (vpData.width / 2),\\r\\n            center = {},\\r\\n            adj = {};\\r\\n\\r\\n        center.y = top / scale;\\r\\n        center.x = left / scale;\\r\\n\\r\\n        adj.y = (center.y - pc.y) * (1 - scale);\\r\\n        adj.x = (center.x - pc.x) * (1 - scale);\\r\\n\\r\\n        transform.x -= adj.x;\\r\\n        transform.y -= adj.y;\\r\\n\\r\\n        var newCss = {};\\r\\n        newCss[CSS_TRANS_ORG] = center.x + 'px ' + center.y + 'px';\\r\\n        newCss[CSS_TRANSFORM] = transform.toString();\\r\\n        css(self.elements.preview, newCss);\\r\\n    }\\r\\n\\r\\n    function _initDraggable() {\\r\\n        var self = this,\\r\\n            isDragging = false,\\r\\n            originalX,\\r\\n            originalY,\\r\\n            originalDistance,\\r\\n            vpRect,\\r\\n            transform;\\r\\n\\r\\n        function assignTransformCoordinates(deltaX, deltaY) {\\r\\n            var imgRect = self.elements.preview.getBoundingClientRect(),\\r\\n                top = transform.y + deltaY,\\r\\n                left = transform.x + deltaX;\\r\\n\\r\\n            if (self.options.enforceBoundary) {\\r\\n                if (vpRect.top > imgRect.top + deltaY && vpRect.bottom < imgRect.bottom + deltaY) {\\r\\n                    transform.y = top;\\r\\n                }\\r\\n\\r\\n                if (vpRect.left > imgRect.left + deltaX && vpRect.right < imgRect.right + deltaX) {\\r\\n                    transform.x = left;\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                transform.y = top;\\r\\n                transform.x = left;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        function keyDown(ev) {\\r\\n            var LEFT_ARROW  = 37,\\r\\n                UP_ARROW    = 38,\\r\\n                RIGHT_ARROW = 39,\\r\\n                DOWN_ARROW  = 40;\\r\\n\\r\\n            if (ev.shiftKey && (ev.keyCode == UP_ARROW || ev.keyCode == DOWN_ARROW)) {\\r\\n                var zoom = 0.0;\\r\\n                if (ev.keyCode == UP_ARROW) {\\r\\n                    zoom = parseFloat(self.elements.zoomer.value, 10) + parseFloat(self.elements.zoomer.step, 10)\\r\\n                }\\r\\n                else {\\r\\n                    zoom = parseFloat(self.elements.zoomer.value, 10) - parseFloat(self.elements.zoomer.step, 10)\\r\\n                }\\r\\n                self.setZoom(zoom);\\r\\n            }\\r\\n            else if (self.options.enableKeyMovement && (ev.keyCode >= 37 && ev.keyCode <= 40)) {\\r\\n                ev.preventDefault();\\r\\n                var movement = parseKeyDown(ev.keyCode);\\r\\n\\r\\n                transform = Transform.parse(self.elements.preview);\\r\\n                document.body.style[CSS_USERSELECT] = 'none';\\r\\n                vpRect = self.elements.viewport.getBoundingClientRect();\\r\\n                keyMove(movement);\\r\\n            };\\r\\n\\r\\n            function parseKeyDown(key) {\\r\\n                switch (key) {\\r\\n                    case LEFT_ARROW:\\r\\n                        return [1, 0];\\r\\n                    case UP_ARROW:\\r\\n                        return [0, 1];\\r\\n                    case RIGHT_ARROW:\\r\\n                        return [-1, 0];\\r\\n                    case DOWN_ARROW:\\r\\n                        return [0, -1];\\r\\n                };\\r\\n            };\\r\\n        }\\r\\n\\r\\n        function keyMove(movement) {\\r\\n            var deltaX = movement[0],\\r\\n                deltaY = movement[1],\\r\\n                newCss = {};\\r\\n\\r\\n            assignTransformCoordinates(deltaX, deltaY);\\r\\n\\r\\n            newCss[CSS_TRANSFORM] = transform.toString();\\r\\n            css(self.elements.preview, newCss);\\r\\n            _updateOverlay.call(self);\\r\\n            document.body.style[CSS_USERSELECT] = '';\\r\\n            _updateCenterPoint.call(self);\\r\\n            _triggerUpdate.call(self);\\r\\n            originalDistance = 0;\\r\\n        }\\r\\n\\r\\n        function mouseDown(ev) {\\r\\n            if (ev.button !== undefined && ev.button !== 0) return;\\r\\n\\r\\n            ev.preventDefault();\\r\\n            if (isDragging) return;\\r\\n            isDragging = true;\\r\\n            originalX = ev.pageX;\\r\\n            originalY = ev.pageY;\\r\\n\\r\\n            if (ev.touches) {\\r\\n                var touches = ev.touches[0];\\r\\n                originalX = touches.pageX;\\r\\n                originalY = touches.pageY;\\r\\n            }\\r\\n\\r\\n            transform = Transform.parse(self.elements.preview);\\r\\n            window.addEventListener('mousemove', mouseMove);\\r\\n            window.addEventListener('touchmove', mouseMove);\\r\\n            window.addEventListener('mouseup', mouseUp);\\r\\n            window.addEventListener('touchend', mouseUp);\\r\\n            document.body.style[CSS_USERSELECT] = 'none';\\r\\n            vpRect = self.elements.viewport.getBoundingClientRect();\\r\\n        }\\r\\n\\r\\n        function mouseMove(ev) {\\r\\n            ev.preventDefault();\\r\\n            var pageX = ev.pageX,\\r\\n                pageY = ev.pageY;\\r\\n\\r\\n            if (ev.touches) {\\r\\n                var touches = ev.touches[0];\\r\\n                pageX = touches.pageX;\\r\\n                pageY = touches.pageY;\\r\\n            }\\r\\n\\r\\n            var deltaX = pageX - originalX,\\r\\n                deltaY = pageY - originalY,\\r\\n                newCss = {};\\r\\n\\r\\n            if (ev.type == 'touchmove') {\\r\\n                if (ev.touches.length > 1) {\\r\\n                    var touch1 = ev.touches[0];\\r\\n                    var touch2 = ev.touches[1];\\r\\n                    var dist = Math.sqrt((touch1.pageX - touch2.pageX) * (touch1.pageX - touch2.pageX) + (touch1.pageY - touch2.pageY) * (touch1.pageY - touch2.pageY));\\r\\n\\r\\n                    if (!originalDistance) {\\r\\n                        originalDistance = dist / self._currentZoom;\\r\\n                    }\\r\\n\\r\\n                    var scale = dist / originalDistance;\\r\\n\\r\\n                    _setZoomerVal.call(self, scale);\\r\\n                    dispatchChange(self.elements.zoomer);\\r\\n                    return;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            assignTransformCoordinates(deltaX, deltaY);\\r\\n\\r\\n            newCss[CSS_TRANSFORM] = transform.toString();\\r\\n            css(self.elements.preview, newCss);\\r\\n            _updateOverlay.call(self);\\r\\n            originalY = pageY;\\r\\n            originalX = pageX;\\r\\n        }\\r\\n\\r\\n        function mouseUp() {\\r\\n            isDragging = false;\\r\\n            window.removeEventListener('mousemove', mouseMove);\\r\\n            window.removeEventListener('touchmove', mouseMove);\\r\\n            window.removeEventListener('mouseup', mouseUp);\\r\\n            window.removeEventL\";\n  builder.string += \"istener('touchend', mouseUp);\\r\\n            document.body.style[CSS_USERSELECT] = '';\\r\\n            _updateCenterPoint.call(self);\\r\\n            _triggerUpdate.call(self);\\r\\n            originalDistance = 0;\\r\\n        }\\r\\n\\r\\n        self.elements.overlay.addEventListener('mousedown', mouseDown);\\r\\n        self.elements.viewport.addEventListener('keydown', keyDown);\\r\\n        self.elements.overlay.addEventListener('touchstart', mouseDown);\\r\\n    }\\r\\n\\r\\n    function _updateOverlay() {\\r\\n        var self = this,\\r\\n            boundRect = self.elements.boundary.getBoundingClientRect(),\\r\\n            imgData = self.elements.preview.getBoundingClientRect();\\r\\n\\r\\n        css(self.elements.overlay, {\\r\\n            width: imgData.width + 'px',\\r\\n            height: imgData.height + 'px',\\r\\n            top: (imgData.top - boundRect.top) + 'px',\\r\\n            left: (imgData.left - boundRect.left) + 'px'\\r\\n        });\\r\\n    }\\r\\n    var _debouncedOverlay = debounce(_updateOverlay, 500);\\r\\n\\r\\n    function _triggerUpdate() {\\r\\n        var self = this,\\r\\n            data = self.get(),\\r\\n            ev;\\r\\n\\r\\n        if (!_isVisible.call(self)) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        self.options.update.call(self, data);\\r\\n        if (self.$ && typeof Prototype == 'undefined') {\\r\\n            self.$(self.element).trigger('update', data); \\r\\n        }\\r\\n        else {\\r\\n            var ev;\\r\\n            if (window.CustomEvent) {\\r\\n                ev = new CustomEvent('update', { detail: data });\\r\\n            } else {\\r\\n                ev = document.createEvent('CustomEvent');\\r\\n                ev.initCustomEvent('update', true, true, data);\\r\\n            }\\r\\n\\r\\n            self.element.dispatchEvent(ev);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _isVisible() {\\r\\n        return this.elements.preview.offsetHeight > 0 && this.elements.preview.offsetWidth > 0;\\r\\n    }\\r\\n\\r\\n    function _updatePropertiesFromImage() {\\r\\n        var self = this,\\r\\n            initialZoom = 1,\\r\\n            cssReset = {},\\r\\n            img = self.elements.preview,\\r\\n            imgData = self.elements.preview.getBoundingClientRect(),\\r\\n            transformReset = new Transform(0, 0, initialZoom),\\r\\n            originReset = new TransformOrigin(),\\r\\n            isVisible = _isVisible.call(self);\\r\\n\\r\\n        if (!isVisible || self.data.bound) {\\r\\n            // if the croppie isn't visible or it doesn't need binding\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        self.data.bound = true;\\r\\n        cssReset[CSS_TRANSFORM] = transformReset.toString();\\r\\n        cssReset[CSS_TRANS_ORG] = originReset.toString();\\r\\n        cssReset['opacity'] = 1;\\r\\n        css(img, cssReset);\\r\\n\\r\\n        self._originalImageWidth = imgData.width;\\r\\n        self._originalImageHeight = imgData.height;\\r\\n\\r\\n        if (self.options.enableZoom) {\\r\\n            _updateZoomLimits.call(self, true);\\r\\n        }\\r\\n        else {\\r\\n            self._currentZoom = initialZoom;\\r\\n        }\\r\\n\\r\\n        transformReset.scale = self._currentZoom;\\r\\n        cssReset[CSS_TRANSFORM] = transformReset.toString();\\r\\n        css(img, cssReset);\\r\\n\\r\\n        if (self.data.points.length) {\\r\\n            _bindPoints.call(self, self.data.points);\\r\\n        }\\r\\n        else {\\r\\n            _centerImage.call(self);\\r\\n        }\\r\\n\\r\\n        _updateCenterPoint.call(self);\\r\\n        _updateOverlay.call(self);\\r\\n    }\\r\\n\\r\\n    function _updateZoomLimits (initial) {\\r\\n        var self = this,\\r\\n            minZoom = 0,\\r\\n            maxZoom = 1.5,\\r\\n            initialZoom,\\r\\n            defaultInitialZoom,\\r\\n            zoomer = self.elements.zoomer,\\r\\n            scale = parseFloat(zoomer.value),\\r\\n            boundaryData = self.elements.boundary.getBoundingClientRect(),\\r\\n            imgData = self.elements.preview.getBoundingClientRect(),\\r\\n            vpData = self.elements.viewport.getBoundingClientRect(),\\r\\n            minW,\\r\\n            minH;\\r\\n\\r\\n        if (self.options.enforceBoundary) {\\r\\n            minW = vpData.width / (initial ? imgData.width : imgData.width / scale);\\r\\n            minH = vpData.height / (initial ? imgData.height : imgData.height / scale);\\r\\n            minZoom = Math.max(minW, minH);\\r\\n        }\\r\\n\\r\\n        if (minZoom >= maxZoom) {\\r\\n            maxZoom = minZoom + 1;\\r\\n        }\\r\\n\\r\\n        zoomer.min = fix(minZoom, 4);\\r\\n        zoomer.max = fix(maxZoom, 4);\\r\\n\\r\\n        if (initial) {\\r\\n            defaultInitialZoom = Math.max((boundaryData.width / imgData.width), (boundaryData.height / imgData.height));\\r\\n            initialZoom = self.data.boundZoom !== null ? self.data.boundZoom : defaultInitialZoom;\\r\\n            _setZoomerVal.call(self, initialZoom);\\r\\n        }\\r\\n\\r\\n        dispatchChange(zoomer);\\r\\n    }\\r\\n\\r\\n    function _bindPoints(points) {\\r\\n        if (points.length != 4) {\\r\\n            throw \\\"Croppie - Invalid number of points supplied: \\\" + points;\\r\\n        }\\r\\n        var self = this,\\r\\n            pointsWidth = points[2] - points[0],\\r\\n            // pointsHeight = points[3] - points[1],\\r\\n            vpData = self.elements.viewport.getBoundingClientRect(),\\r\\n            boundRect = self.elements.boundary.getBoundingClientRect(),\\r\\n            vpOffset = {\\r\\n                left: vpData.left - boundRect.left,\\r\\n                top: vpData.top - boundRect.top\\r\\n            },\\r\\n            scale = vpData.width / pointsWidth,\\r\\n            originTop = points[1],\\r\\n            originLeft = points[0],\\r\\n            transformTop = (-1 * points[1]) + vpOffset.top,\\r\\n            transformLeft = (-1 * points[0]) + vpOffset.left,\\r\\n            newCss = {};\\r\\n\\r\\n        newCss[CSS_TRANS_ORG] = originLeft + 'px ' + originTop + 'px';\\r\\n        newCss[CSS_TRANSFORM] = new Transform(transformLeft, transformTop, scale).toString();\\r\\n        css(self.elements.preview, newCss);\\r\\n\\r\\n        _setZoomerVal.call(self, scale);\\r\\n        self._currentZoom = scale;\\r\\n    }\\r\\n\\r\\n    function _centerImage() {\\r\\n        var self = this,\\r\\n            imgDim = self.elements.preview.getBoundingClientRect(),\\r\\n            vpDim = self.elements.viewport.getBoundingClientRect(),\\r\\n            boundDim = self.elements.boundary.getBoundingClientRect(),\\r\\n            vpLeft = vpDim.left - boundDim.left,\\r\\n            vpTop = vpDim.top - boundDim.top,\\r\\n            w = vpLeft - ((imgDim.width - vpDim.width) / 2),\\r\\n            h = vpTop - ((imgDim.height - vpDim.height) / 2),\\r\\n            transform = new Transform(w, h, self._currentZoom);\\r\\n\\r\\n        css(self.elements.preview, CSS_TRANSFORM, transform.toString());\\r\\n    }\\r\\n\\r\\n    function _transferImageToCanvas(customOrientation) {\\r\\n        var self = this,\\r\\n            canvas = self.elements.canvas,\\r\\n            img = self.elements.img,\\r\\n            ctx = canvas.getContext('2d'),\\r\\n            exif = _hasExif.call(self),\\r\\n            customOrientation = self.options.enableOrientation && customOrientation;\\r\\n\\r\\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\\r\\n        canvas.width = img.width;\\r\\n        canvas.height = img.height;\\r\\n\\r\\n        if (exif && !customOrientation) {\\r\\n            var orientation = getExifOrientation(img);\\r\\n            drawCanvas(canvas, img, num(orientation || 0, 10));\\r\\n        } \\r\\n        else if (customOrientation) {\\r\\n            drawCanvas(canvas, img, customOrientation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _getCanvas(data) {\\r\\n        var self = this,\\r\\n            points = data.points,\\r\\n            left = num(points[0]),\\r\\n            top = num(points[1]),\\r\\n            right = num(points[2]),\\r\\n            bottom = num(points[3]),\\r\\n            width = right-left,\\r\\n            height = bottom-top,\\r\\n            circle = data.circle,\\r\\n            canvas = document.createElement('canvas'),\\r\\n            ctx = canvas.getContext('2d'),\\r\\n            outWidth = width,\\r\\n            outHeight = height,\\r\\n            startX = 0,\\r\\n            startY = 0,\\r\\n            canvasWidth = outWidth,\\r\\n            canvasHeight = outHeight,\\r\\n            customDimensions = (data.outputWidth && data.outputHeight),\\r\\n            outputRatio = 1;\\r\\n\\r\\n        if (customDimensions) {\\r\\n            canvasWidth = data.outputWidth;\\r\\n            canvasHeight = data.outputHeight;\\r\\n            outputRatio = canvasWidth / outWidth;\\r\\n        }\\r\\n\\r\\n        canvas.width = canvasWidth;\\r\\n        canvas.height = canvasHeight;\\r\\n\\r\\n        if (data.backgroundColor) {\\r\\n            ctx.fillStyle = data.backgroundColor;\\r\\n            ctx.fillRect(0, 0, outWidth, outHeight);\\r\\n        }\\r\\n\\r\\n        // start fixing data to send to draw image for enforceBoundary: false\\r\\n        if (!self.options.enforceBoundary) {\\r\\n            if (left < 0) {\\r\\n                startX = Math.abs(left);\\r\\n                left = 0;\\r\\n            }\\r\\n            if (top < 0) {\\r\\n                startY = Math.abs(top);\\r\\n                top = 0;\\r\\n            }\\r\\n            if (right > self._originalImageWidth) {\\r\\n                width = self._originalImageWidth - left;\\r\\n                outWidth = width;\\r\\n            }\\r\\n            if (bottom > self._originalImageHeight) {\\r\\n                height = self._originalImageHeight - top;\\r\\n                outHeight = height;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (outputRatio !== 1) {\\r\\n            startX *= outputRatio;\\r\\n            startY *= outputRatio;\\r\\n            outWidth *= outputRatio;\\r\\n            outHeight *= outputRatio;\\r\\n        }\\r\\n\\r\\n        ctx.drawImage(this.elements.preview, left, top, Math.min(width, self._originalImageWidth), Math.min(height, self._originalImageHeight), startX, startY, outWidth, outHeight);\\r\\n        if (circle) {\\r\\n            ctx.fillStyle = '#fff';\\r\\n            ctx.globalCompositeOperation = 'destination-in';\\r\\n            ctx.beginPath();\\r\\n            ctx.arc(outWidth / 2, outHeight / 2, outWidth / 2, 0, Math.PI * 2, true);\\r\\n            ctx.closePath();\\r\\n            ctx.fill();\\r\\n        }\\r\\n        return canvas;\\r\\n    }\\r\\n\\r\\n    function _getHtmlResult(data) {\\r\\n        var points = data.points,\\r\\n            div = document.createElement('div'),\\r\\n            img = document.createElement('img'),\\r\\n            width = points[2] - points[0],\\r\\n            height = points[3] - points[1];\\r\\n\\r\\n        addClass(div, 'croppie-result');\\r\\n        div.appendChild(img);\\r\\n        css(img, {\\r\\n            left: (-1 * points[0]) + 'px',\\r\\n            top: (-1 * points[1]) + 'px'\\r\\n        });\\r\\n        img.src = data.url;\\r\\n        css(div, {\\r\\n            width: width + 'px',\\r\\n            height: height + 'px'\\r\\n        });\\r\\n\\r\\n        return div;\\r\\n    }\\r\\n\\r\\n    function _getBase64Result(data) {\\r\\n        return _getCanvas.call(this, data).toDataURL(data.format, data.quality);\\r\\n    }\\r\\n\\r\\n    function _getBlobResult(data) {\\r\\n        var self = this;\\r\\n        return new Promise(function (resolve, reject) {\\r\\n            _getCanvas.call(self, data).toBlob(function (blob) {\\r\\n                resolve(blob);\\r\\n            }, data.format, data.quality);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    function _bind(options, cb) {\\r\\n        var self = this,\\r\\n            url,\\r\\n            points = [],\\r\\n            zoom = null,\\r\\n            hasExif = _hasExif.call(self);;\\r\\n\\r\\n        if (typeof (options) === 'string') {\\r\\n            url = options;\\r\\n            options = {};\\r\\n        }\\r\\n        else if (Array.isArray(options)) {\\r\\n            points = options.slice();\\r\\n        }\\r\\n        else if (typeof (options) == 'undefined' && self.data.url) { //refreshing\\r\\n            _updatePropertiesFromImage.call(self);\\r\\n            _triggerUpdate.call(self);\\r\\n            return null;\\r\\n        }\\r\\n        else {\\r\\n            url = options.url;\\r\\n            points = options.points || [];\\r\\n            zoom = typeof(options.zoom) === 'undefined' ? null : options.zoom;\\r\\n        }\\r\\n\\r\\n        self.data.bound = false;\\r\\n        self.data.url = url || self.data.url;\\r\\n        self.data.boundZoom = zoom;\\r\\n\\r\\n        return loadImage(url, self.elements.img, hasExif).then(function (img) {\\r\\n            if (!points.length) {\\r\\n                var natDim = naturalImageDimensions(img);\\r\\n                var rect = self.elements.viewport.getBoundingClientRect();\\r\\n                var aspectRatio = rect.width / rect.height;\\r\\n                var imgAspectRatio = natDim.width / natDim.height;\\r\\n                var width, height;\\r\\n\\r\\n                if (imgAspectRatio > aspectRatio) {\\r\\n                    height = natDim.height;\\r\\n                    width = height * aspectRatio;\\r\\n                }\\r\\n                else {\\r\\n                    width = natDim.width;\\r\\n                    height = width / aspectRatio;\\r\\n                }\\r\\n\\r\\n                var x0 = (natDim.width - width) / 2;\\r\\n                var y0 = (natDim.height - height) / 2;\\r\\n                var x1 = x0 + width;\\r\\n                var y1 = y0 + height;\\r\\n\\r\\n                self.data.points = [x0, y0, x1, y1];\\r\\n            } \\r\\n            else if (self.options.relative) {\\r\\n                points = [\\r\\n                    points[0] * img.naturalWidth / 100,\\r\\n                    points[1] * img.naturalHeight / 100,\\r\\n                    points[2] * img.naturalWidth / 100,\\r\\n                    points[3] * img.naturalHeight / 100\\r\\n                ];\\r\\n            }\\r\\n\\r\\n            self.data.points = points.map(function (p) {\\r\\n                return parseFloat(p);\\r\\n            });\\r\\n            if (self.options.useCanvas) {\\r\\n                _transferImageToCanvas.call(self, options.orientation || 1);\\r\\n            }\\r\\n            _updatePropertiesFromImage.call(self);\\r\\n            _triggerUpdate.call(self);\\r\\n            cb && cb();\\r\\n        });\\r\\n    }\\r\\n\\r\\n    function fix(v, decimalPoints) {\\r\\n        return parseFloat(v).toFixed(decimalPoints || 0);\\r\\n    }\\r\\n\\r\\n    function _get() {\\r\\n        var self = this,\\r\\n            imgData = self.elements.preview.getBoundingClientRect(),\\r\\n            vpData = self.elements.viewport.getBoundingClientRect(),\\r\\n            x1 = vpData.left - imgData.left,\\r\\n            y1 = vpData.top - imgData.top,\\r\\n            widthDiff = (vpData.width - self.elements.viewport.offsetWidth) / 2, //border\\r\\n            heightDiff = (vpData.height - self.elements.viewport.offsetHeight) / 2,\\r\\n            x2 = x1 + self.elements.viewport.offsetWidth + widthDiff,\\r\\n            y2 = y1 + self.elements.viewport.offsetHeight + heightDiff,\\r\\n            scale = self._currentZoom;\\r\\n\\r\\n        if (scale === Infinity || isNaN(scale)) {\\r\\n            scale = 1;\\r\\n        }\\r\\n\\r\\n        var max = self.options.enforceBoundary ? 0 : Number.NEGATIVE_INFINITY;\\r\\n        x1 = Math.max(max, x1 / scale);\\r\\n        y1 = Math.max(max, y1 / scale);\\r\\n        x2 = Math.max(max, x2 / scale);\\r\\n        y2 = Math.max(max, y2 / scale);\\r\\n\\r\\n        return {\\r\\n            points: [fix(x1), fix(y1), fix(x2), fix(y2)],\\r\\n            zoom: scale\\r\\n        };\\r\\n    }\\r\\n\\r\\n    var RESULT_DEFAULTS = {\\r\\n            type: 'canvas',\\r\\n            format: 'png',\\r\\n            quality: 1\\r\\n        },\\r\\n        RESULT_FORMATS = ['jpeg', 'webp', 'png'];\\r\\n\\r\\n    function _result(options) {\\r\\n        var self = this,\\r\\n            data = _get.call(self),\\r\\n            opts = deepExtend(RESULT_DEFAULTS, deepExtend({}, options)),\\r\\n            resultType = (typeof (options) === 'string' ? options : (opts.type || 'base64')),\\r\\n            size = opts.size || 'viewport',\\r\\n            format = opts.format,\\r\\n            quality = opts.quality,\\r\\n            backgroundColor = opts.backgroundColor,\\r\\n            circle = typeof opts.circle === 'boolean' ? opts.circle : (self.options.viewport.type === 'circle'),\\r\\n            vpRect = self.elements.viewport.getBoundingClientRect(),\\r\\n            ratio = vpRect.width / vpRect.height,\\r\\n            prom;\\r\\n\\r\\n        if (size === 'viewport') {\\r\\n            data.outputWidth = vpRect.width;\\r\\n            data.outputHeight = vpRect.height;\\r\\n        } else if (typeof size === 'object') {\\r\\n            if (size.width && size.height) {\\r\\n                data.outputWidth = size.width;\\r\\n                data.outputHeight = size.height;\\r\\n            } else if (size.width) {\\r\\n                data.outputWidth = size.width;\\r\\n                data.outputHeight = size.width / ratio;\\r\\n            } else if (size.height) {\\r\\n                data.outputWidth = size.height * ratio;\\r\\n                data.outputHeight = size.height;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (RESULT_FORMATS.indexOf(format) > -1) {\\r\\n            data.format = 'image/' + format;\\r\\n            data.quality = quality;\\r\\n        }\\r\\n\\r\\n        data.circle = circle;\\r\\n        data.url = self.data.url;\\r\\n        data.backgroundColor = backgroundColor;\\r\\n\\r\\n        prom = new Promise(\";\n  builder.string += \"function (resolve, reject) {\\r\\n            switch(resultType.toLowerCase())\\r\\n            {\\r\\n                case 'rawcanvas':\\r\\n                    resolve(_getCanvas.call(self, data));\\r\\n                    break;\\r\\n                case 'canvas':\\r\\n                case 'base64':\\r\\n                    resolve(_getBase64Result.call(self, data));\\r\\n                    break;\\r\\n                case 'blob':\\r\\n                    _getBlobResult.call(self, data).then(resolve);\\r\\n                    break;\\r\\n                default:\\r\\n                    resolve(_getHtmlResult.call(self, data));\\r\\n                    break;\\r\\n            }\\r\\n        });\\r\\n        return prom;\\r\\n    }\\r\\n\\r\\n    function _refresh() {\\r\\n        _updatePropertiesFromImage.call(this);\\r\\n    }\\r\\n\\r\\n    function _rotate(deg) {\\r\\n        if (!this.options.useCanvas) {\\r\\n            throw 'Croppie: Cannot rotate without enableOrientation';\\r\\n        }\\r\\n\\r\\n        var self = this,\\r\\n            canvas = self.elements.canvas,\\r\\n            copy = document.createElement('canvas'),\\r\\n            ornt = 1;\\r\\n\\r\\n        copy.width = canvas.width;\\r\\n        copy.height = canvas.height;\\r\\n        var ctx = copy.getContext('2d');\\r\\n        ctx.drawImage(canvas, 0, 0);\\r\\n\\r\\n        if (deg === 90 || deg === -270) ornt = 6;\\r\\n        if (deg === -90 || deg === 270) ornt = 8;\\r\\n        if (deg === 180 || deg === -180) ornt = 3;\\r\\n\\r\\n        drawCanvas(canvas, copy, ornt);\\r\\n        _onZoom.call(self);\\r\\n        copy = null;\\r\\n    }\\r\\n\\r\\n    function _destroy() {\\r\\n        var self = this;\\r\\n        self.element.removeChild(self.elements.boundary);\\r\\n        removeClass(self.element, 'croppie-container');\\r\\n        if (self.options.enableZoom) {\\r\\n            self.element.removeChild(self.elements.zoomerWrap);\\r\\n        }\\r\\n        delete self.elements;\\r\\n    }\\r\\n\\r\\n    if (window.jQuery) {\\r\\n        var $ = window.jQuery;\\r\\n        $.fn.croppie = function (opts) {\\r\\n            var ot = typeof opts;\\r\\n\\r\\n            if (ot === 'string') {\\r\\n                var args = Array.prototype.slice.call(arguments, 1);\\r\\n                var singleInst = $(this).data('croppie');\\r\\n\\r\\n                if (opts === 'get') {\\r\\n                    return singleInst.get();\\r\\n                }\\r\\n                else if (opts === 'result') {\\r\\n                    return singleInst.result.apply(singleInst, args);\\r\\n                }\\r\\n                else if (opts === 'bind') {\\r\\n                    return singleInst.bind.apply(singleInst, args);\\r\\n                }\\r\\n\\r\\n                return this.each(function () {\\r\\n                    var i = $(this).data('croppie');\\r\\n                    if (!i) return;\\r\\n\\r\\n                    var method = i[opts];\\r\\n                    if ($.isFunction(method)) {\\r\\n                        method.apply(i, args);\\r\\n                        if (opts === 'destroy') {\\r\\n                            $(this).removeData('croppie');\\r\\n                        }\\r\\n                    }\\r\\n                    else {\\r\\n                        throw 'Croppie ' + opts + ' method not found';\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n            else {\\r\\n                return this.each(function () {\\r\\n                    var i = new Croppie(this, opts);\\r\\n                    i.$ = $;\\r\\n                    $(this).data('croppie', i);\\r\\n                });\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n\\r\\n    function Croppie(element, opts) {\\r\\n        this.element = element;\\r\\n        this.options = deepExtend(deepExtend({}, Croppie.defaults), opts);\\r\\n\\r\\n        if (this.element.tagName.toLowerCase() === 'img') {\\r\\n            var origImage = this.element;\\r\\n            addClass(origImage, 'cr-original-image');\\r\\n            var replacementDiv = document.createElement('div');\\r\\n            this.element.parentNode.appendChild(replacementDiv);\\r\\n            replacementDiv.appendChild(origImage);\\r\\n            this.element = replacementDiv;\\r\\n            this.options.url = this.options.url || origImage.src;\\r\\n        }\\r\\n\\r\\n        _create.call(this);\\r\\n        if (this.options.url) {\\r\\n            var bindOpts = {\\r\\n                url: this.options.url,\\r\\n                points: this.options.points\\r\\n            };\\r\\n            delete this.options['url'];\\r\\n            delete this.options['points'];\\r\\n            _bind.call(this, bindOpts);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    Croppie.defaults = {\\r\\n        viewport: {\\r\\n            width: 100,\\r\\n            height: 100,\\r\\n            type: 'square'\\r\\n        },\\r\\n        boundary: { },\\r\\n        orientationControls: {\\r\\n            enabled: true,\\r\\n            leftClass: '',\\r\\n            rightClass: ''\\r\\n        },\\r\\n        resizeControls: {\\r\\n            width: true,\\r\\n            height: true\\r\\n        },\\r\\n        customClass: '',\\r\\n        showZoomer: true,\\r\\n        enableZoom: true,\\r\\n        enableResize: false,\\r\\n        mouseWheelZoom: true,\\r\\n        enableExif: false,\\r\\n        enforceBoundary: true,\\r\\n        enableOrientation: false,\\r\\n        enableKeyMovement: true,\\r\\n        update: function () { }\\r\\n    };\\r\\n\\r\\n    Croppie.globals = {\\r\\n        translate: 'translate3d'\\r\\n    };\\r\\n\\r\\n    deepExtend(Croppie.prototype, {\\r\\n        bind: function (options, cb) {\\r\\n            return _bind.call(this, options, cb);\\r\\n        },\\r\\n        get: function () {\\r\\n            var data = _get.call(this);\\r\\n            var points = data.points;\\r\\n            if (this.options.relative) {\\r\\n                points[0] /= this.elements.img.naturalWidth / 100;\\r\\n                points[1] /= this.elements.img.naturalHeight / 100;\\r\\n                points[2] /= this.elements.img.naturalWidth / 100;\\r\\n                points[3] /= this.elements.img.naturalHeight / 100;\\r\\n            }\\r\\n            return data;\\r\\n        },\\r\\n        result: function (type) {\\r\\n            return _result.call(this, type);\\r\\n        },\\r\\n        refresh: function () {\\r\\n            return _refresh.call(this);\\r\\n        },\\r\\n        setZoom: function (v) {\\r\\n            _setZoomerVal.call(this, v);\\r\\n            dispatchChange(this.elements.zoomer);\\r\\n        },\\r\\n        rotate: function (deg) {\\r\\n            _rotate.call(this, deg);\\r\\n        },\\r\\n        destroy: function () {\\r\\n            return _destroy.call(this);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    exports.Croppie = window.Croppie = Croppie;\\r\\n\\r\\n    if (typeof module === 'object' && !!module.exports) {\\r\\n        module.exports = Croppie;\\r\\n    }\\r\\n}));\\r\\n\";\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_cropper_MaterialImageCropperDebugClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass('gwt.material.design.addins.client.cropper', 'MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator/2', 2718);\nfunction $clinit_MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$imageCropperDebugCssInitializer(){\n  $clinit_MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$imageCropperDebugCssInitializer = emptyMethod;\n  imageCropperDebugCss = new MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$imageCropperDebugJsInitializer(){\n  $clinit_MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$imageCropperDebugJsInitializer = emptyMethod;\n  imageCropperDebugJs = new MaterialImageCropperDebugClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nfunction $clinit_Shape(){\n  $clinit_Shape = emptyMethod;\n  SQUARE = new Shape('SQUARE', 0, 'square');\n  CIRCLE = new Shape('CIRCLE', 1, 'circle');\n}\n\nfunction Shape(enum$name, enum$ordinal, name_0){\n  Enum.call(this, enum$name, enum$ordinal);\n  this.name_0 = name_0;\n}\n\nfunction values_22(){\n  $clinit_Shape();\n  return stampJavaTypeInfo(getClassLiteralForArray(Lgwt_material_design_addins_client_cropper_constants_Shape_2_classLit, 1), $intern_11, 317, 0, [SQUARE, CIRCLE]);\n}\n\ndefineClass(317, 28, {51:1, 317:1, 129:1, 111:1, 4:1, 42:1, 28:1}, Shape);\n_.getCssName = function getCssName_55(){\n  return this.name_0;\n}\n;\nvar CIRCLE, SQUARE;\nvar Lgwt_material_design_addins_client_cropper_constants_Shape_2_classLit = createForEnum('gwt.material.design.addins.client.cropper.constants', 'Shape', 317, values_22);\nfunction $clinit_Type(){\n  $clinit_Type = emptyMethod;\n  BASE64 = new Type('BASE64', 0, 'base64');\n  HTML = new Type('HTML', 1, 'html');\n  BLOB = new Type('BLOB', 2, 'blob');\n  ROW_CANVAS = new Type('ROW_CANVAS', 3, 'rowcanvas');\n}\n\nfunction Type(enum$name, enum$ordinal, name_0){\n  Enum.call(this, enum$name, enum$ordinal);\n  this.name_0 = name_0;\n}\n\nfunction values_23(){\n  $clinit_Type();\n  return stampJavaTypeInfo(getClassLiteralForArray(Lgwt_material_design_addins_client_cropper_constants_Type_2_classLit, 1), $intern_11, 301, 0, [BASE64, HTML, BLOB, ROW_CANVAS]);\n}\n\ndefineClass(301, 28, {301:1, 4:1, 42:1, 28:1}, Type);\nvar BASE64, BLOB, HTML, ROW_CANVAS;\nvar Lgwt_material_design_addins_client_cropper_constants_Type_2_classLit = createForEnum('gwt.material.design.addins.client.cropper.constants', 'Type', 301, values_23);\nfunction $clinit_CropEvent(){\n  $clinit_CropEvent = emptyMethod;\n  TYPE_43 = new GwtEvent$Type;\n}\n\nfunction $dispatch_11(this$static, handler){\n  $lambda$0_48(handler.$$outer_0, this$static);\n}\n\nfunction CropEvent(result){\n  $clinit_CropEvent();\n  this.result = result;\n}\n\ndefineClass(1260, $intern_20, {}, CropEvent);\n_.dispatch = function dispatch_44(handler){\n  $dispatch_11(this, castTo(handler, 2852));\n}\n;\n_.getAssociatedType = function getAssociatedType_45(){\n  return TYPE_43;\n}\n;\nvar TYPE_43;\nvar Lgwt_material_design_addins_client_cropper_events_CropEvent_2_classLit = createForClass('gwt.material.design.addins.client.cropper.events', 'CropEvent', 1260);\nfunction ImageCropperPresenter(eventBus, view, proxy){\n  $clinit_PresenterWidget();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MAIN));\n}\n\ndefineClass(905, 53, $intern_54, ImageCropperPresenter);\n_.onReveal = function onReveal_10(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent('Image Cropper', 'TODO', 'addins/cropper/ImageCropperView', ''));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperPresenter_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperPresenter', 905);\nfunction $clinit_ImageCropperView(){\n  $clinit_ImageCropperView = emptyMethod;\n  values_71 = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1), $intern_3, 112, 0, [valueOf_2(200), valueOf_2(300), valueOf_2(400), valueOf_2(500)]);\n}\n\nfunction $applyDimension(this$static){\n  var boundary, viewPort;\n  if (castTo($getSingleValue(this$static.comboViewPortWidth), 112).value_0 > castTo($getSingleValue(this$static.comboBoundaryWidth), 112).value_0) {\n    $toast(new MaterialToast_0(stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_user_client_ui_Widget_2_classLit, 1), $intern_3, 21, 0, [])), 'Boundary width must be greater than the Viewport width', $intern_67, null);\n    return;\n  }\n  if (castTo($getSingleValue(this$static.comboViewPortHeight), 112).value_0 > castTo($getSingleValue(this$static.comboBoundaryHeight), 112).value_0) {\n    $toast(new MaterialToast_0(stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_user_client_ui_Widget_2_classLit, 1), $intern_3, 21, 0, [])), 'Boundary height must be greater than the Viewport height', $intern_67, null);\n    return;\n  }\n  viewPort = new $wnd.Object;\n  viewPort.width = castTo($getSingleValue(this$static.comboViewPortWidth), 112).value_0;\n  viewPort.height = castTo($getSingleValue(this$static.comboViewPortHeight), 112).value_0;\n  boundary = new $wnd.Object;\n  boundary.width = castTo($getSingleValue(this$static.comboBoundaryWidth), 112).value_0;\n  boundary.height = castTo($getSingleValue(this$static.comboBoundaryHeight), 112).value_0;\n  $setViewport(this$static.cropper, viewPort);\n  $setBoundary(this$static.cropper, boundary);\n  $reload_0(this$static.cropper);\n}\n\nfunction $enableMouseWheelZoom(this$static, event_0){\n  $setMouseWheelZoom(this$static.cropper, checkNotNull(castToBoolean(event_0.value_0)));\n  $reload_0(this$static.cropper);\n}\n\nfunction $enableOrientation(this$static, event_0){\n  $setEnableOrientation(this$static.cropper, checkNotNull(castToBoolean(event_0.value_0)));\n  $reload_0(this$static.cropper);\n}\n\nfunction $enableResize(this$static, event_0){\n  $setEnableResize(this$static.cropper, checkNotNull(castToBoolean(event_0.value_0)));\n  $reload_0(this$static.cropper);\n}\n\nfunction $enableZoom(this$static, event_0){\n  $setEnableZoom(this$static.cropper, checkNotNull(castToBoolean(event_0.value_0)));\n  $reload_0(this$static.cropper);\n}\n\nfunction $enforceBoundary(this$static, event_0){\n  $setEnforceBoundary(this$static.cropper, checkNotNull(castToBoolean(event_0.value_0)));\n  $reload_0(this$static.cropper);\n}\n\nfunction $lambda$0_48(this$static, valueChangeEvent_0){\n  $setValue_10(this$static.croppedImage, valueChangeEvent_0.result, true);\n  $open_7(this$static.modal);\n}\n\nfunction $setComboShape(this$static){\n  $setShape(this$static.cropper, castTo($getSingleValue(this$static.comboShape), 317));\n  this$static.cropper.options_0.enableResize = false;\n  $setValue_17(this$static.enableResize, ($clinit_Boolean() , $clinit_Boolean() , false), false);\n  $reload_0(this$static.cropper);\n}\n\nfunction $showZoomer(this$static, event_0){\n  $setShowZoomer(this$static.cropper, checkNotNull(castToBoolean(event_0.value_0)));\n  $reload_0(this$static.cropper);\n}\n\nfunction ImageCropperView(){\n  $clinit_ImageCropperView();\n  var boundary, value_0, value$array, value$index, value$max;\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_MaterialPanel1_3(new ImageCropperView_BinderImpl$Widgets(this)));\n  for (value$array = values_71 , value$index = 0 , value$max = value$array.length; value$index < value$max; ++value$index) {\n    value_0 = value$array[value$index];\n    boundary = value_0.value_0 * 2;\n    $addItem_3(this.comboViewPortWidth, value_0 + '', value_0);\n    $addItem_3(this.comboViewPortHeight, value_0 + '', value_0);\n    $addItem_3(this.comboBoundaryWidth, boundary + '', valueOf_2(boundary));\n    $addItem_3(this.comboBoundaryHeight, boundary + '', valueOf_2(boundary));\n  }\n  $addItem_3(this.comboShape, ($clinit_Shape() , SQUARE).name_0, SQUARE);\n  $addItem_3(this.comboShape, CIRCLE.name_0, CIRCLE);\n  $addHandler(this.cropper, new ImageCropperView$lambda$0$Type(this), ($clinit_CropEvent() , TYPE_43));\n}\n\ndefineClass(1258, 61, $intern_55, ImageCropperView);\nvar values_71;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView', 1258);\nfunction ImageCropperView$lambda$0$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1259, 1, {9:1, 2852:1}, ImageCropperView$lambda$0$Type);\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView$lambda$0$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView/lambda$0$Type', 1259);\nfunction $build_f_MaterialPanel1_3(this$static){\n  var f_MaterialPanel1, f_MaterialRow2, modal, f_MaterialTitle3, f_ExternalLibrary4, f_MaterialRow5, cropper, f_MaterialRow6, comboViewPortWidth, comboViewPortHeight, f_MaterialRow7, comboBoundaryWidth, comboBoundaryHeight, f_MaterialRow8, enableZoom, enableResize, enableMouseWheelZoom, f_MaterialRow9, showZoomer, enableOrientation, enforceBoundary, f_MaterialRow10, comboShape, f_MaterialRow11, f_MaterialColumn12, crop, f_MaterialColumn13, rotate, f_MaterialModalContent14, croppedImage, f_MaterialModalFooter15, close_0;\n  f_MaterialPanel1 = new MaterialPanel;\n  $add_9(f_MaterialPanel1, (f_MaterialRow2 = new MaterialRow , $add_9(f_MaterialRow2, (f_MaterialTitle3 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle3.header), ($clinit_SafeHtmlUtils() , (new SafeHtmlString(htmlEscape('Usage'))).html_0)) , fire_5(f_MaterialTitle3, 'Usage') , f_MaterialTitle3)) , $add_9(f_MaterialRow2, (f_ExternalLibrary4 = new ExternalLibrary , $setHref(f_ExternalLibrary4.externalLink, 'https://github.com/Foliotek/Croppie') , $setTarget(f_ExternalLibrary4.externalLink) , ($clinit_DOM() , f_ExternalLibrary4.element_0).style['marginBottom'] = ($clinit_Style$Unit() , '40.0px') , $setText_2(f_ExternalLibrary4.externalLink, 'Croppie 2.5.0') , f_ExternalLibrary4)) , $add_9(f_MaterialRow2, (f_MaterialRow5 = new MaterialRow , $add_9(f_MaterialRow5, (cropper = new MaterialImageCropper , $setValue_10(cropper, 'https://i.imgur.com/CiPPh6h.jpg', true) , this$static.owner.cropper = cropper , cropper)) , f_MaterialRow5)) , $add_9(f_MaterialRow2, (f_MaterialRow6 = new MaterialRow , $add_9(f_MaterialRow6, (comboViewPortWidth = new MaterialComboBox , $setGrid((!comboViewPortWidth.gridMixin && (comboViewPortWidth.gridMixin = new GridMixin(comboViewPortWidth)) , comboViewPortWidth.gridMixin), 's12 m6 l6') , $setText_11(comboViewPortWidth.label_0, 'ViewPort Width') , $addHandler(comboViewPortWidth, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames10, (!TYPE_18 && (TYPE_18 = new GwtEvent$Type) , TYPE_18)) , this$static.owner.comboViewPortWidth = comboViewPortWidth , comboViewPortWidth)) , $add_9(f_MaterialRow6, (comboViewPortHeight = new MaterialComboBox , $setGrid((!comboViewPortHeight.gridMixin && (comboViewPortHeight.gridMixin = new GridMixin(comboViewPortHeight)) , comboViewPortHeight.gridMixin), 's12 m6 l6') , $setText_11(comboViewPortHeight.label_0, 'ViewPort Height') , $addHandler(comboViewPortHeight, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames11, (!TYPE_18 && (TYPE_18 = new GwtEvent$Type) , TYPE_18)) , this$static.owner.comboViewPortHeight = comboViewPortHeight , comboViewPortHeight)) , $setOffset((!f_MaterialRow6.gridMixin && (f_MaterialRow6.gridMixin = new GridMixin(f_MaterialRow6)) , f_MaterialRow6.gridMixin), 'm3 l3') , $setGrid((!f_MaterialRow6.gridMixin && (f_MaterialRow6.gridMixin = new GridMixin(f_MaterialRow6)) , f_MaterialRow6.gridMixin), 's12 m6 l6') , f_MaterialRow6)) , $add_9(f_MaterialRow2, (f_MaterialRow7 = new MaterialRow , $add_9(f_MaterialRow7, (comboBoundaryWidth = new MaterialComboBox , $setGrid((!comboBoundaryWidth.gridMixin && (comboBoundaryWidth.gridMixin = new GridMixin(comboBoundaryWidth)) , comboBoundaryWidth.gridMixin), 's12 m6 l6') , $setText_11(comboBoundaryWidth.label_0, 'Boundary Width') , $addHandler(comboBoundaryWidth, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames12, (!TYPE_18 && (TYPE_18 = new GwtEvent$Type) , TYPE_18)) , this$static.owner.comboBoundaryWidth = comboBoundaryWidth , comboBoundaryWidth)) , $add_9(f_MaterialRow7, (comboBoundaryHeight = new MaterialComboBox , $setGrid((!comboBoundaryHeight.gridMixin && (comboBoundaryHeight.gridMixin = new GridMixin(comboBoundaryHeight)) , comboBoundaryHeight.gridMixin), 's12 m6 l6') , $setText_11(comboBoundaryHeight.label_0, 'Boundary Height') , $addHandler(comboBoundaryHeight, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames13, (!TYPE_18 && (TYPE_18 = new GwtEvent$Type) , TYPE_18)) , this$static.owner.comboBoundaryHeight = comboBoundaryHeight , comboBoundaryHeight)) , $setOffset((!f_MaterialRow7.gridMixin && (f_MaterialRow7.gridMixin = new GridMixin(f_MaterialRow7)) , f_MaterialRow7.gridMixin), 'm3 l3') , $setGrid((!f_MaterialRow7.gridMixin && (f_MaterialRow7.gridMixin = new GridMixin(f_MaterialRow7)) , f_MaterialRow7.gridMixin), 's12 m6 l6') , f_MaterialRow7)) , $add_9(f_MaterialRow2, (f_MaterialRow8 = new MaterialRow , $add_9(f_MaterialRow8, (enableZoom = new MaterialCheckBox , $setGrid((!enableZoom.gridMixin && (enableZoom.gridMixin = new GridMixin(enableZoom)) , enableZoom.gridMixin), 's12 m4 l4') , $setTextOrHtml(enableZoom.directionalTextHelper, 'Enable Zoom') , $setType_7(enableZoom, ($clinit_CheckBoxType() , FILLED)) , $setValue_17(enableZoom, ($clinit_Boolean() , $clinit_Boolean() , true), false) , $addValueChangeHandler_4(enableZoom, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames4) , enableZoom)) , $add_9(f_MaterialRow8, (enableResize = new MaterialCheckBox , $setGrid((!enableResize.gridMixin && (enableResize.gridMixin = new GridMixin(enableResize)) , enableResize.gridMixin), 's12 m4 l4') , $setTextOrHtml(enableResize.directionalTextHelper, 'Resize') , $setType_7(enableResize, FILLED) , $setValue_17(enableResize, (null , true), false) , $addValueChangeHandler_4(enableResize, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames5) , this$static.owner.enableResize = enableResize , enableResize)) , $add_9(f_MaterialRow8, (enableMouseWheelZoom = new MaterialCheckBox , $setGrid((!enableMouseWheelZoom.gridMixin && (enableMouseWheelZoom.gridMixin = new GridMixin(enableMouseWheelZoom)) , enableMouseWheelZoom.gridMixin), 's12 m4 l4') , $setTextOrHtml(enableMouseWheelZoom.directionalTextHelper, 'Mouse Wheel Zoom') , $setType_7(enableMouseWheelZoom, FILLED) , $setValue_17(enableMouseWheelZoom, (null , true), false) , $addValueChangeHandler_4(enableMouseWheelZoom, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames6) , enableMouseWheelZoom)) , $setOffset((!f_MaterialRow8.gridMixin && (f_MaterialRow8.gridMixin = new GridMixin(f_MaterialRow8)) , f_MaterialRow8.gridMixin), 'm3 l3') , $setGrid((!f_MaterialRow8.gridMixin && (f_MaterialRow8.gridMixin = new GridMixin(f_MaterialRow8)) , f_MaterialRow8.gridMixin), 's12 m6 l6') , f_MaterialRow8)) , $add_9(f_MaterialRow2, (f_MaterialRow9 = new MaterialRow , $add_9(f_MaterialRow9, (showZoomer = new MaterialCheckBox , $setGrid((!showZoomer.gridMixin && (showZoomer.gridMixin = new GridMixin(showZoomer)) , showZoomer.gridMixin), 's12 m4 l4') , $setTextOrHtml(showZoomer.directionalTextHelper, 'Show Zoomer Slider') , $setType_7(showZoomer, FILLED) , $setValue_17(showZoomer, (null , true), false) , $addValueChangeHandler_4(showZoomer, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames7) , showZoomer)) , $add_9(f_MaterialRow9, (enableOrientation = new MaterialCheckBox , $setGrid((!enableOrientation.gridMixin && (enableOrientation.gridMixin = new GridMixin(enableOrientation)) , enableOrientation.gridMixin), 's12 m4 l4') , $setTextOrHtml(enableOrientation.directionalTextHelper, 'Orientation') , $setType_7(enableOrientation, FILLED) , $setValue_17(enableOrientation, (null , true), false) , $addValueChangeHandler_4(enableOrientation, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames8) , enableOrientation)) , $add_9(f_MaterialRow9, (enforceBoundary = new MaterialCheckBox , $setGrid((!enforceBoundary.gridMixin && (enforceBoundary.gridMixin = new GridMixin(enforceBoundary)) , enforceBoundary.gridMixin), 's12 m4 l4') , $setTextOrHtml(enforceBoundary.directionalTextHelper, 'Enforce Boundary') , $setType_7(enforceBoundary, FILLED) , $setValue_17(enforceBoundary, (null , true), false) , $addValueChangeHandler_4(enforceBoundary, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames9) , enforceBoundary)) , $setOffset((!f_MaterialRow9.gridMixin && (f_MaterialRow9.gridMixin = new GridMixin(f_MaterialRow9)) , f_MaterialRow9.gridMixin), 'm3 l3') , $setGrid((!f_MaterialRow9.gridMixin && (f_MaterialRow9.gridMixin = new GridMixin(f_MaterialRow9)) , f_MaterialRow9.gridMixin), 's12 m6 l6') , f_MaterialRow9)) , $add_9(f_MaterialRow2, (f_MaterialRow10 = new MaterialRow , $add_9(f_MaterialRow10, (comboShape = new MaterialComboBox , $setText_11(comboShape.label_0, 'Shape') , $addHandler(comboShape, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames14, (!TYPE_18 && (TYPE_18 = new GwtEvent$Type) , TYPE_18)) , this$static.owner.comboShape = comboShape , comboShape)) , $setOffset((!f_MaterialRow10.gridMixin && (f_MaterialRow10.gridMixin = new GridMixin(f_MaterialRow10)) , f_MaterialRow10.gridMixin), 'm3 l3') , $setGrid((!f_MaterialRow10.gridMixin && (f_MaterialRow10.gridMixin = new GridMixin(f_MaterialRow10)) , f_MaterialRow10.gridMixin), 's12 m6 l6') , f_MaterialRow10)) , $add_9(f_MaterialRow2, (f_MaterialRow11 = new MaterialRow , $add_9(f_MaterialRow11, (f_MaterialColumn12 = new MaterialColumn , $add_9(f_MaterialColumn12, (crop = new MaterialButton , crop.element_0.style['width'] = '100%' , $setText_3(crop.span_1, 'Crop') , crop.span_1.attached || $add_9(crop, crop.span_1) , $addClickHandler(crop, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2) , crop)) , $setGrid((!f_MaterialColumn12.gridMixin && (f_MaterialColumn12.gridMixin = new GridMixin(f_MaterialColumn12)) , f_MaterialColumn12.gridMixin), 's12 m6 l6') , f_MaterialColumn12)) , $add_9(f_MaterialRow11, (f_MaterialColumn13 = new MaterialColumn , $add_9(f_MaterialColumn13, (rotate = new MaterialButton , rotate.element_0.style['width'] = '100%' , $setText_3(rotate.span_1, 'Rotate') , rotate.span_1.attached || $add_9(rotate, rotate.span_1) , $addClickHandler(rotate, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3) , rotate)) , $setGrid((!f_MaterialColumn13.gridMixin && (f_MaterialColumn13.gridMixin = new GridMixin(f_MaterialColumn13)) , f_MaterialColumn13.gridMixin), 's12 m6 l6') , f_MaterialColumn13)) , $setOffset((!f_MaterialRow11.gridMixin && (f_MaterialRow11.gridMixin = new GridMixin(f_MaterialRow11)) , f_MaterialRow11.gridMixin), 'm3 l3') , $setGrid((!f_MaterialRow11.gridMixin && (f_MaterialRow11.gridMixin = new GridMixin(f_MaterialRow11)) , f_MaterialRow11.gridMixin), 's12 m6 l6') , f_MaterialRow11)) , setStyleName(f_MaterialRow2.element_0, 'code', true) , f_MaterialRow2));\n  $add_9(f_MaterialPanel1, (modal = new MaterialModal , $add_9(modal, (f_MaterialModalContent14 = new MaterialModalContent , $add_9(f_MaterialModalContent14, (croppedImage = new MaterialImage , this$static.owner.croppedImage = croppedImage , croppedImage)) , $setTextAlign(f_MaterialModalContent14, ($clinit_TextAlign() , CENTER_4)) , f_MaterialModalContent14)) , $add_9(modal, (f_MaterialModalFooter15 = new MaterialModalFooter , $add_9(f_MaterialModalFooter15, (close_0 = new MaterialButton , $setWaves(close_0, ($clinit_WavesType() , DEFAULT_9)) , $setText_3(close_0.span_1, 'Close') , close_0.span_1.attached || $add_9(close_0, close_0.span_1) , $setType_1(close_0, ($clinit_ButtonType() , FLAT)) , $addClickHandler(close_0, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1) , close_0)) , f_MaterialModalFooter15)) , this$static.owner.modal = modal , modal));\n  return f_MaterialPanel1;\n}\n\nfunction ImageCropperView_BinderImpl$Widgets(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new ImageCropperView_BinderImpl$Widgets$1(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2 = new ImageCropperView_BinderImpl$Widgets$2(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3 = new ImageCropperView_BinderImpl$Widgets$3(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames4 = new ImageCropperView_BinderImpl$Widgets$4(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames5 = new ImageCropperView_BinderImpl$Widgets$5(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames6 = new ImageCropperView_BinderImpl$Widgets$6(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames7 = new ImageCropperView_BinderImpl$Widgets$7(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames8 = new ImageCropperView_BinderImpl$Widgets$8(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames9 = new ImageCropperView_BinderImpl$Widgets$9(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames10 = new ImageCropperView_BinderImpl$Widgets$10(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames11 = new ImageCropperView_BinderImpl$Widgets$11(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames12 = new ImageCropperView_BinderImpl$Widgets$12(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames13 = new ImageCropperView_BinderImpl$Widgets$13(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames14 = new ImageCropperView_BinderImpl$Widgets$14(this);\n  this.owner = owner;\n}\n\ndefineClass(1716, 1, {}, ImageCropperView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets', 1716);\nfunction ImageCropperView_BinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1717, 1, $intern_64, ImageCropperView_BinderImpl$Widgets$1);\n_.onClick = function onClick_70(event_0){\n  $close_7(this.this$11.owner.modal);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/1', 1717);\nfunction ImageCropperView_BinderImpl$Widgets$10(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1726, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$10);\n_.onValueChange = function onValueChange_17(event_0){\n  $applyDimension(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$10_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/10', 1726);\nfunction ImageCropperView_BinderImpl$Widgets$11(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1727, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$11);\n_.onValueChange = function onValueChange_18(event_0){\n  $applyDimension(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$11_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/11', 1727);\nfunction ImageCropperView_BinderImpl$Widgets$12(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1728, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$12);\n_.onValueChange = function onValueChange_19(event_0){\n  $applyDimension(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$12_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/12', 1728);\nfunction ImageCropperView_BinderImpl$Widgets$13(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1729, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$13);\n_.onValueChange = function onValueChange_20(event_0){\n  $applyDimension(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$13_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/13', 1729);\nfunction ImageCropperView_BinderImpl$Widgets$14(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1730, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$14);\n_.onValueChange = function onValueChange_21(event_0){\n  $setComboShape(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$14_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/14', 1730);\nfunction ImageCropperView_BinderImpl$Widgets$2(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1718, 1, $intern_64, ImageCropperView_BinderImpl$Widgets$2);\n_.onClick = function onClick_71(event_0){\n  $crop(this.this$11.owner.cropper, ($clinit_Type() , BASE64));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$2_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/2', 1718);\nfunction ImageCropperView_BinderImpl$Widgets$3(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1719, 1, $intern_64, ImageCropperView_BinderImpl$Widgets$3);\n_.onClick = function onClick_72(event_0){\n  this.this$11.owner.cropper.cropper.rotate(-180);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$3_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/3', 1719);\nfunction ImageCropperView_BinderImpl$Widgets$4(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1720, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$4);\n_.onValueChange = function onValueChange_22(event_0){\n  $enableZoom(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$4_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/4', 1720);\nfunction ImageCropperView_BinderImpl$Widgets$5(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1721, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$5);\n_.onValueChange = function onValueChange_23(event_0){\n  $enableResize(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$5_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/5', 1721);\nfunction ImageCropperView_BinderImpl$Widgets$6(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1722, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$6);\n_.onValueChange = function onValueChange_24(event_0){\n  $enableMouseWheelZoom(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$6_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/6', 1722);\nfunction ImageCropperView_BinderImpl$Widgets$7(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1723, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$7);\n_.onValueChange = function onValueChange_25(event_0){\n  $showZoomer(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$7_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/7', 1723);\nfunction ImageCropperView_BinderImpl$Widgets$8(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1724, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$8);\n_.onValueChange = function onValueChange_26(event_0){\n  $enableOrientation(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$8_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/8', 1724);\nfunction ImageCropperView_BinderImpl$Widgets$9(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1725, 1, $intern_45, ImageCropperView_BinderImpl$Widgets$9);\n_.onValueChange = function onValueChange_27(event_0){\n  $enforceBoundary(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cropper_ImageCropperView_1BinderImpl$Widgets$9_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cropper', 'ImageCropperView_BinderImpl/Widgets/9', 1725);\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperPresenter$_annotation$$none$$(this$static){\n  var result, result0;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperPresenter$_annotation$$none$$) {\n    result0 = new ImageCropperPresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), (result = $get_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperView$_annotation$$none$$(this$static) , result), $get_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperPresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result0), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperPresenter$_annotation$$none$$ = result0;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperView$_annotation$$none$$) {\n    result = new ImageCropperView;\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperView$_annotation$$none$$;\n}\n\ndefineClass(747, 1, $intern_106);\n_.onSuccess_0 = function onSuccess_6(){\n  $onSuccess(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$addins$cropper$ImageCropperPresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\n$entry(onLoad_1)(6);\n\n//# sourceURL=gwtmaterialdemo-6.js\n")

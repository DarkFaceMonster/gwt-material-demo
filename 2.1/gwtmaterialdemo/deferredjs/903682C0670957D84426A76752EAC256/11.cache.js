$wnd.gwtmaterialdemo.runAsyncCallback11("function $clinit_MaterialLiveStamp(){\n  $clinit_MaterialLiveStamp = emptyMethod;\n  !startupState && (startupState = new StartupState$DebugState);\n  if (startupState) {\n    $clinit_MaterialDesignBase();\n    injectJs(($clinit_MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$momentDebugJsInitializer() , momentDebugJs), false, true);\n    injectJs(($clinit_MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$liveStampDebugJsInitializer() , liveStampDebugJs), false, true);\n  }\n   else {\n    $clinit_MaterialDesignBase();\n    injectJs(($clinit_MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$momentJsInitializer() , momentJs), true, false);\n    injectJs(($clinit_MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$liveStampJsInitializer() , liveStampJs), true, false);\n  }\n}\n\nfunction $setDate_0(this$static, date){\n  this$static.date = date;\n  $setAttribute(($clinit_DOM() , this$static.element_0), 'data-livestamp', $toString_1(date));\n}\n\nfunction MaterialLiveStamp(){\n  $clinit_MaterialLiveStamp();\n  AbstractValueWidget.call(this, $doc.createElement('span'));\n  this.date = new Date_0;\n}\n\ndefineClass(410, 144, $intern_62, MaterialLiveStamp);\n_.getValue = function getValue_12(){\n  return this.date;\n}\n;\n_.load_0 = function load_8(){\n  this.date?$setDate_0(this, this.date):(new IllegalStateException , $clinit_GWT() , !!logger_0 && undefined);\n}\n;\n_.onLoad = function onLoad_26(){\n  $onLoad(this);\n  this.date?$setDate_0(this, this.date):(new IllegalStateException , $clinit_GWT() , !!logger_0 && undefined);\n}\n;\n_.unload_0 = function unload_8(){\n  ($clinit_DOM() , this.element_0).removeAttribute('data-livestamp');\n}\n;\nvar Lgwt_material_design_addins_client_livestamp_MaterialLiveStamp_2_classLit = createForClass('gwt.material.design.addins.client.livestamp', 'MaterialLiveStamp', 410);\nvar liveStampJs, momentJs;\nfunction MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2663, 1, {}, MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_42(){\n  return 'liveStampJs';\n}\n;\n_.getText = function getText_41(){\n  return '// Livestamp.js / v1.1.2 / (c) 2012 Matt Bradley / MIT License\\n(function(d,g){var h=1E3,i=!1,e=d([]),j=function(b,a){var c=b.data(\"livestampdata\");\"number\"==typeof a&&(a*=1E3);b.removeAttr(\"data-livestamp\").removeData(\"livestamp\");a=g(a);g.isMoment(a)&&!isNaN(+a)&&(c=d.extend({},{original:b.contents()},c),c.moment=g(a),b.data(\"livestampdata\",c).empty(),e.push(b[0]))},k=function(){i||(f.update(),setTimeout(k,h))},f={update:function(){d(\"[data-livestamp]\").each(function(){var a=d(this);j(a,a.data(\"livestamp\"))});var b=[];e.each(function(){var a=d(this),c=a.data(\"livestampdata\");\\n    if(void 0===c)b.push(this);else if(g.isMoment(c.moment)){var e=a.html(),c=c.moment.fromNow();if(e!=c){var f=d.Event(\"change.livestamp\");a.trigger(f,[e,c]);f.isDefaultPrevented()||a.html(c)}}});e=e.not(b)},pause:function(){i=!0},resume:function(){i=!1;k()},interval:function(b){if(void 0===b)return h;h=b}},l={add:function(b,a){\"number\"==typeof a&&(a*=1E3);a=g(a);g.isMoment(a)&&!isNaN(+a)&&(b.each(function(){j(d(this),a)}),f.update());return b},destroy:function(b){e=e.not(b);b.each(function(){var a=\\n    d(this),c=a.data(\"livestampdata\");if(void 0===c)return b;a.html(c.original?c.original:\"\").removeData(\"livestampdata\")});return b},isLivestamp:function(b){return void 0!==b.data(\"livestampdata\")}};d.livestamp=f;d(function(){f.resume()});d.fn.livestamp=function(b,a){l[b]||(a=b,b=\"add\");return l[b](this,a)}})(jQuery,moment);';\n}\n;\nvar Lgwt_material_design_addins_client_livestamp_MaterialLiveStampClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('gwt.material.design.addins.client.livestamp', 'MaterialLiveStampClientBundle_default_InlineClientBundleGenerator/1', 2663);\nfunction MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(2664, 1, {}, MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_43(){\n  return 'momentJs';\n}\n;\n_.getText = function getText_42(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += '!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.moment=t()}(this,function(){\"use strict\";function e(){return _s.apply(null,arguments)}function t(e){_s=e}function n(e){return e instanceof Array||\"[object Array]\"===Object.prototype.toString.call(e)}function s(e){return null!=e&&\"[object Object]\"===Object.prototype.toString.call(e)}function i(e){var t;for(t in e)return!1;return!0}function r(e){return\"number\"==typeof e||\"[object Number]\"===Object.prototype.toString.call(e)}function a(e){return e instanceof Date||\"[object Date]\"===Object.prototype.toString.call(e)}function o(e,t){var n,s=[];for(n=0;n<e.length;++n)s.push(t(e[n],n));return s}function u(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function l(e,t){for(var n in t)u(t,n)&&(e[n]=t[n]);return u(t,\"toString\")&&(e.toString=t.toString),u(t,\"valueOf\")&&(e.valueOf=t.valueOf),e}function d(e,t,n,s){return gt(e,t,n,s,!0).utc()}function h(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function c(e){return null==e._pf&&(e._pf=h()),e._pf}function f(e){if(null==e._isValid){var t=c(e),n=gs.call(t.parsedDateParts,function(e){return null!=e}),s=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&n);if(e._strict&&(s=s&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return s;e._isValid=s}return e._isValid}function m(e){var t=d(NaN);return null!=e?l(c(t),e):c(t).userInvalidated=!0,t}function _(e){return void 0===e}function y(e,t){var n,s,i;if(_(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),_(t._i)||(e._i=t._i),_(t._f)||(e._f=t._f),_(t._l)||(e._l=t._l),_(t._strict)||(e._strict=t._strict),_(t._tzm)||(e._tzm=t._tzm),_(t._isUTC)||(e._isUTC=t._isUTC),_(t._offset)||(e._offset=t._offset),_(t._pf)||(e._pf=c(t)),_(t._locale)||(e._locale=t._locale),ps.length>0)for(n in ps)s=ps[n],i=t[s],_(i)||(e[s]=i);return e}function g(t){y(this,t),this._d=new Date(null!=t._d?t._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),ws===!1&&(ws=!0,e.updateOffset(this),ws=!1)}function p(e){return e instanceof g||null!=e&&null!=e._isAMomentObject}function w(e){return 0>e?Math.ceil(e)||0:Math.floor(e)}function v(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=w(t)),n}function S(e,t,n){var s,i=Math.min(e.length,t.length),r=Math.abs(e.length-t.length),a=0;for(s=0;i>s;s++)(n&&e[s]!==t[s]||!n&&v(e[s])!==v(t[s]))&&a++;return a+r}function M(t){e.suppressDeprecationWarnings===!1&&\"undefined\"!=typeof console&&console.warn&&console.warn(\"Deprecation warning: \"+t)}function k(t,n){var s=!0;return l(function(){if(null!=e.deprecationHandler&&e.deprecationHandler(null,t),s){for(var i,r=[],a=0;a<arguments.length;a++){if(i=\"\",\"object\"==typeof arguments[a]){i+=\"\\\\n[\"+a+\"] \";for(var o in arguments[0])i+=o+\": \"+arguments[0][o]+\", \";i=i.slice(0,-2)}else i=arguments[a];r.push(i)}M(t+\"\\\\nArguments: \"+Array.prototype.slice.call(r).join(\"\")+\"\\\\n\"+(new Error).stack),s=!1}return n.apply(this,arguments)},n)}function D(t,n){null!=e.deprecationHandler&&e.deprecationHandler(t,n),vs[t]||(M(n),vs[t]=!0)}function Y(e){return e instanceof Function||\"[object Function]\"===Object.prototype.toString.call(e)}function O(e){var t,n;for(n in e)t=e[n],Y(t)?this[n]=t:this[\"_\"+n]=t;this._config=e,this._ordinalParseLenient=new RegExp(this._ordinalParse.source+\"|\"+/\\\\d{1,2}/.source)}function x(e,t){var n,i=l({},e);for(n in t)u(t,n)&&(s(e[n])&&s(t[n])?(i[n]={},l(i[n],e[n]),l(i[n],t[n])):null!=t[n]?i[n]=t[n]:delete i[n]);for(n in e)u(e,n)&&!u(t,n)&&s(e[n])&&(i[n]=l({},i[n]));return i}function T(e){null!=e&&this.set(e)}function b(e,t,n){var s=this._calendar[e]||this._calendar.sameElse;return Y(s)?s.call(t,n):s}function P(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1)}),this._longDateFormat[e])}function W(){return this._invalidDate}function R(e){return this._ordinal.replace(\"%d\",e)}function U(e,t,n,s){var i=this._relativeTime[n];return Y(i)?i(e,t,n,s):i.replace(/%d/i,e)}function C(e,t){var n=this._relativeTime[e>0?\"future\":\"past\"];return Y(n)?n(t):n.replace(/%s/i,t)}function F(e,t){var n=e.toLowerCase();Ps[n]=Ps[n+\"s\"]=Ps[t]=e}function H(e){return\"string\"==typeof e?Ps[e]||Ps[e.toLowerCase()]:void 0}function L(e){var t,n,s={};for(n in e)u(e,n)&&(t=H(n),t&&(s[t]=e[n]));return s}function G(e,t){Ws[e]=t}function V(e){var t=[];for(var n in e)t.push({unit:n,priority:Ws[n]});return t.sort(function(e,t){return e.priority-t.priority}),t}function j(t,n){return function(s){return null!=s?(A(this,t,s),e.updateOffset(this,n),this):N(this,t)}}function N(e,t){return e.isValid()?e._d[\"get\"+(e._isUTC?\"UTC\":\"\")+t]():NaN}function A(e,t,n){e.isValid()&&e._d[\"set\"+(e._isUTC?\"UTC\":\"\")+t](n)}function E(e){return e=H(e),Y(this[e])?this[e]():this}function I(e,t){if(\"object\"==typeof e){e=L(e);for(var n=V(e),s=0;s<n.length;s++)this[n[s].unit](e[n[s].unit])}else if(e=H(e),Y(this[e]))return this[e](t);return this}function z(e,t,n){var s=\"\"+Math.abs(e),i=t-s.length,r=e>=0;return(r?n?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,i)).toString().substr(1)+s}function Z(e,t,n,s){var i=s;\"string\"==typeof s&&(i=function(){return this[s]()}),e&&(Fs[e]=i),t&&(Fs[t[0]]=function(){return z(i.apply(this,arguments),t[1],t[2])}),n&&(Fs[n]=function(){return this.localeData().ordinal(i.apply(this,arguments),e)})}function $(e){return e.match(/\\\\[[\\\\s\\\\S]/)?e.replace(/^\\\\[|\\\\]$/g,\"\"):e.replace(/\\\\\\\\/g,\"\")}function q(e){var t,n,s=e.match(Rs);for(t=0,n=s.length;n>t;t++)Fs[s[t]]?s[t]=Fs[s[t]]:s[t]=$(s[t]);return function(t){var i,r=\"\";for(i=0;n>i;i++)r+=s[i]instanceof Function?s[i].call(t,e):s[i];return r}}function B(e,t){return e.isValid()?(t=J(t,e.localeData()),Cs[t]=Cs[t]||q(t),Cs[t](e)):e.localeData().invalidDate()}function J(e,t){function n(e){return t.longDateFormat(e)||e}var s=5;for(Us.lastIndex=0;s>=0&&Us.test(e);)e=e.replace(Us,n),Us.lastIndex=0,s-=1;return e}function Q(e,t,n){Ks[e]=Y(t)?t:function(e,s){return e&&n?n:t}}function X(e,t){return u(Ks,e)?Ks[e](t._strict,t._locale):new RegExp(K(e))}function K(e){return ee(e.replace(\"\\\\\\\\\",\"\").replace(/\\\\\\\\(\\\\[)|\\\\\\\\(\\\\])|\\\\[([^\\\\]\\\\[]*)\\\\]|\\\\\\\\(.)/g,function(e,t,n,s,i){return t||n||s||i}))}function ee(e){return e.replace(/[-\\\\/\\\\\\\\^$*+?.()|[\\\\]{}]/g,\"\\\\\\\\$&\")}function te(e,t){var n,s=t;for(\"string\"==typeof e&&(e=[e]),r(t)&&(s=function(e,n){n[t]=v(e)}),n=0;n<e.length;n++)ei[e[n]]=s}function ne(e,t){te(e,function(e,n,s,i){s._w=s._w||{},t(e,s._w,s,i)})}function se(e,t,n){null!=t&&u(ei,e)&&ei[e](t,n._a,n,e)}function ie(e,t){return new Date(Date.UTC(e,t+1,0)).getUTCDate()}function re(e,t){return e?n(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||hi).test(t)?\"format\":\"standalone\"][e.month()]:this._months}function ae(e,t){return e?n(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[hi.test(t)?\"format\":\"standalone\"][e.month()]:this._monthsShort}function oe(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],s=0;12>s;++s)r=d([2e3,s]),this._shortMonthsParse[s]=this.monthsShort(r,\"\").toLocaleLowerCase(),this._longMonthsParse[s]=this.months(r,\"\").toLocaleLowerCase();return n?\"MMM\"===t?(i=di.call(this._shortMonthsParse,a),-1!==i?i:null):(i=di.call(this._longMonthsParse,a),-1!==i?i:null):\"MMM\"===t?(i=di.call(this._shortMonthsParse,a),-1!==i?i:(i=di.call(this._longMonthsParse,a),-1!==i?i:null)):(i=di.call(this._longMonthsParse,a),-1!==i?i:(i=di.call(this._shortMonthsParse,a),-1!==i?i:null))}function ue(e,t,n){var s,i,r;if(this._monthsParseExact)return oe.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),s=0;12>s;s++){if(i=d([2e3,s]),n&&!this._longMonthsParse[s]&&(this._longMonthsParse[s]=new RegExp(\"^\"+this.months(i,\"\").replace(\".\",\"\")+\"$\",\"i\"),this._shortMonthsParse[s]=new RegExp(\"^\"+this.monthsShort(i,\"\").replace(\".\",\"\")+\"$\",\"i\")),n||this._monthsParse[s]||(r=\"^\"+this.months(i,\"\")+\"|^\"+this.monthsShort(i,\"\"),this._monthsParse[s]=new RegExp(r.replace(\".\",\"\"),\"i\")),n&&\"MMMM\"===t&&this._longMonthsParse[s].test(e))return s;if(n&&\"MMM\"===t&&this._shortMonthsParse[s].test(e))return s;if(!n&&this._monthsParse[s].test(e))return s}}function le(e,t){var n;if(!e.isValid())return e;if(\"string\"==typeof t)if(/^\\\\d+$/.test(t))t=v(t);else if(t=e.localeData().monthsParse(t),!r(t))return e;return n=Math.min(e.date(),ie(e.year(),t)),e._d[\"set\"+(e._isUTC?\"UTC\":\"\")+\"Month\"](t,n),e}function de(t){return null!=t?(le(this,t),e.updateOffset(this,!0),this):N(this,\"Month\")}function he(){return ie(this.year(),this.month())}function ce(e){return this._monthsParseExact?(u(this,\"_monthsRegex\")||me.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(u(this,\"_monthsShortRegex\")||(this._monthsShortRegex=mi),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)}function fe(e){return this._monthsParseExact?(u(this,\"_monthsRegex\")||me.call(this),e?this._monthsStrictRegex:this._monthsRegex):(u(this,\"_monthsRegex\")||(this._monthsRegex=_i),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)}function me(){function e(e,t){return t.length-e.length}var t,n,s=[],i=[],r=[];for(t=0;12>t;t++)n=d([2e3,t]),s.push(this.monthsShort(n,\"\")),i.push(this.months(n,\"\")),r.push(this.months(n,\"\")),r.push(this.monthsShort(n,\"\"));for(s.sort(e),i.sort(e),r.sort(e),t=0;12>t;t++)s[t]=ee(s[t]),i[t]=ee(i[t]);for(t=0;24>t;t++)r[t]=ee(r[t]);this._monthsRegex=new RegExp(\"^(\"+r.join(\"|\")+\")\",\"i\"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp(\"^(\"+i.join(\"|\")+\")\",\"i\"),this._monthsShortStrictRegex=new RegExp(\"^(\"+s.join(\"|\")+\")\",\"i\")}function _e(e){return ye(e)?366:365}function ye(e){return e%4===0&&e%100!==0||e%400===0}function ge(){return ye(this.year())}function pe(e,t,n,s,i,r,a){var o=new Date(e,t,n,s,i,r,a);return 100>e&&e>=0&&isFinite(o.getFullYear())&&o.setFullYear(e),o}function we(e){var t=new Date(Date.UTC.apply(null,arguments));return 100>e&&e>=0&&isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e),t}function ve(e,t,n){var s=7+t-n,i=(7+we(e,0,s).getUTCDay()-t)%7;return-i+s-1}function Se(e,t,n,s,i){var r,a,o=(7+n-s)%7,u=ve(e,s,i),l=1+7*(t-1)+o+u;return 0>=l?(r=e-1,a=_e(r)+l):l>_e(e)?(r=e+1,a=l-_e(e)):(r=e,a=l),{year:r,dayOfYear:a}}function Me(e,t,n){var s,i,r=ve(e.year(),t,n),a=Math.floor((e.dayOfYear()-r-1)/7)+1;return 1>a?(i=e.year()-1,s=a+ke(i,t,n)):a>ke(e.year(),t,n)?(s=a-ke(e.year(),t,n),i=e.year()+1):(i=e.year(),s=a),{week:s,year:i}}function ke(e,t,n){var s=ve(e,t,n),i=ve(e+1,t,n);return(_e(e)-s+i)/7}function De(e){return Me(e,this._week.dow,this._week.doy).week}function Ye(){return this._week.dow}function Oe(){return this._week.doy}function xe(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),\"d\")}function Te(e){var t=Me(this,1,4).week;return null==e?t:this.add(7*(e-t),\"d\")}function be(e,t){return\"string\"!=typeof e?e:isNaN(e)?(e=t.weekdaysParse(e),\"number\"==typeof e?e:null):parseInt(e,10)}function Pe(e,t){return\"string\"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}function We(e,t){return e?n(this._weekdays)?this._weekdays[e.day()]:this._weekdays[this._weekdays.isFormat.test(t)?\"format\":\"standalone\"][e.day()]:this._weekdays}function Re(e){return e?this._weekdaysShort[e.day()]:this._weekdaysShort}function Ue(e){return e?this._weekdaysMin[e.day()]:this._weekdaysMin}function Ce(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],s=0;7>s;++s)r=d([2e3,1]).day(s),this._minWeekdaysParse[s]=this.weekdaysMin(r,\"\").toLocaleLowerCase(),this._shortWeekdaysParse[s]=this.weekdaysShort(r,\"\").toLocaleLowerCase(),this._weekdaysParse[s]=this.weekdays(r,\"\").toLocaleLowerCase();return n?\"dddd\"===t?(i=di.call(this._weekdaysParse,a),-1!==i?i:null):\"ddd\"===t?(i=di.call(this._shortWeekdaysParse,a),-1!==i?i:null):(i=di.call(this._minWeekdaysParse,a),-1!==i?i:null):\"dddd\"===t?(i=di.call(this._weekdaysParse,a),-1!==i?i:(i=di.call(this._shortWeekdaysParse,a),-1!==i?i:(i=di.call(this._minWeekdaysParse,a),-1!==i?i:null))):\"ddd\"===t?(i=di.call(this._shortWeekdaysParse,a),-1!==i?i:(i=di.call(this._weekdaysParse,a),-1!==i?i:(i=di.call(this._minWeekdaysParse,a),-1!==i?i:null))):(i=di.call(this._minWeekdaysParse,a),-1!==i?i:(i=di.call(this._weekdaysParse,a),-1!==i?i:(i=di.call(this._shortWeekdaysParse,a),-1!==i?i:null)))}function Fe(e,t,n){var s,i,r;if(this._weekdaysParseExact)return Ce.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),s=0;7>s;s++){if(i=d([2e3,1]).day(s),n&&!this._fullWeekdaysParse[s]&&(this._fullWeekdaysParse[s]=new RegExp(\"^\"+this.weekdays(i,\"\").replace(\".\",\".?\")+\"$\",\"i\"),this._shortWeekdaysParse[s]=new RegExp(\"^\"+this.weekdaysShort(i,\"\").replace(\".\",\".?\")+\"$\",\"i\"),this._minWeekdaysParse[s]=new RegExp(\"^\"+this.weekdaysMin(i,\"\").replace(\".\",\".?\")+\"$\",\"i\")),this._weekdaysParse[s]||(r=\"^\"+this.weekdays(i,\"\")+\"|^\"+this.weekdaysShort(i,\"\")+\"|^\"+this.weekdaysMin(i,\"\"),this._weekdaysParse[s]=new RegExp(r.replace(\".\",\"\"),\"i\")),n&&\"dddd\"===t&&this._fullWeekdaysParse[s].test(e))return s;if(n&&\"ddd\"===t&&this._shortWeekdaysParse[s].test(e))return s;if(n&&\"dd\"===t&&this._minWeekdaysParse[s].test(e))return s;if(!n&&this._weekdaysParse[s].test(e))return s}}function He(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=be(e,this.localeData()),this.add(e-t,\"d\")):t}function Le(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,\"d\")}function Ge(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=Pe(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7}function Ve(e){return this._weekdaysParseExact?(u(this,\"_weekdaysRegex\")||Ae.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(u(this,\"_weekdaysRegex\")||(this._weekdaysRegex=Si),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)}function je(e){return this._weekdaysParseExact?(u(this,\"_weekdaysRegex\")||Ae.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(u(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=Mi),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Ne(e){return this._weekdaysParseExact?(u(this,\"_weekdaysRegex\")||Ae.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(u(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=ki),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Ae(){function e(e,t){return t.length-e.length}var t,n,s,i,r,a=[],o=[],u=[],l=[];for(t=0;7>t;t++)n=d([2e3,1]).day(t),s=this.weekdaysMin(n,\"\"),i=this.weekdaysShort(n,\"\"),r=this.weekdays(n,\"\"),a.push(s),o.push(i),u.push(r),l.push(s),l.push(i),l.push(r);for(a.sort(e),o.sort(e),u.sort(e),l.sort(e),t=0;7>t;t++)o[t]=ee(o[t]),u[t]=ee(u[t]),l[t]=ee(l[t]);this._weekdaysRegex=new RegExp(\"^(\"+l.join(\"|\")+\")\",\"i\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\"^(\"+u.join(\"|\")+\")\",\"i\"),this._weekdaysShortStrictRegex=new RegExp(\"^(\"+o.join(\"|\")+\")\",\"i\"),this._weekdaysMinStrictRegex=new RegExp(\"^(\"+a.join(\"|\")+\")\",\"i\")}function Ee(){return this.hours()%12||12}function Ie(){return this.hours()||24}function ze(e,t){Z(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)})}function Ze(e,t){return t._meridiemParse}function $e(e){return\"p\"===(e+\"\").toLowerCase().charAt(0)}function qe(e,t,n){return e>11?n?\"pm\":\"PM\":n?\"am\":\"AM\"}function Be(e){return e?e.toLowerCase().replace(\"_\",\"-\"):e}function Je(e){for(var t,n,s,i,r=0;r<e.length;){for(i=Be(e[r]).split(\"-\"),t=i.length,n=Be(e[r+1]),n=n?n.split(\"-\"):null;t>0;){if(s=Qe(i.slice(0,t).join(\"-\")))return s;if(n&&n.length>=t&&S(i,n,!0)>=t-1)break;t--}r++}return null}function Qe(e){var t=null;if(!Ti[e]&&\"undefined\"!=typeof m';\n  builder.string += 'odule&&module&&module.exports)try{t=Di._abbr,require(\"./locale/\"+e),Xe(t)}catch(n){}return Ti[e]}function Xe(e,t){var n;return e&&(n=_(t)?tt(e):Ke(e,t),n&&(Di=n)),Di._abbr}function Ke(e,t){if(null!==t){var n=xi;if(t.abbr=e,null!=Ti[e])D(\"defineLocaleOverride\",\"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\"),n=Ti[e]._config;else if(null!=t.parentLocale){if(null==Ti[t.parentLocale])return bi[t.parentLocale]||(bi[t.parentLocale]=[]),bi[t.parentLocale].push({name:e,config:t}),null;n=Ti[t.parentLocale]._config}return Ti[e]=new T(x(n,t)),bi[e]&&bi[e].forEach(function(e){Ke(e.name,e.config)}),Xe(e),Ti[e]}return delete Ti[e],null}function et(e,t){if(null!=t){var n,s=xi;null!=Ti[e]&&(s=Ti[e]._config),t=x(s,t),n=new T(t),n.parentLocale=Ti[e],Ti[e]=n,Xe(e)}else null!=Ti[e]&&(null!=Ti[e].parentLocale?Ti[e]=Ti[e].parentLocale:null!=Ti[e]&&delete Ti[e]);return Ti[e]}function tt(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Di;if(!n(e)){if(t=Qe(e))return t;e=[e]}return Je(e)}function nt(){return ks(Ti)}function st(e){var t,n=e._a;return n&&-2===c(e).overflow&&(t=n[ni]<0||n[ni]>11?ni:n[si]<1||n[si]>ie(n[ti],n[ni])?si:n[ii]<0||n[ii]>24||24===n[ii]&&(0!==n[ri]||0!==n[ai]||0!==n[oi])?ii:n[ri]<0||n[ri]>59?ri:n[ai]<0||n[ai]>59?ai:n[oi]<0||n[oi]>999?oi:-1,c(e)._overflowDayOfYear&&(ti>t||t>si)&&(t=si),c(e)._overflowWeeks&&-1===t&&(t=ui),c(e)._overflowWeekday&&-1===t&&(t=li),c(e).overflow=t),e}function it(e){var t,n,s,i,r,a,o=e._i,u=Pi.exec(o)||Wi.exec(o);if(u){for(c(e).iso=!0,t=0,n=Ui.length;n>t;t++)if(Ui[t][1].exec(u[1])){i=Ui[t][0],s=Ui[t][2]!==!1;break}if(null==i)return void(e._isValid=!1);if(u[3]){for(t=0,n=Ci.length;n>t;t++)if(Ci[t][1].exec(u[3])){r=(u[2]||\" \")+Ci[t][0];break}if(null==r)return void(e._isValid=!1)}if(!s&&null!=r)return void(e._isValid=!1);if(u[4]){if(!Ri.exec(u[4]))return void(e._isValid=!1);a=\"Z\"}e._f=i+(r||\"\")+(a||\"\"),dt(e)}else e._isValid=!1}function rt(t){var n=Fi.exec(t._i);return null!==n?void(t._d=new Date(+n[1])):(it(t),void(t._isValid===!1&&(delete t._isValid,e.createFromInputFallback(t))))}function at(e,t,n){return null!=e?e:null!=t?t:n}function ot(t){var n=new Date(e.now());return t._useUTC?[n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate()]:[n.getFullYear(),n.getMonth(),n.getDate()]}function ut(e){var t,n,s,i,r=[];if(!e._d){for(s=ot(e),e._w&&null==e._a[si]&&null==e._a[ni]&&lt(e),e._dayOfYear&&(i=at(e._a[ti],s[ti]),e._dayOfYear>_e(i)&&(c(e)._overflowDayOfYear=!0),n=we(i,0,e._dayOfYear),e._a[ni]=n.getUTCMonth(),e._a[si]=n.getUTCDate()),t=0;3>t&&null==e._a[t];++t)e._a[t]=r[t]=s[t];for(;7>t;t++)e._a[t]=r[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[ii]&&0===e._a[ri]&&0===e._a[ai]&&0===e._a[oi]&&(e._nextDay=!0,e._a[ii]=0),e._d=(e._useUTC?we:pe).apply(null,r),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[ii]=24)}}function lt(e){var t,n,s,i,r,a,o,u;if(t=e._w,null!=t.GG||null!=t.W||null!=t.E)r=1,a=4,n=at(t.GG,e._a[ti],Me(pt(),1,4).year),s=at(t.W,1),i=at(t.E,1),(1>i||i>7)&&(u=!0);else{r=e._locale._week.dow,a=e._locale._week.doy;var l=Me(pt(),r,a);n=at(t.gg,e._a[ti],l.year),s=at(t.w,l.week),null!=t.d?(i=t.d,(0>i||i>6)&&(u=!0)):null!=t.e?(i=t.e+r,(t.e<0||t.e>6)&&(u=!0)):i=r}1>s||s>ke(n,r,a)?c(e)._overflowWeeks=!0:null!=u?c(e)._overflowWeekday=!0:(o=Se(n,s,i,r,a),e._a[ti]=o.year,e._dayOfYear=o.dayOfYear)}function dt(t){if(t._f===e.ISO_8601)return void it(t);t._a=[],c(t).empty=!0;var n,s,i,r,a,o=\"\"+t._i,u=o.length,l=0;for(i=J(t._f,t._locale).match(Rs)||[],n=0;n<i.length;n++)r=i[n],s=(o.match(X(r,t))||[])[0],s&&(a=o.substr(0,o.indexOf(s)),a.length>0&&c(t).unusedInput.push(a),o=o.slice(o.indexOf(s)+s.length),l+=s.length),Fs[r]?(s?c(t).empty=!1:c(t).unusedTokens.push(r),se(r,s,t)):t._strict&&!s&&c(t).unusedTokens.push(r);c(t).charsLeftOver=u-l,o.length>0&&c(t).unusedInput.push(o),t._a[ii]<=12&&c(t).bigHour===!0&&t._a[ii]>0&&(c(t).bigHour=void 0),c(t).parsedDateParts=t._a.slice(0),c(t).meridiem=t._meridiem,t._a[ii]=ht(t._locale,t._a[ii],t._meridiem),ut(t),st(t)}function ht(e,t,n){var s;return null==n?t:null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?(s=e.isPM(n),s&&12>t&&(t+=12),s||12!==t||(t=0),t):t}function ct(e){var t,n,s,i,r;if(0===e._f.length)return c(e).invalidFormat=!0,void(e._d=new Date(NaN));for(i=0;i<e._f.length;i++)r=0,t=y({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[i],dt(t),f(t)&&(r+=c(t).charsLeftOver,r+=10*c(t).unusedTokens.length,c(t).score=r,(null==s||s>r)&&(s=r,n=t));l(e,n||t)}function ft(e){if(!e._d){var t=L(e._i);e._a=o([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10)}),ut(e)}}function mt(e){var t=new g(st(_t(e)));return t._nextDay&&(t.add(1,\"d\"),t._nextDay=void 0),t}function _t(e){var t=e._i,s=e._f;return e._locale=e._locale||tt(e._l),null===t||void 0===s&&\"\"===t?m({nullInput:!0}):(\"string\"==typeof t&&(e._i=t=e._locale.preparse(t)),p(t)?new g(st(t)):(a(t)?e._d=t:n(s)?ct(e):s?dt(e):yt(e),f(e)||(e._d=null),e))}function yt(t){var s=t._i;void 0===s?t._d=new Date(e.now()):a(s)?t._d=new Date(s.valueOf()):\"string\"==typeof s?rt(t):n(s)?(t._a=o(s.slice(0),function(e){return parseInt(e,10)}),ut(t)):\"object\"==typeof s?ft(t):r(s)?t._d=new Date(s):e.createFromInputFallback(t)}function gt(e,t,r,a,o){var u={};return(r===!0||r===!1)&&(a=r,r=void 0),(s(e)&&i(e)||n(e)&&0===e.length)&&(e=void 0),u._isAMomentObject=!0,u._useUTC=u._isUTC=o,u._l=r,u._i=e,u._f=t,u._strict=a,mt(u)}function pt(e,t,n,s){return gt(e,t,n,s,!1)}function wt(e,t){var s,i;if(1===t.length&&n(t[0])&&(t=t[0]),!t.length)return pt();for(s=t[0],i=1;i<t.length;++i)(!t[i].isValid()||t[i][e](s))&&(s=t[i]);return s}function vt(){var e=[].slice.call(arguments,0);return wt(\"isBefore\",e)}function St(){var e=[].slice.call(arguments,0);return wt(\"isAfter\",e)}function Mt(e){var t=L(e),n=t.year||0,s=t.quarter||0,i=t.month||0,r=t.week||0,a=t.day||0,o=t.hour||0,u=t.minute||0,l=t.second||0,d=t.millisecond||0;this._milliseconds=+d+1e3*l+6e4*u+1e3*o*60*60,this._days=+a+7*r,this._months=+i+3*s+12*n,this._data={},this._locale=tt(),this._bubble()}function kt(e){return e instanceof Mt}function Dt(e){return 0>e?-1*Math.round(-1*e):Math.round(e)}function Yt(e,t){Z(e,0,0,function(){var e=this.utcOffset(),n=\"+\";return 0>e&&(e=-e,n=\"-\"),n+z(~~(e/60),2)+t+z(~~e%60,2)})}function Ot(e,t){var n=(t||\"\").match(e);if(null===n)return null;var s=n[n.length-1]||[],i=(s+\"\").match(Vi)||[\"-\",0,0],r=+(60*i[1])+v(i[2]);return 0===r?0:\"+\"===i[0]?r:-r}function xt(t,n){var s,i;return n._isUTC?(s=n.clone(),i=(p(t)||a(t)?t.valueOf():pt(t).valueOf())-s.valueOf(),s._d.setTime(s._d.valueOf()+i),e.updateOffset(s,!1),s):pt(t).local()}function Tt(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function bt(t,n){var s,i=this._offset||0;if(!this.isValid())return null!=t?this:NaN;if(null!=t){if(\"string\"==typeof t){if(t=Ot(Js,t),null===t)return this}else Math.abs(t)<16&&(t=60*t);return!this._isUTC&&n&&(s=Tt(this)),this._offset=t,this._isUTC=!0,null!=s&&this.add(s,\"m\"),i!==t&&(!n||this._changeInProgress?zt(this,jt(t-i,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,e.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?i:Tt(this)}function Pt(e,t){return null!=e?(\"string\"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()}function Wt(e){return this.utcOffset(0,e)}function Rt(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Tt(this),\"m\")),this}function Ut(){if(null!=this._tzm)this.utcOffset(this._tzm);else if(\"string\"==typeof this._i){var e=Ot(Bs,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this}function Ct(e){return this.isValid()?(e=e?pt(e).utcOffset():0,(this.utcOffset()-e)%60===0):!1}function Ft(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Ht(){if(!_(this._isDSTShifted))return this._isDSTShifted;var e={};if(y(e,this),e=_t(e),e._a){var t=e._isUTC?d(e._a):pt(e._a);this._isDSTShifted=this.isValid()&&S(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function Lt(){return this.isValid()?!this._isUTC:!1}function Gt(){return this.isValid()?this._isUTC:!1}function Vt(){return this.isValid()?this._isUTC&&0===this._offset:!1}function jt(e,t){var n,s,i,a=e,o=null;return kt(e)?a={ms:e._milliseconds,d:e._days,M:e._months}:r(e)?(a={},t?a[t]=e:a.milliseconds=e):(o=ji.exec(e))?(n=\"-\"===o[1]?-1:1,a={y:0,d:v(o[si])*n,h:v(o[ii])*n,m:v(o[ri])*n,s:v(o[ai])*n,ms:v(Dt(1e3*o[oi]))*n}):(o=Ni.exec(e))?(n=\"-\"===o[1]?-1:1,a={y:Nt(o[2],n),M:Nt(o[3],n),w:Nt(o[4],n),d:Nt(o[5],n),h:Nt(o[6],n),m:Nt(o[7],n),s:Nt(o[8],n)}):null==a?a={}:\"object\"==typeof a&&(\"from\"in a||\"to\"in a)&&(i=Et(pt(a.from),pt(a.to)),a={},a.ms=i.milliseconds,a.M=i.months),s=new Mt(a),kt(e)&&u(e,\"_locale\")&&(s._locale=e._locale),s}function Nt(e,t){var n=e&&parseFloat(e.replace(\",\",\".\"));return(isNaN(n)?0:n)*t}function At(e,t){var n={milliseconds:0,months:0};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,\"M\").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,\"M\"),n}function Et(e,t){var n;return e.isValid()&&t.isValid()?(t=xt(t,e),e.isBefore(t)?n=At(e,t):(n=At(t,e),n.milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}function It(e,t){return function(n,s){var i,r;return null===s||isNaN(+s)||(D(t,\"moment().\"+t+\"(period, number) is deprecated. Please use moment().\"+t+\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"),r=n,n=s,s=r),n=\"string\"==typeof n?+n:n,i=jt(n,s),zt(this,i,e),this}}function zt(t,n,s,i){var r=n._milliseconds,a=Dt(n._days),o=Dt(n._months);t.isValid()&&(i=null==i?!0:i,r&&t._d.setTime(t._d.valueOf()+r*s),a&&A(t,\"Date\",N(t,\"Date\")+a*s),o&&le(t,N(t,\"Month\")+o*s),i&&e.updateOffset(t,a||o))}function Zt(e,t){var n=e.diff(t,\"days\",!0);return-6>n?\"sameElse\":-1>n?\"lastWeek\":0>n?\"lastDay\":1>n?\"sameDay\":2>n?\"nextDay\":7>n?\"nextWeek\":\"sameElse\"}function $t(t,n){var s=t||pt(),i=xt(s,this).startOf(\"day\"),r=e.calendarFormat(this,i)||\"sameElse\",a=n&&(Y(n[r])?n[r].call(this,s):n[r]);return this.format(a||this.localeData().calendar(r,this,pt(s)))}function qt(){return new g(this)}function Bt(e,t){var n=p(e)?e:pt(e);return this.isValid()&&n.isValid()?(t=H(_(t)?\"millisecond\":t),\"millisecond\"===t?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf()):!1}function Jt(e,t){var n=p(e)?e:pt(e);return this.isValid()&&n.isValid()?(t=H(_(t)?\"millisecond\":t),\"millisecond\"===t?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf()):!1}function Qt(e,t,n,s){return s=s||\"()\",(\"(\"===s[0]?this.isAfter(e,n):!this.isBefore(e,n))&&(\")\"===s[1]?this.isBefore(t,n):!this.isAfter(t,n))}function Xt(e,t){var n,s=p(e)?e:pt(e);return this.isValid()&&s.isValid()?(t=H(t||\"millisecond\"),\"millisecond\"===t?this.valueOf()===s.valueOf():(n=s.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf())):!1}function Kt(e,t){return this.isSame(e,t)||this.isAfter(e,t)}function en(e,t){return this.isSame(e,t)||this.isBefore(e,t)}function tn(e,t,n){var s,i,r,a;return this.isValid()?(s=xt(e,this),s.isValid()?(i=6e4*(s.utcOffset()-this.utcOffset()),t=H(t),\"year\"===t||\"month\"===t||\"quarter\"===t?(a=nn(this,s),\"quarter\"===t?a/=3:\"year\"===t&&(a/=12)):(r=this-s,a=\"second\"===t?r/1e3:\"minute\"===t?r/6e4:\"hour\"===t?r/36e5:\"day\"===t?(r-i)/864e5:\"week\"===t?(r-i)/6048e5:r),n?a:w(a)):NaN):NaN}function nn(e,t){var n,s,i=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(i,\"months\");return 0>t-r?(n=e.clone().add(i-1,\"months\"),s=(t-r)/(r-n)):(n=e.clone().add(i+1,\"months\"),s=(t-r)/(n-r)),-(i+s)||0}function sn(){return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")}function rn(){var e=this.clone().utc();return 0<e.year()&&e.year()<=9999?Y(Date.prototype.toISOString)?this.toDate().toISOString():B(e,\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\"):B(e,\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\")}function an(){if(!this.isValid())return\"moment.invalid(/* \"+this._i+\" */)\";var e=\"moment\",t=\"\";this.isLocal()||(e=0===this.utcOffset()?\"moment.utc\":\"moment.parseZone\",t=\"Z\");var n=\"[\"+e+\\'(\"]\\',s=0<this.year()&&this.year()<=9999?\"YYYY\":\"YYYYYY\",i=\"-MM-DD[T]HH:mm:ss.SSS\",r=t+\\'[\")]\\';return this.format(n+s+i+r)}function on(t){t||(t=this.isUtc()?e.defaultFormatUtc:e.defaultFormat);var n=B(this,t);return this.localeData().postformat(n)}function un(e,t){return this.isValid()&&(p(e)&&e.isValid()||pt(e).isValid())?jt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function ln(e){return this.from(pt(),e)}function dn(e,t){return this.isValid()&&(p(e)&&e.isValid()||pt(e).isValid())?jt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function hn(e){return this.to(pt(),e)}function cn(e){var t;return void 0===e?this._locale._abbr:(t=tt(e),null!=t&&(this._locale=t),this)}function fn(){return this._locale}function mn(e){switch(e=H(e)){case\"year\":this.month(0);case\"quarter\":case\"month\":this.date(1);case\"week\":case\"isoWeek\":case\"day\":case\"date\":this.hours(0);case\"hour\":this.minutes(0);case\"minute\":this.seconds(0);case\"second\":this.milliseconds(0)}return\"week\"===e&&this.weekday(0),\"isoWeek\"===e&&this.isoWeekday(1),\"quarter\"===e&&this.month(3*Math.floor(this.month()/3)),this}function _n(e){return e=H(e),void 0===e||\"millisecond\"===e?this:(\"date\"===e&&(e=\"day\"),this.startOf(e).add(1,\"isoWeek\"===e?\"week\":e).subtract(1,\"ms\"))}function yn(){return this._d.valueOf()-6e4*(this._offset||0)}function gn(){return Math.floor(this.valueOf()/1e3)}function pn(){return new Date(this.valueOf())}function wn(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]}function vn(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}}function Sn(){return this.isValid()?this.toISOString():null}function Mn(){return f(this)}function kn(){return l({},c(this))}function Dn(){return c(this).overflow}function Yn(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function On(e,t){Z(0,[e,e.length],0,t)}function xn(e){return Wn.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function Tn(e){return Wn.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)}function bn(){return ke(this.year(),1,4)}function Pn(){var e=this.localeData()._week;return ke(this.year(),e.dow,e.doy)}function Wn(e,t,n,s,i){var r;return null==e?Me(this,s,i).year:(r=ke(e,s,i),t>r&&(t=r),Rn.call(this,e,t,n,s,i))}function Rn(e,t,n,s,i){var r=Se(e,t,n,s,i),a=we(r.year,0,r.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}function Un(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)}function Cn(e){var t=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==e?t:this.add(e-t,\"d\")}function Fn(e,t){t[oi]=v(1e3*(\"0.\"+e))}function Hn(){return this._isUTC?\"UTC\":\"\"}function Ln(){return this._isUTC?\"Coordinated Universal Time\":\"\"}function Gn(e){return pt(1e3*e)}function Vn(){return pt.apply(null,arguments).parseZone()}function jn(e){return e}function Nn(e,t,n,s){var i=tt(),r=d().set(s,t);return i[n](r,e)}function An(e,t,n){if(r(e)&&(t=e,e=void 0),e=e||\"\",null!=t)return Nn(e,t,n,\"month\");var s,i=[];for(s=0;12>s;s++)i[s]=Nn(e,s,n,\"month\");return i;\\n}function En(e,t,n,s){\"boolean\"==typeof e?(r(t)&&(n=t,t=void 0),t=t||\"\"):(t=e,n=t,e=!1,r(t)&&(n=t,t=void 0),t=t||\"\");var i=tt(),a=e?i._week.dow:0;if(null!=n)return Nn(t,(n+a)%7,s,\"day\");var o,u=[];for(o=0;7>o;o++)u[o]=Nn(t,(o+a)%7,s,\"day\");return u}function In(e,t){return An(e,t,\"months\")}function zn(e,t){return An(e,t,\"monthsShort\")}function Zn(e,t,n){return En(e,t,n,\"weekdays\")}function $n(e,t,n){return En(e,t,n,\"weekdaysShort\")}function qn(e,t,n){return En(e,t,n,\"weekdaysMin\")}function Bn(){var e=this._data;return this._milliseconds=Xi(this._milliseconds),this._days=Xi(this._days),this._months=Xi(this._months),e.milliseconds=Xi(e.milliseconds),e.seconds=Xi(e.seconds),e.minutes=Xi(e.minutes),e.hours=Xi(e.hours),e.months=Xi(e.months),e.years=Xi(e.yea';\n  builder.string += 'rs),this}function Jn(e,t,n,s){var i=jt(t,n);return e._milliseconds+=s*i._milliseconds,e._days+=s*i._days,e._months+=s*i._months,e._bubble()}function Qn(e,t){return Jn(this,e,t,1)}function Xn(e,t){return Jn(this,e,t,-1)}function Kn(e){return 0>e?Math.floor(e):Math.ceil(e)}function es(){var e,t,n,s,i,r=this._milliseconds,a=this._days,o=this._months,u=this._data;return r>=0&&a>=0&&o>=0||0>=r&&0>=a&&0>=o||(r+=864e5*Kn(ns(o)+a),a=0,o=0),u.milliseconds=r%1e3,e=w(r/1e3),u.seconds=e%60,t=w(e/60),u.minutes=t%60,n=w(t/60),u.hours=n%24,a+=w(n/24),i=w(ts(a)),o+=i,a-=Kn(ns(i)),s=w(o/12),o%=12,u.days=a,u.months=o,u.years=s,this}function ts(e){return 4800*e/146097}function ns(e){return 146097*e/4800}function ss(e){var t,n,s=this._milliseconds;if(e=H(e),\"month\"===e||\"year\"===e)return t=this._days+s/864e5,n=this._months+ts(t),\"month\"===e?n:n/12;switch(t=this._days+Math.round(ns(this._months)),e){case\"week\":return t/7+s/6048e5;case\"day\":return t+s/864e5;case\"hour\":return 24*t+s/36e5;case\"minute\":return 1440*t+s/6e4;case\"second\":return 86400*t+s/1e3;case\"millisecond\":return Math.floor(864e5*t)+s;default:throw new Error(\"Unknown unit \"+e)}}function is(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*v(this._months/12)}function rs(e){return function(){return this.as(e)}}function as(e){return e=H(e),this[e+\"s\"]()}function os(e){return function(){return this._data[e]}}function us(){return w(this.days()/7)}function ls(e,t,n,s,i){return i.relativeTime(t||1,!!n,e,s)}function ds(e,t,n){var s=jt(e).abs(),i=mr(s.as(\"s\")),r=mr(s.as(\"m\")),a=mr(s.as(\"h\")),o=mr(s.as(\"d\")),u=mr(s.as(\"M\")),l=mr(s.as(\"y\")),d=i<_r.s&&[\"s\",i]||1>=r&&[\"m\"]||r<_r.m&&[\"mm\",r]||1>=a&&[\"h\"]||a<_r.h&&[\"hh\",a]||1>=o&&[\"d\"]||o<_r.d&&[\"dd\",o]||1>=u&&[\"M\"]||u<_r.M&&[\"MM\",u]||1>=l&&[\"y\"]||[\"yy\",l];return d[2]=t,d[3]=+e>0,d[4]=n,ls.apply(null,d)}function hs(e){return void 0===e?mr:\"function\"==typeof e?(mr=e,!0):!1}function cs(e,t){return void 0===_r[e]?!1:void 0===t?_r[e]:(_r[e]=t,!0)}function fs(e){var t=this.localeData(),n=ds(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)}function ms(){var e,t,n,s=yr(this._milliseconds)/1e3,i=yr(this._days),r=yr(this._months);e=w(s/60),t=w(e/60),s%=60,e%=60,n=w(r/12),r%=12;var a=n,o=r,u=i,l=t,d=e,h=s,c=this.asSeconds();return c?(0>c?\"-\":\"\")+\"P\"+(a?a+\"Y\":\"\")+(o?o+\"M\":\"\")+(u?u+\"D\":\"\")+(l||d||h?\"T\":\"\")+(l?l+\"H\":\"\")+(d?d+\"M\":\"\")+(h?h+\"S\":\"\"):\"P0D\"}var _s,ys;ys=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,s=0;n>s;s++)if(s in t&&e.call(this,t[s],s,t))return!0;return!1};var gs=ys,ps=e.momentProperties=[],ws=!1,vs={};e.suppressDeprecationWarnings=!1,e.deprecationHandler=null;var Ss;Ss=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)u(e,t)&&n.push(t);return n};var Ms,ks=Ss,Ds={sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},Ys={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},Os=\"Invalid date\",xs=\"%d\",Ts=/\\\\d{1,2}/,bs={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},Ps={},Ws={},Rs=/(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Us=/(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Cs={},Fs={},Hs=/\\\\d/,Ls=/\\\\d\\\\d/,Gs=/\\\\d{3}/,Vs=/\\\\d{4}/,js=/[+-]?\\\\d{6}/,Ns=/\\\\d\\\\d?/,As=/\\\\d\\\\d\\\\d\\\\d?/,Es=/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d?/,Is=/\\\\d{1,3}/,zs=/\\\\d{1,4}/,Zs=/[+-]?\\\\d{1,6}/,$s=/\\\\d+/,qs=/[+-]?\\\\d+/,Bs=/Z|[+-]\\\\d\\\\d:?\\\\d\\\\d/gi,Js=/Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/gi,Qs=/[+-]?\\\\d+(\\\\.\\\\d{1,3})?/,Xs=/[0-9]*[\\'a-z\\\\u00A0-\\\\u05FF\\\\u0700-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]+|[\\\\u0600-\\\\u06FF\\\\/]+(\\\\s*?[\\\\u0600-\\\\u06FF]+){1,2}/i,Ks={},ei={},ti=0,ni=1,si=2,ii=3,ri=4,ai=5,oi=6,ui=7,li=8;Ms=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1};var di=Ms;Z(\"M\",[\"MM\",2],\"Mo\",function(){return this.month()+1}),Z(\"MMM\",0,0,function(e){return this.localeData().monthsShort(this,e)}),Z(\"MMMM\",0,0,function(e){return this.localeData().months(this,e)}),F(\"month\",\"M\"),G(\"month\",8),Q(\"M\",Ns),Q(\"MM\",Ns,Ls),Q(\"MMM\",function(e,t){return t.monthsShortRegex(e)}),Q(\"MMMM\",function(e,t){return t.monthsRegex(e)}),te([\"M\",\"MM\"],function(e,t){t[ni]=v(e)-1}),te([\"MMM\",\"MMMM\"],function(e,t,n,s){var i=n._locale.monthsParse(e,s,n._strict);null!=i?t[ni]=i:c(n).invalidMonth=e});var hi=/D[oD]?(\\\\[[^\\\\[\\\\]]*\\\\]|\\\\s)+MMMM?/,ci=\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),fi=\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),mi=Xs,_i=Xs;Z(\"Y\",0,0,function(){var e=this.year();return 9999>=e?\"\"+e:\"+\"+e}),Z(0,[\"YY\",2],0,function(){return this.year()%100}),Z(0,[\"YYYY\",4],0,\"year\"),Z(0,[\"YYYYY\",5],0,\"year\"),Z(0,[\"YYYYYY\",6,!0],0,\"year\"),F(\"year\",\"y\"),G(\"year\",1),Q(\"Y\",qs),Q(\"YY\",Ns,Ls),Q(\"YYYY\",zs,Vs),Q(\"YYYYY\",Zs,js),Q(\"YYYYYY\",Zs,js),te([\"YYYYY\",\"YYYYYY\"],ti),te(\"YYYY\",function(t,n){n[ti]=2===t.length?e.parseTwoDigitYear(t):v(t)}),te(\"YY\",function(t,n){n[ti]=e.parseTwoDigitYear(t)}),te(\"Y\",function(e,t){t[ti]=parseInt(e,10)}),e.parseTwoDigitYear=function(e){return v(e)+(v(e)>68?1900:2e3)};var yi=j(\"FullYear\",!0);Z(\"w\",[\"ww\",2],\"wo\",\"week\"),Z(\"W\",[\"WW\",2],\"Wo\",\"isoWeek\"),F(\"week\",\"w\"),F(\"isoWeek\",\"W\"),G(\"week\",5),G(\"isoWeek\",5),Q(\"w\",Ns),Q(\"ww\",Ns,Ls),Q(\"W\",Ns),Q(\"WW\",Ns,Ls),ne([\"w\",\"ww\",\"W\",\"WW\"],function(e,t,n,s){t[s.substr(0,1)]=v(e)});var gi={dow:0,doy:6};Z(\"d\",0,\"do\",\"day\"),Z(\"dd\",0,0,function(e){return this.localeData().weekdaysMin(this,e)}),Z(\"ddd\",0,0,function(e){return this.localeData().weekdaysShort(this,e)}),Z(\"dddd\",0,0,function(e){return this.localeData().weekdays(this,e)}),Z(\"e\",0,0,\"weekday\"),Z(\"E\",0,0,\"isoWeekday\"),F(\"day\",\"d\"),F(\"weekday\",\"e\"),F(\"isoWeekday\",\"E\"),G(\"day\",11),G(\"weekday\",11),G(\"isoWeekday\",11),Q(\"d\",Ns),Q(\"e\",Ns),Q(\"E\",Ns),Q(\"dd\",function(e,t){return t.weekdaysMinRegex(e)}),Q(\"ddd\",function(e,t){return t.weekdaysShortRegex(e)}),Q(\"dddd\",function(e,t){return t.weekdaysRegex(e)}),ne([\"dd\",\"ddd\",\"dddd\"],function(e,t,n,s){var i=n._locale.weekdaysParse(e,s,n._strict);null!=i?t.d=i:c(n).invalidWeekday=e}),ne([\"d\",\"e\",\"E\"],function(e,t,n,s){t[s]=v(e)});var pi=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),wi=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),vi=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),Si=Xs,Mi=Xs,ki=Xs;Z(\"H\",[\"HH\",2],0,\"hour\"),Z(\"h\",[\"hh\",2],0,Ee),Z(\"k\",[\"kk\",2],0,Ie),Z(\"hmm\",0,0,function(){return\"\"+Ee.apply(this)+z(this.minutes(),2)}),Z(\"hmmss\",0,0,function(){return\"\"+Ee.apply(this)+z(this.minutes(),2)+z(this.seconds(),2)}),Z(\"Hmm\",0,0,function(){return\"\"+this.hours()+z(this.minutes(),2)}),Z(\"Hmmss\",0,0,function(){return\"\"+this.hours()+z(this.minutes(),2)+z(this.seconds(),2)}),ze(\"a\",!0),ze(\"A\",!1),F(\"hour\",\"h\"),G(\"hour\",13),Q(\"a\",Ze),Q(\"A\",Ze),Q(\"H\",Ns),Q(\"h\",Ns),Q(\"HH\",Ns,Ls),Q(\"hh\",Ns,Ls),Q(\"hmm\",As),Q(\"hmmss\",Es),Q(\"Hmm\",As),Q(\"Hmmss\",Es),te([\"H\",\"HH\"],ii),te([\"a\",\"A\"],function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e}),te([\"h\",\"hh\"],function(e,t,n){t[ii]=v(e),c(n).bigHour=!0}),te(\"hmm\",function(e,t,n){var s=e.length-2;t[ii]=v(e.substr(0,s)),t[ri]=v(e.substr(s)),c(n).bigHour=!0}),te(\"hmmss\",function(e,t,n){var s=e.length-4,i=e.length-2;t[ii]=v(e.substr(0,s)),t[ri]=v(e.substr(s,2)),t[ai]=v(e.substr(i)),c(n).bigHour=!0}),te(\"Hmm\",function(e,t,n){var s=e.length-2;t[ii]=v(e.substr(0,s)),t[ri]=v(e.substr(s))}),te(\"Hmmss\",function(e,t,n){var s=e.length-4,i=e.length-2;t[ii]=v(e.substr(0,s)),t[ri]=v(e.substr(s,2)),t[ai]=v(e.substr(i))});var Di,Yi=/[ap]\\\\.?m?\\\\.?/i,Oi=j(\"Hours\",!0),xi={calendar:Ds,longDateFormat:Ys,invalidDate:Os,ordinal:xs,ordinalParse:Ts,relativeTime:bs,months:ci,monthsShort:fi,week:gi,weekdays:pi,weekdaysMin:vi,weekdaysShort:wi,meridiemParse:Yi},Ti={},bi={},Pi=/^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})-(?:\\\\d\\\\d-\\\\d\\\\d|W\\\\d\\\\d-\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?::\\\\d\\\\d(?::\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/,Wi=/^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})(?:\\\\d\\\\d\\\\d\\\\d|W\\\\d\\\\d\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?:\\\\d\\\\d(?:\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/,Ri=/Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/,Ui=[[\"YYYYYY-MM-DD\",/[+-]\\\\d{6}-\\\\d\\\\d-\\\\d\\\\d/],[\"YYYY-MM-DD\",/\\\\d{4}-\\\\d\\\\d-\\\\d\\\\d/],[\"GGGG-[W]WW-E\",/\\\\d{4}-W\\\\d\\\\d-\\\\d/],[\"GGGG-[W]WW\",/\\\\d{4}-W\\\\d\\\\d/,!1],[\"YYYY-DDD\",/\\\\d{4}-\\\\d{3}/],[\"YYYY-MM\",/\\\\d{4}-\\\\d\\\\d/,!1],[\"YYYYYYMMDD\",/[+-]\\\\d{10}/],[\"YYYYMMDD\",/\\\\d{8}/],[\"GGGG[W]WWE\",/\\\\d{4}W\\\\d{3}/],[\"GGGG[W]WW\",/\\\\d{4}W\\\\d{2}/,!1],[\"YYYYDDD\",/\\\\d{7}/]],Ci=[[\"HH:mm:ss.SSSS\",/\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d\\\\.\\\\d+/],[\"HH:mm:ss,SSSS\",/\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d,\\\\d+/],[\"HH:mm:ss\",/\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d/],[\"HH:mm\",/\\\\d\\\\d:\\\\d\\\\d/],[\"HHmmss.SSSS\",/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\.\\\\d+/],[\"HHmmss,SSSS\",/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d,\\\\d+/],[\"HHmmss\",/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d/],[\"HHmm\",/\\\\d\\\\d\\\\d\\\\d/],[\"HH\",/\\\\d\\\\d/]],Fi=/^\\\\/?Date\\\\((\\\\-?\\\\d+)/i;e.createFromInputFallback=k(\"value provided is not in a recognized ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",function(e){e._d=new Date(e._i+(e._useUTC?\" UTC\":\"\"))}),e.ISO_8601=function(){};var Hi=k(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var e=pt.apply(null,arguments);return this.isValid()&&e.isValid()?this>e?this:e:m()}),Li=k(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var e=pt.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:m()}),Gi=function(){return Date.now?Date.now():+new Date};Yt(\"Z\",\":\"),Yt(\"ZZ\",\"\"),Q(\"Z\",Js),Q(\"ZZ\",Js),te([\"Z\",\"ZZ\"],function(e,t,n){n._useUTC=!0,n._tzm=Ot(Js,e)});var Vi=/([\\\\+\\\\-]|\\\\d\\\\d)/gi;e.updateOffset=function(){};var ji=/^(\\\\-)?(?:(\\\\d*)[. ])?(\\\\d+)\\\\:(\\\\d+)(?:\\\\:(\\\\d+)(\\\\.\\\\d*)?)?$/,Ni=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;jt.fn=Mt.prototype;var Ai=It(1,\"add\"),Ei=It(-1,\"subtract\");e.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",e.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var Ii=k(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",function(e){return void 0===e?this.localeData():this.locale(e)});Z(0,[\"gg\",2],0,function(){return this.weekYear()%100}),Z(0,[\"GG\",2],0,function(){return this.isoWeekYear()%100}),On(\"gggg\",\"weekYear\"),On(\"ggggg\",\"weekYear\"),On(\"GGGG\",\"isoWeekYear\"),On(\"GGGGG\",\"isoWeekYear\"),F(\"weekYear\",\"gg\"),F(\"isoWeekYear\",\"GG\"),G(\"weekYear\",1),G(\"isoWeekYear\",1),Q(\"G\",qs),Q(\"g\",qs),Q(\"GG\",Ns,Ls),Q(\"gg\",Ns,Ls),Q(\"GGGG\",zs,Vs),Q(\"gggg\",zs,Vs),Q(\"GGGGG\",Zs,js),Q(\"ggggg\",Zs,js),ne([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],function(e,t,n,s){t[s.substr(0,2)]=v(e)}),ne([\"gg\",\"GG\"],function(t,n,s,i){n[i]=e.parseTwoDigitYear(t)}),Z(\"Q\",0,\"Qo\",\"quarter\"),F(\"quarter\",\"Q\"),G(\"quarter\",7),Q(\"Q\",Hs),te(\"Q\",function(e,t){t[ni]=3*(v(e)-1)}),Z(\"D\",[\"DD\",2],\"Do\",\"date\"),F(\"date\",\"D\"),G(\"date\",9),Q(\"D\",Ns),Q(\"DD\",Ns,Ls),Q(\"Do\",function(e,t){return e?t._ordinalParse:t._ordinalParseLenient}),te([\"D\",\"DD\"],si),te(\"Do\",function(e,t){t[si]=v(e.match(Ns)[0],10)});var zi=j(\"Date\",!0);Z(\"DDD\",[\"DDDD\",3],\"DDDo\",\"dayOfYear\"),F(\"dayOfYear\",\"DDD\"),G(\"dayOfYear\",4),Q(\"DDD\",Is),Q(\"DDDD\",Gs),te([\"DDD\",\"DDDD\"],function(e,t,n){n._dayOfYear=v(e)}),Z(\"m\",[\"mm\",2],0,\"minute\"),F(\"minute\",\"m\"),G(\"minute\",14),Q(\"m\",Ns),Q(\"mm\",Ns,Ls),te([\"m\",\"mm\"],ri);var Zi=j(\"Minutes\",!1);Z(\"s\",[\"ss\",2],0,\"second\"),F(\"second\",\"s\"),G(\"second\",15),Q(\"s\",Ns),Q(\"ss\",Ns,Ls),te([\"s\",\"ss\"],ai);var $i=j(\"Seconds\",!1);Z(\"S\",0,0,function(){return~~(this.millisecond()/100)}),Z(0,[\"SS\",2],0,function(){return~~(this.millisecond()/10)}),Z(0,[\"SSS\",3],0,\"millisecond\"),Z(0,[\"SSSS\",4],0,function(){return 10*this.millisecond()}),Z(0,[\"SSSSS\",5],0,function(){return 100*this.millisecond()}),Z(0,[\"SSSSSS\",6],0,function(){return 1e3*this.millisecond()}),Z(0,[\"SSSSSSS\",7],0,function(){return 1e4*this.millisecond()}),Z(0,[\"SSSSSSSS\",8],0,function(){return 1e5*this.millisecond()}),Z(0,[\"SSSSSSSSS\",9],0,function(){return 1e6*this.millisecond()}),F(\"millisecond\",\"ms\"),G(\"millisecond\",16),Q(\"S\",Is,Hs),Q(\"SS\",Is,Ls),Q(\"SSS\",Is,Gs);var qi;for(qi=\"SSSS\";qi.length<=9;qi+=\"S\")Q(qi,$s);for(qi=\"S\";qi.length<=9;qi+=\"S\")te(qi,Fn);var Bi=j(\"Milliseconds\",!1);Z(\"z\",0,0,\"zoneAbbr\"),Z(\"zz\",0,0,\"zoneName\");var Ji=g.prototype;Ji.add=Ai,Ji.calendar=$t,Ji.clone=qt,Ji.diff=tn,Ji.endOf=_n,Ji.format=on,Ji.from=un,Ji.fromNow=ln,Ji.to=dn,Ji.toNow=hn,Ji.get=E,Ji.invalidAt=Dn,Ji.isAfter=Bt,Ji.isBefore=Jt,Ji.isBetween=Qt,Ji.isSame=Xt,Ji.isSameOrAfter=Kt,Ji.isSameOrBefore=en,Ji.isValid=Mn,Ji.lang=Ii,Ji.locale=cn,Ji.localeData=fn,Ji.max=Li,Ji.min=Hi,Ji.parsingFlags=kn,Ji.set=I,Ji.startOf=mn,Ji.subtract=Ei,Ji.toArray=wn,Ji.toObject=vn,Ji.toDate=pn,Ji.toISOString=rn,Ji.inspect=an,Ji.toJSON=Sn,Ji.toString=sn,Ji.unix=gn,Ji.valueOf=yn,Ji.creationData=Yn,Ji.year=yi,Ji.isLeapYear=ge,Ji.weekYear=xn,Ji.isoWeekYear=Tn,Ji.quarter=Ji.quarters=Un,Ji.month=de,Ji.daysInMonth=he,Ji.week=Ji.weeks=xe,Ji.isoWeek=Ji.isoWeeks=Te,Ji.weeksInYear=Pn,Ji.isoWeeksInYear=bn,Ji.date=zi,Ji.day=Ji.days=He,Ji.weekday=Le,Ji.isoWeekday=Ge,Ji.dayOfYear=Cn,Ji.hour=Ji.hours=Oi,Ji.minute=Ji.minutes=Zi,Ji.second=Ji.seconds=$i,Ji.millisecond=Ji.milliseconds=Bi,Ji.utcOffset=bt,Ji.utc=Wt,Ji.local=Rt,Ji.parseZone=Ut,Ji.hasAlignedHourOffset=Ct,Ji.isDST=Ft,Ji.isLocal=Lt,Ji.isUtcOffset=Gt,Ji.isUtc=Vt,Ji.isUTC=Vt,Ji.zoneAbbr=Hn,Ji.zoneName=Ln,Ji.dates=k(\"dates accessor is deprecated. Use date instead.\",zi),Ji.months=k(\"months accessor is deprecated. Use month instead\",de),Ji.years=k(\"years accessor is deprecated. Use year instead\",yi),Ji.zone=k(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\",Pt),Ji.isDSTShifted=k(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\",Ht);var Qi=T.prototype;Qi.calendar=b,Qi.longDateFormat=P,Qi.invalidDate=W,Qi.ordinal=R,Qi.preparse=jn,Qi.postformat=jn,Qi.relativeTime=U,Qi.pastFuture=C,Qi.set=O,Qi.months=re,Qi.monthsShort=ae,Qi.monthsParse=ue,Qi.monthsRegex=fe,Qi.monthsShortRegex=ce,Qi.week=De,Qi.firstDayOfYear=Oe,Qi.firstDayOfWeek=Ye,Qi.weekdays=We,Qi.weekdaysMin=Ue,Qi.weekdaysShort=Re,Qi.weekdaysParse=Fe,Qi.weekdaysRegex=Ve,Qi.weekdaysShortRegex=je,Qi.weekdaysMinRegex=Ne,Qi.isPM=$e,Qi.meridiem=qe,Xe(\"en\",{ordinalParse:/\\\\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10,n=1===v(e%100/10)?\"th\":1===t?\"st\":2===t?\"nd\":3===t?\"rd\":\"th\";return e+n}}),e.lang=k(\"moment.lang is deprecated. Use moment.locale instead.\",Xe),e.langData=k(\"moment.langData is deprecated. Use moment.localeData instead.\",tt);var Xi=Math.abs,Ki=rs(\"ms\"),er=rs(\"s\"),tr=rs(\"m\"),nr=rs(\"h\"),sr=rs(\"d\"),ir=rs(\"w\"),rr=rs(\"M\"),ar=rs(\"y\"),or=os(\"milliseconds\"),ur=os(\"seconds\"),lr=os(\"minutes\"),dr=os(\"hours\"),hr=os(\"days\"),cr=os(\"months\"),fr=os(\"years\"),mr=Math.round,_r={s:45,m:45,h:22,d:26,M:11},yr=Math.abs,gr=Mt.prototype;return gr.abs=Bn,gr.add=Qn,gr.subtract=Xn,gr.as=ss,gr.asMilliseconds=Ki,gr.asSeconds=er,gr.asMinutes=tr,gr.asHours=nr,gr.asDays=sr,gr.asWeeks=ir,gr.asMonths=rr,gr.asYears=ar,gr.valueOf=is,gr._bubble=es,gr.get=as,gr.milliseconds=or,gr.seconds=ur,gr.minutes=lr,gr.hours=dr,gr.days=hr,gr.weeks=us,gr.months=cr,gr.years=fr,gr.humanize=fs,gr.toISOString=ms,gr.toString=ms,gr.toJSON=ms,gr.locale=cn,gr.localeData=fn,gr.toIsoString=k(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\",ms),gr.lang=Ii,Z(\"X\",0,0,\"unix\"),Z(\"x\",0,0,\"valueOf\"),Q(\"x\",qs),Q(\"X\",Qs),te(\"X\",function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))}),te(\"x\",function(e,t,n){n._d=new Date(v(e))}),e.version=\"2.17.1\",t(pt),e.fn=Ji,e.min=vt,e.max=St,e.now=Gi,e.utc=d,e.unix=Gn,e.months=In,e.isDate=a,e.locale=Xe,e.invalid=m,e.duration=jt,e.isMoment=p,e.weekdays=Zn,e.parseZone=Vn,e.localeData=tt,e.isDuration=kt,e.monthsShort=zn,e.weekdaysMin=qn,e.defineLocale=Ke,e.updateLocale=et,e.locales=nt,e.weekdaysShort=$n,e.normalizeUnits=H,e.relativeTimeRounding=hs,e.relativeTimeThreshold=cs,e.calendarFormat=Zt,e.prototype=Ji,e});';\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_livestamp_MaterialLiveStampClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass('gwt.material.design.addins.client.livestamp', 'MaterialLiveStampClientBundle_default_InlineClientBundleGenerator/2', 2664);\nfunction $clinit_MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$liveStampJsInitializer(){\n  $clinit_MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$liveStampJsInitializer = emptyMethod;\n  liveStampJs = new MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$momentJsInitializer(){\n  $clinit_MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$momentJsInitializer = emptyMethod;\n  momentJs = new MaterialLiveStampClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nvar liveStampDebugJs, momentDebugJs;\nfunction MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2661, 1, {}, MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_44(){\n  return 'liveStampDebugJs';\n}\n;\n_.getText = function getText_43(){\n  return \"// Livestamp.js / v1.1.2 / (c) 2012 Matt Bradley / MIT License\\n(function($, moment) {\\n    var updateInterval = 1e3,\\n        paused = false,\\n        $livestamps = $([]),\\n\\n        init = function() {\\n            livestampGlobal.resume();\\n        },\\n\\n        prep = function($el, timestamp) {\\n            var oldData = $el.data('livestampdata');\\n            if (typeof timestamp == 'number')\\n                timestamp *= 1e3;\\n\\n            $el.removeAttr('data-livestamp')\\n                .removeData('livestamp');\\n\\n            timestamp = moment(timestamp);\\n            if (moment.isMoment(timestamp) && !isNaN(+timestamp)) {\\n                var newData = $.extend({ }, { 'original': $el.contents() }, oldData);\\n                newData.moment = moment(timestamp);\\n\\n                $el.data('livestampdata', newData).empty();\\n                $livestamps.push($el[0]);\\n            }\\n        },\\n\\n        run = function() {\\n            if (paused) return;\\n            livestampGlobal.update();\\n            setTimeout(run, updateInterval);\\n        },\\n\\n        livestampGlobal = {\\n            update: function() {\\n                $('[data-livestamp]').each(function() {\\n                    var $this = $(this);\\n                    prep($this, $this.data('livestamp'));\\n                });\\n\\n                var toRemove = [];\\n                $livestamps.each(function() {\\n                    var $this = $(this),\\n                        data = $this.data('livestampdata');\\n\\n                    if (data === undefined)\\n                        toRemove.push(this);\\n                    else if (moment.isMoment(data.moment)) {\\n                        var from = $this.html(),\\n                            to = data.moment.fromNow();\\n\\n                        if (from != to) {\\n                            var e = $.Event('change.livestamp');\\n                            $this.trigger(e, [from, to]);\\n                            if (!e.isDefaultPrevented())\\n                                $this.html(to);\\n                        }\\n                    }\\n                });\\n\\n                $livestamps = $livestamps.not(toRemove);\\n            },\\n\\n            pause: function() {\\n                paused = true;\\n            },\\n\\n            resume: function() {\\n                paused = false;\\n                run();\\n            },\\n\\n            interval: function(interval) {\\n                if (interval === undefined)\\n                    return updateInterval;\\n                updateInterval = interval;\\n            }\\n        },\\n\\n        livestampLocal = {\\n            add: function($el, timestamp) {\\n                if (typeof timestamp == 'number')\\n                    timestamp *= 1e3;\\n                timestamp = moment(timestamp);\\n\\n                if (moment.isMoment(timestamp) && !isNaN(+timestamp)) {\\n                    $el.each(function() {\\n                        prep($(this), timestamp);\\n                    });\\n                    livestampGlobal.update();\\n                }\\n\\n                return $el;\\n            },\\n\\n            destroy: function($el) {\\n                $livestamps = $livestamps.not($el);\\n                $el.each(function() {\\n                    var $this = $(this),\\n                        data = $this.data('livestampdata');\\n\\n                    if (data === undefined)\\n                        return $el;\\n\\n                    $this\\n                        .html(data.original ? data.original : '')\\n                        .removeData('livestampdata');\\n                });\\n\\n                return $el;\\n            },\\n\\n            isLivestamp: function($el) {\\n                return $el.data('livestampdata') !== undefined;\\n            }\\n        };\\n\\n    $.livestamp = livestampGlobal;\\n    $(init);\\n    $.fn.livestamp = function(method, options) {\\n        if (!livestampLocal[method]) {\\n            options = method;\\n            method = 'add';\\n        }\\n\\n        return livestampLocal[method](this, options);\\n    };\\n})(jQuery, moment);\";\n}\n;\nvar Lgwt_material_design_addins_client_livestamp_MaterialLiveStampDebugClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('gwt.material.design.addins.client.livestamp', 'MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator/1', 2661);\nfunction MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(2662, 1, {}, MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_45(){\n  return 'momentDebugJs';\n}\n;\n_.getText = function getText_44(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += \"//! moment.js\\n//! version : 2.17.1\\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\\n//! license : MIT\\n//! momentjs.com\\n\\n;(function (global, factory) {\\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n        typeof define === 'function' && define.amd ? define(factory) :\\n            global.moment = factory()\\n}(this, (function () { 'use strict';\\n\\n    var hookCallback;\\n\\n    function hooks () {\\n        return hookCallback.apply(null, arguments);\\n    }\\n\\n// This is done to register the method called with moment()\\n// without creating circular dependencies.\\n    function setHookCallback (callback) {\\n        hookCallback = callback;\\n    }\\n\\n    function isArray(input) {\\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\\n    }\\n\\n    function isObject(input) {\\n        // IE8 will treat undefined and null as object if it wasn't for\\n        // input != null\\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\\n    }\\n\\n    function isObjectEmpty(obj) {\\n        var k;\\n        for (k in obj) {\\n            // even if its not own property I'd still call it non-empty\\n            return false;\\n        }\\n        return true;\\n    }\\n\\n    function isNumber(input) {\\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\\n    }\\n\\n    function isDate(input) {\\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\\n    }\\n\\n    function map(arr, fn) {\\n        var res = [], i;\\n        for (i = 0; i < arr.length; ++i) {\\n            res.push(fn(arr[i], i));\\n        }\\n        return res;\\n    }\\n\\n    function hasOwnProp(a, b) {\\n        return Object.prototype.hasOwnProperty.call(a, b);\\n    }\\n\\n    function extend(a, b) {\\n        for (var i in b) {\\n            if (hasOwnProp(b, i)) {\\n                a[i] = b[i];\\n            }\\n        }\\n\\n        if (hasOwnProp(b, 'toString')) {\\n            a.toString = b.toString;\\n        }\\n\\n        if (hasOwnProp(b, 'valueOf')) {\\n            a.valueOf = b.valueOf;\\n        }\\n\\n        return a;\\n    }\\n\\n    function createUTC (input, format, locale, strict) {\\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\\n    }\\n\\n    function defaultParsingFlags() {\\n        // We need to deep clone this object.\\n        return {\\n            empty           : false,\\n            unusedTokens    : [],\\n            unusedInput     : [],\\n            overflow        : -2,\\n            charsLeftOver   : 0,\\n            nullInput       : false,\\n            invalidMonth    : null,\\n            invalidFormat   : false,\\n            userInvalidated : false,\\n            iso             : false,\\n            parsedDateParts : [],\\n            meridiem        : null\\n        };\\n    }\\n\\n    function getParsingFlags(m) {\\n        if (m._pf == null) {\\n            m._pf = defaultParsingFlags();\\n        }\\n        return m._pf;\\n    }\\n\\n    var some;\\n    if (Array.prototype.some) {\\n        some = Array.prototype.some;\\n    } else {\\n        some = function (fun) {\\n            var t = Object(this);\\n            var len = t.length >>> 0;\\n\\n            for (var i = 0; i < len; i++) {\\n                if (i in t && fun.call(this, t[i], i, t)) {\\n                    return true;\\n                }\\n            }\\n\\n            return false;\\n        };\\n    }\\n\\n    var some$1 = some;\\n\\n    function isValid(m) {\\n        if (m._isValid == null) {\\n            var flags = getParsingFlags(m);\\n            var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\\n                return i != null;\\n            });\\n            var isNowValid = !isNaN(m._d.getTime()) &&\\n                flags.overflow < 0 &&\\n                !flags.empty &&\\n                !flags.invalidMonth &&\\n                !flags.invalidWeekday &&\\n                !flags.nullInput &&\\n                !flags.invalidFormat &&\\n                !flags.userInvalidated &&\\n                (!flags.meridiem || (flags.meridiem && parsedParts));\\n\\n            if (m._strict) {\\n                isNowValid = isNowValid &&\\n                    flags.charsLeftOver === 0 &&\\n                    flags.unusedTokens.length === 0 &&\\n                    flags.bigHour === undefined;\\n            }\\n\\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\\n                m._isValid = isNowValid;\\n            }\\n            else {\\n                return isNowValid;\\n            }\\n        }\\n        return m._isValid;\\n    }\\n\\n    function createInvalid (flags) {\\n        var m = createUTC(NaN);\\n        if (flags != null) {\\n            extend(getParsingFlags(m), flags);\\n        }\\n        else {\\n            getParsingFlags(m).userInvalidated = true;\\n        }\\n\\n        return m;\\n    }\\n\\n    function isUndefined(input) {\\n        return input === void 0;\\n    }\\n\\n// Plugins that add properties should also add the key here (null value),\\n// so we can properly clone ourselves.\\n    var momentProperties = hooks.momentProperties = [];\\n\\n    function copyConfig(to, from) {\\n        var i, prop, val;\\n\\n        if (!isUndefined(from._isAMomentObject)) {\\n            to._isAMomentObject = from._isAMomentObject;\\n        }\\n        if (!isUndefined(from._i)) {\\n            to._i = from._i;\\n        }\\n        if (!isUndefined(from._f)) {\\n            to._f = from._f;\\n        }\\n        if (!isUndefined(from._l)) {\\n            to._l = from._l;\\n        }\\n        if (!isUndefined(from._strict)) {\\n            to._strict = from._strict;\\n        }\\n        if (!isUndefined(from._tzm)) {\\n            to._tzm = from._tzm;\\n        }\\n        if (!isUndefined(from._isUTC)) {\\n            to._isUTC = from._isUTC;\\n        }\\n        if (!isUndefined(from._offset)) {\\n            to._offset = from._offset;\\n        }\\n        if (!isUndefined(from._pf)) {\\n            to._pf = getParsingFlags(from);\\n        }\\n        if (!isUndefined(from._locale)) {\\n            to._locale = from._locale;\\n        }\\n\\n        if (momentProperties.length > 0) {\\n            for (i in momentProperties) {\\n                prop = momentProperties[i];\\n                val = from[prop];\\n                if (!isUndefined(val)) {\\n                    to[prop] = val;\\n                }\\n            }\\n        }\\n\\n        return to;\\n    }\\n\\n    var updateInProgress = false;\\n\\n// Moment prototype object\\n    function Moment(config) {\\n        copyConfig(this, config);\\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\\n        if (!this.isValid()) {\\n            this._d = new Date(NaN);\\n        }\\n        // Prevent infinite loop in case updateOffset creates new moment\\n        // objects.\\n        if (updateInProgress === false) {\\n            updateInProgress = true;\\n            hooks.updateOffset(this);\\n            updateInProgress = false;\\n        }\\n    }\\n\\n    function isMoment (obj) {\\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\\n    }\\n\\n    function absFloor (number) {\\n        if (number < 0) {\\n            // -0 -> 0\\n            return Math.ceil(number) || 0;\\n        } else {\\n            return Math.floor(number);\\n        }\\n    }\\n\\n    function toInt(argumentForCoercion) {\\n        var coercedNumber = +argumentForCoercion,\\n            value = 0;\\n\\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\\n            value = absFloor(coercedNumber);\\n        }\\n\\n        return value;\\n    }\\n\\n// compare two arrays, return the number of differences\\n    function compareArrays(array1, array2, dontConvert) {\\n        var len = Math.min(array1.length, array2.length),\\n            lengthDiff = Math.abs(array1.length - array2.length),\\n            diffs = 0,\\n            i;\\n        for (i = 0; i < len; i++) {\\n            if ((dontConvert && array1[i] !== array2[i]) ||\\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\\n                diffs++;\\n            }\\n        }\\n        return diffs + lengthDiff;\\n    }\\n\\n    function warn(msg) {\\n        if (hooks.suppressDeprecationWarnings === false &&\\n            (typeof console !==  'undefined') && console.warn) {\\n            console.warn('Deprecation warning: ' + msg);\\n        }\\n    }\\n\\n    function deprecate(msg, fn) {\\n        var firstTime = true;\\n\\n        return extend(function () {\\n            if (hooks.deprecationHandler != null) {\\n                hooks.deprecationHandler(null, msg);\\n            }\\n            if (firstTime) {\\n                var args = [];\\n                var arg;\\n                for (var i = 0; i < arguments.length; i++) {\\n                    arg = '';\\n                    if (typeof arguments[i] === 'object') {\\n                        arg += '\\\\n[' + i + '] ';\\n                        for (var key in arguments[0]) {\\n                            arg += key + ': ' + arguments[0][key] + ', ';\\n                        }\\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\\n                    } else {\\n                        arg = arguments[i];\\n                    }\\n                    args.push(arg);\\n                }\\n                warn(msg + '\\\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\\\n' + (new Error()).stack);\\n                firstTime = false;\\n            }\\n            return fn.apply(this, arguments);\\n        }, fn);\\n    }\\n\\n    var deprecations = {};\\n\\n    function deprecateSimple(name, msg) {\\n        if (hooks.deprecationHandler != null) {\\n            hooks.deprecationHandler(name, msg);\\n        }\\n        if (!deprecations[name]) {\\n            warn(msg);\\n            deprecations[name] = true;\\n        }\\n    }\\n\\n    hooks.suppressDeprecationWarnings = false;\\n    hooks.deprecationHandler = null;\\n\\n    function isFunction(input) {\\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\\n    }\\n\\n    function set (config) {\\n        var prop, i;\\n        for (i in config) {\\n            prop = config[i];\\n            if (isFunction(prop)) {\\n                this[i] = prop;\\n            } else {\\n                this['_' + i] = prop;\\n            }\\n        }\\n        this._config = config;\\n        // Lenient ordinal parsing accepts just a number in addition to\\n        // number + (possibly) stuff coming from _ordinalParseLenient.\\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\\\d{1,2}/).source);\\n    }\\n\\n    function mergeConfigs(parentConfig, childConfig) {\\n        var res = extend({}, parentConfig), prop;\\n        for (prop in childConfig) {\\n            if (hasOwnProp(childConfig, prop)) {\\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\\n                    res[prop] = {};\\n                    extend(res[prop], parentConfig[prop]);\\n                    extend(res[prop], childConfig[prop]);\\n                } else if (childConfig[prop] != null) {\\n                    res[prop] = childConfig[prop];\\n                } else {\\n                    delete res[prop];\\n                }\\n            }\\n        }\\n        for (prop in parentConfig) {\\n            if (hasOwnProp(parentConfig, prop) &&\\n                !hasOwnProp(childConfig, prop) &&\\n                isObject(parentConfig[prop])) {\\n                // make sure changes to properties don't modify parent config\\n                res[prop] = extend({}, res[prop]);\\n            }\\n        }\\n        return res;\\n    }\\n\\n    function Locale(config) {\\n        if (config != null) {\\n            this.set(config);\\n        }\\n    }\\n\\n    var keys;\\n\\n    if (Object.keys) {\\n        keys = Object.keys;\\n    } else {\\n        keys = function (obj) {\\n            var i, res = [];\\n            for (i in obj) {\\n                if (hasOwnProp(obj, i)) {\\n                    res.push(i);\\n                }\\n            }\\n            return res;\\n        };\\n    }\\n\\n    var keys$1 = keys;\\n\\n    var defaultCalendar = {\\n        sameDay : '[Today at] LT',\\n        nextDay : '[Tomorrow at] LT',\\n        nextWeek : 'dddd [at] LT',\\n        lastDay : '[Yesterday at] LT',\\n        lastWeek : '[Last] dddd [at] LT',\\n        sameElse : 'L'\\n    };\\n\\n    function calendar (key, mom, now) {\\n        var output = this._calendar[key] || this._calendar['sameElse'];\\n        return isFunction(output) ? output.call(mom, now) : output;\\n    }\\n\\n    var defaultLongDateFormat = {\\n        LTS  : 'h:mm:ss A',\\n        LT   : 'h:mm A',\\n        L    : 'MM/DD/YYYY',\\n        LL   : 'MMMM D, YYYY',\\n        LLL  : 'MMMM D, YYYY h:mm A',\\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\\n    };\\n\\n    function longDateFormat (key) {\\n        var format = this._longDateFormat[key],\\n            formatUpper = this._longDateFormat[key.toUpperCase()];\\n\\n        if (format || !formatUpper) {\\n            return format;\\n        }\\n\\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\\n            return val.slice(1);\\n        });\\n\\n        return this._longDateFormat[key];\\n    }\\n\\n    var defaultInvalidDate = 'Invalid date';\\n\\n    function invalidDate () {\\n        return this._invalidDate;\\n    }\\n\\n    var defaultOrdinal = '%d';\\n    var defaultOrdinalParse = /\\\\d{1,2}/;\\n\\n    function ordinal (number) {\\n        return this._ordinal.replace('%d', number);\\n    }\\n\\n    var defaultRelativeTime = {\\n        future : 'in %s',\\n        past   : '%s ago',\\n        s  : 'a few seconds',\\n        m  : 'a minute',\\n        mm : '%d minutes',\\n        h  : 'an hour',\\n        hh : '%d hours',\\n        d  : 'a day',\\n        dd : '%d days',\\n        M  : 'a month',\\n        MM : '%d months',\\n        y  : 'a year',\\n        yy : '%d years'\\n    };\\n\\n    function relativeTime (number, withoutSuffix, string, isFuture) {\\n        var output = this._relativeTime[string];\\n        return (isFunction(output)) ?\\n            output(number, withoutSuffix, string, isFuture) :\\n            output.replace(/%d/i, number);\\n    }\\n\\n    function pastFuture (diff, output) {\\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\\n    }\\n\\n    var aliases = {};\\n\\n    function addUnitAlias (unit, shorthand) {\\n        var lowerCase = unit.toLowerCase();\\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\\n    }\\n\\n    function normalizeUnits(units) {\\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\\n    }\\n\\n    function normalizeObjectUnits(inputObject) {\\n        var normalizedInput = {},\\n            normalizedProp,\\n            prop;\\n\\n        for (prop in inputObject) {\\n            if (hasOwnProp(inputObject, prop)) {\\n                normalizedProp = normalizeUnits(prop);\\n                if (normalizedProp) {\\n                    normalizedInput[normalizedProp] = inputObject[prop];\\n                }\\n            }\\n        }\\n\\n        return normalizedInput;\\n    }\\n\\n    var priorities = {};\\n\\n    function addUnitPriority(unit, priority) {\\n        priorities[unit] = priority;\\n    }\\n\\n    function getPrioritizedUnits(unitsObj) {\\n        var units = [];\\n        for (var u in unitsObj) {\\n            units.push({unit: u, priority: priorities[u]});\\n        }\\n        units.sort(function (a, b) {\\n            return a.priority - b.priority;\\n        });\\n        return units;\\n    }\\n\\n    function makeGetSet (unit, keepTime) {\\n        return function (value) {\\n            if (value != null) {\\n                set$1(this, unit, value);\\n                hooks.updateOffset(this, keepTime);\\n                return this;\\n            } else {\\n                return get(this, unit);\\n            }\\n        };\\n    }\\n\\n    function get (mom, unit) {\\n        return mom.isValid() ?\\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\\n    }\\n\\n    function set$1 (mom, unit, value) {\\n        if (mom.isValid()) {\\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\\n        }\\n    }\\n\\n// MOMENTS\\n\\n    function stringGet (units) {\\n        units = normalizeUnits(units);\\n        if (isFunction(this[units])) {\\n            return this[units]();\\n        }\\n        return this;\\n    }\\n\\n\\n    function stringSet (units, value) {\\n        if (typeof units === 'object') {\\n            units = normalizeObjectUnits(units);\\n            var prioritized = getPrioritizedUnits(units);\\n            for (var i = 0; i < prioritized.length; i++) {\\n                this[prioritized[i].unit](units[prioritized[\";\n  builder.string += \"i].unit]);\\n            }\\n        } else {\\n            units = normalizeUnits(units);\\n            if (isFunction(this[units])) {\\n                return this[units](value);\\n            }\\n        }\\n        return this;\\n    }\\n\\n    function zeroFill(number, targetLength, forceSign) {\\n        var absNumber = '' + Math.abs(number),\\n            zerosToFill = targetLength - absNumber.length,\\n            sign = number >= 0;\\n        return (sign ? (forceSign ? '+' : '') : '-') +\\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\\n    }\\n\\n    var formattingTokens = /(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\\n\\n    var localFormattingTokens = /(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\\n\\n    var formatFunctions = {};\\n\\n    var formatTokenFunctions = {};\\n\\n// token:    'M'\\n// padded:   ['MM', 2]\\n// ordinal:  'Mo'\\n// callback: function () { this.month() + 1 }\\n    function addFormatToken (token, padded, ordinal, callback) {\\n        var func = callback;\\n        if (typeof callback === 'string') {\\n            func = function () {\\n                return this[callback]();\\n            };\\n        }\\n        if (token) {\\n            formatTokenFunctions[token] = func;\\n        }\\n        if (padded) {\\n            formatTokenFunctions[padded[0]] = function () {\\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\\n            };\\n        }\\n        if (ordinal) {\\n            formatTokenFunctions[ordinal] = function () {\\n                return this.localeData().ordinal(func.apply(this, arguments), token);\\n            };\\n        }\\n    }\\n\\n    function removeFormattingTokens(input) {\\n        if (input.match(/\\\\[[\\\\s\\\\S]/)) {\\n            return input.replace(/^\\\\[|\\\\]$/g, '');\\n        }\\n        return input.replace(/\\\\\\\\/g, '');\\n    }\\n\\n    function makeFormatFunction(format) {\\n        var array = format.match(formattingTokens), i, length;\\n\\n        for (i = 0, length = array.length; i < length; i++) {\\n            if (formatTokenFunctions[array[i]]) {\\n                array[i] = formatTokenFunctions[array[i]];\\n            } else {\\n                array[i] = removeFormattingTokens(array[i]);\\n            }\\n        }\\n\\n        return function (mom) {\\n            var output = '', i;\\n            for (i = 0; i < length; i++) {\\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\\n            }\\n            return output;\\n        };\\n    }\\n\\n// format date using native date object\\n    function formatMoment(m, format) {\\n        if (!m.isValid()) {\\n            return m.localeData().invalidDate();\\n        }\\n\\n        format = expandFormat(format, m.localeData());\\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\\n\\n        return formatFunctions[format](m);\\n    }\\n\\n    function expandFormat(format, locale) {\\n        var i = 5;\\n\\n        function replaceLongDateFormatTokens(input) {\\n            return locale.longDateFormat(input) || input;\\n        }\\n\\n        localFormattingTokens.lastIndex = 0;\\n        while (i >= 0 && localFormattingTokens.test(format)) {\\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\\n            localFormattingTokens.lastIndex = 0;\\n            i -= 1;\\n        }\\n\\n        return format;\\n    }\\n\\n    var match1         = /\\\\d/;            //       0 - 9\\n    var match2         = /\\\\d\\\\d/;          //      00 - 99\\n    var match3         = /\\\\d{3}/;         //     000 - 999\\n    var match4         = /\\\\d{4}/;         //    0000 - 9999\\n    var match6         = /[+-]?\\\\d{6}/;    // -999999 - 999999\\n    var match1to2      = /\\\\d\\\\d?/;         //       0 - 99\\n    var match3to4      = /\\\\d\\\\d\\\\d\\\\d?/;     //     999 - 9999\\n    var match5to6      = /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d?/; //   99999 - 999999\\n    var match1to3      = /\\\\d{1,3}/;       //       0 - 999\\n    var match1to4      = /\\\\d{1,4}/;       //       0 - 9999\\n    var match1to6      = /[+-]?\\\\d{1,6}/;  // -999999 - 999999\\n\\n    var matchUnsigned  = /\\\\d+/;           //       0 - inf\\n    var matchSigned    = /[+-]?\\\\d+/;      //    -inf - inf\\n\\n    var matchOffset    = /Z|[+-]\\\\d\\\\d:?\\\\d\\\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\\n    var matchShortOffset = /Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\\n\\n    var matchTimestamp = /[+-]?\\\\d+(\\\\.\\\\d{1,3})?/; // 123456789 123456789.123\\n\\n// any word (or two) characters or numbers including two/three word month in arabic.\\n// includes scottish gaelic two word and hyphenated months\\n    var matchWord = /[0-9]*['a-z\\\\u00A0-\\\\u05FF\\\\u0700-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]+|[\\\\u0600-\\\\u06FF\\\\/]+(\\\\s*?[\\\\u0600-\\\\u06FF]+){1,2}/i;\\n\\n\\n    var regexes = {};\\n\\n    function addRegexToken (token, regex, strictRegex) {\\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\\n            return (isStrict && strictRegex) ? strictRegex : regex;\\n        };\\n    }\\n\\n    function getParseRegexForToken (token, config) {\\n        if (!hasOwnProp(regexes, token)) {\\n            return new RegExp(unescapeFormat(token));\\n        }\\n\\n        return regexes[token](config._strict, config._locale);\\n    }\\n\\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\\n    function unescapeFormat(s) {\\n        return regexEscape(s.replace('\\\\\\\\', '').replace(/\\\\\\\\(\\\\[)|\\\\\\\\(\\\\])|\\\\[([^\\\\]\\\\[]*)\\\\]|\\\\\\\\(.)/g, function (matched, p1, p2, p3, p4) {\\n            return p1 || p2 || p3 || p4;\\n        }));\\n    }\\n\\n    function regexEscape(s) {\\n        return s.replace(/[-\\\\/\\\\\\\\^$*+?.()|[\\\\]{}]/g, '\\\\\\\\$&');\\n    }\\n\\n    var tokens = {};\\n\\n    function addParseToken (token, callback) {\\n        var i, func = callback;\\n        if (typeof token === 'string') {\\n            token = [token];\\n        }\\n        if (isNumber(callback)) {\\n            func = function (input, array) {\\n                array[callback] = toInt(input);\\n            };\\n        }\\n        for (i = 0; i < token.length; i++) {\\n            tokens[token[i]] = func;\\n        }\\n    }\\n\\n    function addWeekParseToken (token, callback) {\\n        addParseToken(token, function (input, array, config, token) {\\n            config._w = config._w || {};\\n            callback(input, config._w, config, token);\\n        });\\n    }\\n\\n    function addTimeToArrayFromToken(token, input, config) {\\n        if (input != null && hasOwnProp(tokens, token)) {\\n            tokens[token](input, config._a, config, token);\\n        }\\n    }\\n\\n    var YEAR = 0;\\n    var MONTH = 1;\\n    var DATE = 2;\\n    var HOUR = 3;\\n    var MINUTE = 4;\\n    var SECOND = 5;\\n    var MILLISECOND = 6;\\n    var WEEK = 7;\\n    var WEEKDAY = 8;\\n\\n    var indexOf;\\n\\n    if (Array.prototype.indexOf) {\\n        indexOf = Array.prototype.indexOf;\\n    } else {\\n        indexOf = function (o) {\\n            // I know\\n            var i;\\n            for (i = 0; i < this.length; ++i) {\\n                if (this[i] === o) {\\n                    return i;\\n                }\\n            }\\n            return -1;\\n        };\\n    }\\n\\n    var indexOf$1 = indexOf;\\n\\n    function daysInMonth(year, month) {\\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\\n    }\\n\\n// FORMATTING\\n\\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\\n        return this.month() + 1;\\n    });\\n\\n    addFormatToken('MMM', 0, 0, function (format) {\\n        return this.localeData().monthsShort(this, format);\\n    });\\n\\n    addFormatToken('MMMM', 0, 0, function (format) {\\n        return this.localeData().months(this, format);\\n    });\\n\\n// ALIASES\\n\\n    addUnitAlias('month', 'M');\\n\\n// PRIORITY\\n\\n    addUnitPriority('month', 8);\\n\\n// PARSING\\n\\n    addRegexToken('M',    match1to2);\\n    addRegexToken('MM',   match1to2, match2);\\n    addRegexToken('MMM',  function (isStrict, locale) {\\n        return locale.monthsShortRegex(isStrict);\\n    });\\n    addRegexToken('MMMM', function (isStrict, locale) {\\n        return locale.monthsRegex(isStrict);\\n    });\\n\\n    addParseToken(['M', 'MM'], function (input, array) {\\n        array[MONTH] = toInt(input) - 1;\\n    });\\n\\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\\n        var month = config._locale.monthsParse(input, token, config._strict);\\n        // if we didn't find a month name, mark the date as invalid.\\n        if (month != null) {\\n            array[MONTH] = month;\\n        } else {\\n            getParsingFlags(config).invalidMonth = input;\\n        }\\n    });\\n\\n// LOCALES\\n\\n    var MONTHS_IN_FORMAT = /D[oD]?(\\\\[[^\\\\[\\\\]]*\\\\]|\\\\s)+MMMM?/;\\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\\n    function localeMonths (m, format) {\\n        if (!m) {\\n            return this._months;\\n        }\\n        return isArray(this._months) ? this._months[m.month()] :\\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\\n    }\\n\\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\\n    function localeMonthsShort (m, format) {\\n        if (!m) {\\n            return this._monthsShort;\\n        }\\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\\n    }\\n\\n    function handleStrictParse(monthName, format, strict) {\\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\\n        if (!this._monthsParse) {\\n            // this is not used\\n            this._monthsParse = [];\\n            this._longMonthsParse = [];\\n            this._shortMonthsParse = [];\\n            for (i = 0; i < 12; ++i) {\\n                mom = createUTC([2000, i]);\\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\\n            }\\n        }\\n\\n        if (strict) {\\n            if (format === 'MMM') {\\n                ii = indexOf$1.call(this._shortMonthsParse, llc);\\n                return ii !== -1 ? ii : null;\\n            } else {\\n                ii = indexOf$1.call(this._longMonthsParse, llc);\\n                return ii !== -1 ? ii : null;\\n            }\\n        } else {\\n            if (format === 'MMM') {\\n                ii = indexOf$1.call(this._shortMonthsParse, llc);\\n                if (ii !== -1) {\\n                    return ii;\\n                }\\n                ii = indexOf$1.call(this._longMonthsParse, llc);\\n                return ii !== -1 ? ii : null;\\n            } else {\\n                ii = indexOf$1.call(this._longMonthsParse, llc);\\n                if (ii !== -1) {\\n                    return ii;\\n                }\\n                ii = indexOf$1.call(this._shortMonthsParse, llc);\\n                return ii !== -1 ? ii : null;\\n            }\\n        }\\n    }\\n\\n    function localeMonthsParse (monthName, format, strict) {\\n        var i, mom, regex;\\n\\n        if (this._monthsParseExact) {\\n            return handleStrictParse.call(this, monthName, format, strict);\\n        }\\n\\n        if (!this._monthsParse) {\\n            this._monthsParse = [];\\n            this._longMonthsParse = [];\\n            this._shortMonthsParse = [];\\n        }\\n\\n        // TODO: add sorting\\n        // Sorting makes sure if one month (or abbr) is a prefix of another\\n        // see sorting in computeMonthsParse\\n        for (i = 0; i < 12; i++) {\\n            // make the regex if we don't have it already\\n            mom = createUTC([2000, i]);\\n            if (strict && !this._longMonthsParse[i]) {\\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\\n            }\\n            if (!strict && !this._monthsParse[i]) {\\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\\n            }\\n            // test the regex\\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\\n                return i;\\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\\n                return i;\\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\\n                return i;\\n            }\\n        }\\n    }\\n\\n// MOMENTS\\n\\n    function setMonth (mom, value) {\\n        var dayOfMonth;\\n\\n        if (!mom.isValid()) {\\n            // No op\\n            return mom;\\n        }\\n\\n        if (typeof value === 'string') {\\n            if (/^\\\\d+$/.test(value)) {\\n                value = toInt(value);\\n            } else {\\n                value = mom.localeData().monthsParse(value);\\n                // TODO: Another silent failure?\\n                if (!isNumber(value)) {\\n                    return mom;\\n                }\\n            }\\n        }\\n\\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\\n        return mom;\\n    }\\n\\n    function getSetMonth (value) {\\n        if (value != null) {\\n            setMonth(this, value);\\n            hooks.updateOffset(this, true);\\n            return this;\\n        } else {\\n            return get(this, 'Month');\\n        }\\n    }\\n\\n    function getDaysInMonth () {\\n        return daysInMonth(this.year(), this.month());\\n    }\\n\\n    var defaultMonthsShortRegex = matchWord;\\n    function monthsShortRegex (isStrict) {\\n        if (this._monthsParseExact) {\\n            if (!hasOwnProp(this, '_monthsRegex')) {\\n                computeMonthsParse.call(this);\\n            }\\n            if (isStrict) {\\n                return this._monthsShortStrictRegex;\\n            } else {\\n                return this._monthsShortRegex;\\n            }\\n        } else {\\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\\n                this._monthsShortRegex = defaultMonthsShortRegex;\\n            }\\n            return this._monthsShortStrictRegex && isStrict ?\\n                this._monthsShortStrictRegex : this._monthsShortRegex;\\n        }\\n    }\\n\\n    var defaultMonthsRegex = matchWord;\\n    function monthsRegex (isStrict) {\\n        if (this._monthsParseExact) {\\n            if (!hasOwnProp(this, '_monthsRegex')) {\\n                computeMonthsParse.call(this);\\n            }\\n            if (isStrict) {\\n                return this._monthsStrictRegex;\\n            } else {\\n                return this._monthsRegex;\\n            }\\n        } else {\\n            if (!hasOwnProp(this, '_monthsRegex')) {\\n                this._monthsRegex = defaultMonthsRegex;\\n            }\\n            return this._monthsStrictRegex && isStrict ?\\n                this._monthsStrictRegex : this._monthsRegex;\\n        }\\n    }\\n\\n    function computeMonthsParse () {\\n        function cmpLenRev(a, b) {\\n            return b.length - a.length;\\n        }\\n\\n        var shortPieces = [], longPieces = [], mixedPieces = [],\\n            i, mom;\\n        for (i = 0; i < 12; i++) {\\n            // make the regex if we don't have it already\\n            mom = createUTC([2000, i]);\\n            shortPieces.push(this.monthsShort(mom, ''));\\n            longPieces.push(this.months(mom, ''));\\n            mixedPieces.push(this.months(mom, ''));\\n            mixedPieces.push(this.monthsShort(mom, ''));\\n        }\\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\\n        // will match the longer piece.\\n        shortPieces.sort(cmpLenRev);\\n        longPieces.sort(cmpLenRev);\\n        mixedPieces.sort(cmpLenRev);\\n        for (i = 0; i < 12; i++) {\\n            shortPieces[i] = regexEscape(shortPieces[i]);\\n            longPieces[i] = regexEscape(longPieces[i]);\\n        }\\n        for (i = 0; i < 24; i++) {\\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\\n        }\\n\\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\\n        this._monthsShortRegex = this._monthsRegex;\\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\\n    }\\n\\n// FORMATTING\\n\\n    addFormatToken('Y', 0, 0, function () {\\n        var y = this.year();\\n        return y <= 9999 ? '' + y : '+' + y;\\n   \";\n  builder.string += \" });\\n\\n    addFormatToken(0, ['YY', 2], 0, function () {\\n        return this.year() % 100;\\n    });\\n\\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\\n\\n// ALIASES\\n\\n    addUnitAlias('year', 'y');\\n\\n// PRIORITIES\\n\\n    addUnitPriority('year', 1);\\n\\n// PARSING\\n\\n    addRegexToken('Y',      matchSigned);\\n    addRegexToken('YY',     match1to2, match2);\\n    addRegexToken('YYYY',   match1to4, match4);\\n    addRegexToken('YYYYY',  match1to6, match6);\\n    addRegexToken('YYYYYY', match1to6, match6);\\n\\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\\n    addParseToken('YYYY', function (input, array) {\\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\\n    });\\n    addParseToken('YY', function (input, array) {\\n        array[YEAR] = hooks.parseTwoDigitYear(input);\\n    });\\n    addParseToken('Y', function (input, array) {\\n        array[YEAR] = parseInt(input, 10);\\n    });\\n\\n// HELPERS\\n\\n    function daysInYear(year) {\\n        return isLeapYear(year) ? 366 : 365;\\n    }\\n\\n    function isLeapYear(year) {\\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\\n    }\\n\\n// HOOKS\\n\\n    hooks.parseTwoDigitYear = function (input) {\\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\\n    };\\n\\n// MOMENTS\\n\\n    var getSetYear = makeGetSet('FullYear', true);\\n\\n    function getIsLeapYear () {\\n        return isLeapYear(this.year());\\n    }\\n\\n    function createDate (y, m, d, h, M, s, ms) {\\n        //can't just apply() to create a date:\\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\\n        var date = new Date(y, m, d, h, M, s, ms);\\n\\n        //the date constructor remaps years 0-99 to 1900-1999\\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\\n            date.setFullYear(y);\\n        }\\n        return date;\\n    }\\n\\n    function createUTCDate (y) {\\n        var date = new Date(Date.UTC.apply(null, arguments));\\n\\n        //the Date.UTC function remaps years 0-99 to 1900-1999\\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\\n            date.setUTCFullYear(y);\\n        }\\n        return date;\\n    }\\n\\n// start-of-first-week - start-of-year\\n    function firstWeekOffset(year, dow, doy) {\\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\\n            fwd = 7 + dow - doy,\\n            // first-week day local weekday -- which local weekday is fwd\\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\\n\\n        return -fwdlw + fwd - 1;\\n    }\\n\\n//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\\n        var localWeekday = (7 + weekday - dow) % 7,\\n            weekOffset = firstWeekOffset(year, dow, doy),\\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\\n            resYear, resDayOfYear;\\n\\n        if (dayOfYear <= 0) {\\n            resYear = year - 1;\\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\\n        } else if (dayOfYear > daysInYear(year)) {\\n            resYear = year + 1;\\n            resDayOfYear = dayOfYear - daysInYear(year);\\n        } else {\\n            resYear = year;\\n            resDayOfYear = dayOfYear;\\n        }\\n\\n        return {\\n            year: resYear,\\n            dayOfYear: resDayOfYear\\n        };\\n    }\\n\\n    function weekOfYear(mom, dow, doy) {\\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\\n            resWeek, resYear;\\n\\n        if (week < 1) {\\n            resYear = mom.year() - 1;\\n            resWeek = week + weeksInYear(resYear, dow, doy);\\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\\n            resYear = mom.year() + 1;\\n        } else {\\n            resYear = mom.year();\\n            resWeek = week;\\n        }\\n\\n        return {\\n            week: resWeek,\\n            year: resYear\\n        };\\n    }\\n\\n    function weeksInYear(year, dow, doy) {\\n        var weekOffset = firstWeekOffset(year, dow, doy),\\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\\n    }\\n\\n// FORMATTING\\n\\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\\n\\n// ALIASES\\n\\n    addUnitAlias('week', 'w');\\n    addUnitAlias('isoWeek', 'W');\\n\\n// PRIORITIES\\n\\n    addUnitPriority('week', 5);\\n    addUnitPriority('isoWeek', 5);\\n\\n// PARSING\\n\\n    addRegexToken('w',  match1to2);\\n    addRegexToken('ww', match1to2, match2);\\n    addRegexToken('W',  match1to2);\\n    addRegexToken('WW', match1to2, match2);\\n\\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\\n        week[token.substr(0, 1)] = toInt(input);\\n    });\\n\\n// HELPERS\\n\\n// LOCALES\\n\\n    function localeWeek (mom) {\\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\\n    }\\n\\n    var defaultLocaleWeek = {\\n        dow : 0, // Sunday is the first day of the week.\\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\\n    };\\n\\n    function localeFirstDayOfWeek () {\\n        return this._week.dow;\\n    }\\n\\n    function localeFirstDayOfYear () {\\n        return this._week.doy;\\n    }\\n\\n// MOMENTS\\n\\n    function getSetWeek (input) {\\n        var week = this.localeData().week(this);\\n        return input == null ? week : this.add((input - week) * 7, 'd');\\n    }\\n\\n    function getSetISOWeek (input) {\\n        var week = weekOfYear(this, 1, 4).week;\\n        return input == null ? week : this.add((input - week) * 7, 'd');\\n    }\\n\\n// FORMATTING\\n\\n    addFormatToken('d', 0, 'do', 'day');\\n\\n    addFormatToken('dd', 0, 0, function (format) {\\n        return this.localeData().weekdaysMin(this, format);\\n    });\\n\\n    addFormatToken('ddd', 0, 0, function (format) {\\n        return this.localeData().weekdaysShort(this, format);\\n    });\\n\\n    addFormatToken('dddd', 0, 0, function (format) {\\n        return this.localeData().weekdays(this, format);\\n    });\\n\\n    addFormatToken('e', 0, 0, 'weekday');\\n    addFormatToken('E', 0, 0, 'isoWeekday');\\n\\n// ALIASES\\n\\n    addUnitAlias('day', 'd');\\n    addUnitAlias('weekday', 'e');\\n    addUnitAlias('isoWeekday', 'E');\\n\\n// PRIORITY\\n    addUnitPriority('day', 11);\\n    addUnitPriority('weekday', 11);\\n    addUnitPriority('isoWeekday', 11);\\n\\n// PARSING\\n\\n    addRegexToken('d',    match1to2);\\n    addRegexToken('e',    match1to2);\\n    addRegexToken('E',    match1to2);\\n    addRegexToken('dd',   function (isStrict, locale) {\\n        return locale.weekdaysMinRegex(isStrict);\\n    });\\n    addRegexToken('ddd',   function (isStrict, locale) {\\n        return locale.weekdaysShortRegex(isStrict);\\n    });\\n    addRegexToken('dddd',   function (isStrict, locale) {\\n        return locale.weekdaysRegex(isStrict);\\n    });\\n\\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\\n        // if we didn't get a weekday name, mark the date as invalid\\n        if (weekday != null) {\\n            week.d = weekday;\\n        } else {\\n            getParsingFlags(config).invalidWeekday = input;\\n        }\\n    });\\n\\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\\n        week[token] = toInt(input);\\n    });\\n\\n// HELPERS\\n\\n    function parseWeekday(input, locale) {\\n        if (typeof input !== 'string') {\\n            return input;\\n        }\\n\\n        if (!isNaN(input)) {\\n            return parseInt(input, 10);\\n        }\\n\\n        input = locale.weekdaysParse(input);\\n        if (typeof input === 'number') {\\n            return input;\\n        }\\n\\n        return null;\\n    }\\n\\n    function parseIsoWeekday(input, locale) {\\n        if (typeof input === 'string') {\\n            return locale.weekdaysParse(input) % 7 || 7;\\n        }\\n        return isNaN(input) ? null : input;\\n    }\\n\\n// LOCALES\\n\\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\\n    function localeWeekdays (m, format) {\\n        if (!m) {\\n            return this._weekdays;\\n        }\\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\\n    }\\n\\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\\n    function localeWeekdaysShort (m) {\\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\\n    }\\n\\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\\n    function localeWeekdaysMin (m) {\\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\\n    }\\n\\n    function handleStrictParse$1(weekdayName, format, strict) {\\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\\n        if (!this._weekdaysParse) {\\n            this._weekdaysParse = [];\\n            this._shortWeekdaysParse = [];\\n            this._minWeekdaysParse = [];\\n\\n            for (i = 0; i < 7; ++i) {\\n                mom = createUTC([2000, 1]).day(i);\\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\\n            }\\n        }\\n\\n        if (strict) {\\n            if (format === 'dddd') {\\n                ii = indexOf$1.call(this._weekdaysParse, llc);\\n                return ii !== -1 ? ii : null;\\n            } else if (format === 'ddd') {\\n                ii = indexOf$1.call(this._shortWeekdaysParse, llc);\\n                return ii !== -1 ? ii : null;\\n            } else {\\n                ii = indexOf$1.call(this._minWeekdaysParse, llc);\\n                return ii !== -1 ? ii : null;\\n            }\\n        } else {\\n            if (format === 'dddd') {\\n                ii = indexOf$1.call(this._weekdaysParse, llc);\\n                if (ii !== -1) {\\n                    return ii;\\n                }\\n                ii = indexOf$1.call(this._shortWeekdaysParse, llc);\\n                if (ii !== -1) {\\n                    return ii;\\n                }\\n                ii = indexOf$1.call(this._minWeekdaysParse, llc);\\n                return ii !== -1 ? ii : null;\\n            } else if (format === 'ddd') {\\n                ii = indexOf$1.call(this._shortWeekdaysParse, llc);\\n                if (ii !== -1) {\\n                    return ii;\\n                }\\n                ii = indexOf$1.call(this._weekdaysParse, llc);\\n                if (ii !== -1) {\\n                    return ii;\\n                }\\n                ii = indexOf$1.call(this._minWeekdaysParse, llc);\\n                return ii !== -1 ? ii : null;\\n            } else {\\n                ii = indexOf$1.call(this._minWeekdaysParse, llc);\\n                if (ii !== -1) {\\n                    return ii;\\n                }\\n                ii = indexOf$1.call(this._weekdaysParse, llc);\\n                if (ii !== -1) {\\n                    return ii;\\n                }\\n                ii = indexOf$1.call(this._shortWeekdaysParse, llc);\\n                return ii !== -1 ? ii : null;\\n            }\\n        }\\n    }\\n\\n    function localeWeekdaysParse (weekdayName, format, strict) {\\n        var i, mom, regex;\\n\\n        if (this._weekdaysParseExact) {\\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\\n        }\\n\\n        if (!this._weekdaysParse) {\\n            this._weekdaysParse = [];\\n            this._minWeekdaysParse = [];\\n            this._shortWeekdaysParse = [];\\n            this._fullWeekdaysParse = [];\\n        }\\n\\n        for (i = 0; i < 7; i++) {\\n            // make the regex if we don't have it already\\n\\n            mom = createUTC([2000, 1]).day(i);\\n            if (strict && !this._fullWeekdaysParse[i]) {\\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\\n            }\\n            if (!this._weekdaysParse[i]) {\\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\\n            }\\n            // test the regex\\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\\n                return i;\\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\\n                return i;\\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\\n                return i;\\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\\n                return i;\\n            }\\n        }\\n    }\\n\\n// MOMENTS\\n\\n    function getSetDayOfWeek (input) {\\n        if (!this.isValid()) {\\n            return input != null ? this : NaN;\\n        }\\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\\n        if (input != null) {\\n            input = parseWeekday(input, this.localeData());\\n            return this.add(input - day, 'd');\\n        } else {\\n            return day;\\n        }\\n    }\\n\\n    function getSetLocaleDayOfWeek (input) {\\n        if (!this.isValid()) {\\n            return input != null ? this : NaN;\\n        }\\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\\n        return input == null ? weekday : this.add(input - weekday, 'd');\\n    }\\n\\n    function getSetISODayOfWeek (input) {\\n        if (!this.isValid()) {\\n            return input != null ? this : NaN;\\n        }\\n\\n        // behaves the same as moment#day except\\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\\n        // as a setter, sunday should belong to the previous week.\\n\\n        if (input != null) {\\n            var weekday = parseIsoWeekday(input, this.localeData());\\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\\n        } else {\\n            return this.day() || 7;\\n        }\\n    }\\n\\n    var defaultWeekdaysRegex = matchWord;\\n    function weekdaysRegex (isStrict) {\\n        if (this._weekdaysParseExact) {\\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\\n                computeWeekdaysParse.call(this);\\n            }\\n            if (isStrict) {\\n                return this._weekdaysStrictRegex;\\n            } else {\\n                return this._weekdaysRegex;\\n            }\\n        } else {\\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\\n                this._weekdaysRegex = defaultWeekdaysRegex;\\n            }\\n            return this._weekdaysStrictRegex && isStrict ?\\n                this._weekdaysStrictRegex : this._weekdaysRegex;\\n        }\\n    }\\n\\n    var defaultWeekdaysShortRegex = matchWord;\\n    function weekdaysShortRegex (isStrict) {\\n        if (this._weekdaysParseExact) {\\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\\n                computeWeekdaysParse.call(this);\\n            }\\n            if (isStrict) {\\n                return this._weekdaysShortStrictRegex;\\n            } else {\\n                return this._weekdaysShortRegex;\\n            }\\n        } else {\\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\\n            }\\n            return this._weekdaysShortStrictRegex && isStrict ?\\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\\n        }\\n    }\\n\\n    var defaultWeekdaysMinRegex = matchWord;\\n    function weekdaysMinRegex (isStrict) {\\n        if (this._weekdaysParseExact) {\\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\\n                computeWeekdaysParse.call(this);\\n            }\\n            if (isStrict) {\\n                return this._weekdaysMinStrictRegex;\\n            } else {\\n                return this._weekdaysMinRegex;\\n            }\\n        } else {\\n            if (!hasOwnProp(this, '_weekdaysMin\";\n  builder.string += \"Regex')) {\\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\\n            }\\n            return this._weekdaysMinStrictRegex && isStrict ?\\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\\n        }\\n    }\\n\\n\\n    function computeWeekdaysParse () {\\n        function cmpLenRev(a, b) {\\n            return b.length - a.length;\\n        }\\n\\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\\n            i, mom, minp, shortp, longp;\\n        for (i = 0; i < 7; i++) {\\n            // make the regex if we don't have it already\\n            mom = createUTC([2000, 1]).day(i);\\n            minp = this.weekdaysMin(mom, '');\\n            shortp = this.weekdaysShort(mom, '');\\n            longp = this.weekdays(mom, '');\\n            minPieces.push(minp);\\n            shortPieces.push(shortp);\\n            longPieces.push(longp);\\n            mixedPieces.push(minp);\\n            mixedPieces.push(shortp);\\n            mixedPieces.push(longp);\\n        }\\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\\n        // will match the longer piece.\\n        minPieces.sort(cmpLenRev);\\n        shortPieces.sort(cmpLenRev);\\n        longPieces.sort(cmpLenRev);\\n        mixedPieces.sort(cmpLenRev);\\n        for (i = 0; i < 7; i++) {\\n            shortPieces[i] = regexEscape(shortPieces[i]);\\n            longPieces[i] = regexEscape(longPieces[i]);\\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\\n        }\\n\\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\\n        this._weekdaysShortRegex = this._weekdaysRegex;\\n        this._weekdaysMinRegex = this._weekdaysRegex;\\n\\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\\n    }\\n\\n// FORMATTING\\n\\n    function hFormat() {\\n        return this.hours() % 12 || 12;\\n    }\\n\\n    function kFormat() {\\n        return this.hours() || 24;\\n    }\\n\\n    addFormatToken('H', ['HH', 2], 0, 'hour');\\n    addFormatToken('h', ['hh', 2], 0, hFormat);\\n    addFormatToken('k', ['kk', 2], 0, kFormat);\\n\\n    addFormatToken('hmm', 0, 0, function () {\\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\\n    });\\n\\n    addFormatToken('hmmss', 0, 0, function () {\\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\\n            zeroFill(this.seconds(), 2);\\n    });\\n\\n    addFormatToken('Hmm', 0, 0, function () {\\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\\n    });\\n\\n    addFormatToken('Hmmss', 0, 0, function () {\\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\\n            zeroFill(this.seconds(), 2);\\n    });\\n\\n    function meridiem (token, lowercase) {\\n        addFormatToken(token, 0, 0, function () {\\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\\n        });\\n    }\\n\\n    meridiem('a', true);\\n    meridiem('A', false);\\n\\n// ALIASES\\n\\n    addUnitAlias('hour', 'h');\\n\\n// PRIORITY\\n    addUnitPriority('hour', 13);\\n\\n// PARSING\\n\\n    function matchMeridiem (isStrict, locale) {\\n        return locale._meridiemParse;\\n    }\\n\\n    addRegexToken('a',  matchMeridiem);\\n    addRegexToken('A',  matchMeridiem);\\n    addRegexToken('H',  match1to2);\\n    addRegexToken('h',  match1to2);\\n    addRegexToken('HH', match1to2, match2);\\n    addRegexToken('hh', match1to2, match2);\\n\\n    addRegexToken('hmm', match3to4);\\n    addRegexToken('hmmss', match5to6);\\n    addRegexToken('Hmm', match3to4);\\n    addRegexToken('Hmmss', match5to6);\\n\\n    addParseToken(['H', 'HH'], HOUR);\\n    addParseToken(['a', 'A'], function (input, array, config) {\\n        config._isPm = config._locale.isPM(input);\\n        config._meridiem = input;\\n    });\\n    addParseToken(['h', 'hh'], function (input, array, config) {\\n        array[HOUR] = toInt(input);\\n        getParsingFlags(config).bigHour = true;\\n    });\\n    addParseToken('hmm', function (input, array, config) {\\n        var pos = input.length - 2;\\n        array[HOUR] = toInt(input.substr(0, pos));\\n        array[MINUTE] = toInt(input.substr(pos));\\n        getParsingFlags(config).bigHour = true;\\n    });\\n    addParseToken('hmmss', function (input, array, config) {\\n        var pos1 = input.length - 4;\\n        var pos2 = input.length - 2;\\n        array[HOUR] = toInt(input.substr(0, pos1));\\n        array[MINUTE] = toInt(input.substr(pos1, 2));\\n        array[SECOND] = toInt(input.substr(pos2));\\n        getParsingFlags(config).bigHour = true;\\n    });\\n    addParseToken('Hmm', function (input, array, config) {\\n        var pos = input.length - 2;\\n        array[HOUR] = toInt(input.substr(0, pos));\\n        array[MINUTE] = toInt(input.substr(pos));\\n    });\\n    addParseToken('Hmmss', function (input, array, config) {\\n        var pos1 = input.length - 4;\\n        var pos2 = input.length - 2;\\n        array[HOUR] = toInt(input.substr(0, pos1));\\n        array[MINUTE] = toInt(input.substr(pos1, 2));\\n        array[SECOND] = toInt(input.substr(pos2));\\n    });\\n\\n// LOCALES\\n\\n    function localeIsPM (input) {\\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\\n        // Using charAt should be more compatible.\\n        return ((input + '').toLowerCase().charAt(0) === 'p');\\n    }\\n\\n    var defaultLocaleMeridiemParse = /[ap]\\\\.?m?\\\\.?/i;\\n    function localeMeridiem (hours, minutes, isLower) {\\n        if (hours > 11) {\\n            return isLower ? 'pm' : 'PM';\\n        } else {\\n            return isLower ? 'am' : 'AM';\\n        }\\n    }\\n\\n\\n// MOMENTS\\n\\n// Setting the hour should keep the time, because the user explicitly\\n// specified which hour he wants. So trying to maintain the same hour (in\\n// a new timezone) makes sense. Adding/subtracting hours does not follow\\n// this rule.\\n    var getSetHour = makeGetSet('Hours', true);\\n\\n// months\\n// week\\n// weekdays\\n// meridiem\\n    var baseConfig = {\\n        calendar: defaultCalendar,\\n        longDateFormat: defaultLongDateFormat,\\n        invalidDate: defaultInvalidDate,\\n        ordinal: defaultOrdinal,\\n        ordinalParse: defaultOrdinalParse,\\n        relativeTime: defaultRelativeTime,\\n\\n        months: defaultLocaleMonths,\\n        monthsShort: defaultLocaleMonthsShort,\\n\\n        week: defaultLocaleWeek,\\n\\n        weekdays: defaultLocaleWeekdays,\\n        weekdaysMin: defaultLocaleWeekdaysMin,\\n        weekdaysShort: defaultLocaleWeekdaysShort,\\n\\n        meridiemParse: defaultLocaleMeridiemParse\\n    };\\n\\n// internal storage for locale config files\\n    var locales = {};\\n    var localeFamilies = {};\\n    var globalLocale;\\n\\n    function normalizeLocale(key) {\\n        return key ? key.toLowerCase().replace('_', '-') : key;\\n    }\\n\\n// pick the locale from the array\\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\\n    function chooseLocale(names) {\\n        var i = 0, j, next, locale, split;\\n\\n        while (i < names.length) {\\n            split = normalizeLocale(names[i]).split('-');\\n            j = split.length;\\n            next = normalizeLocale(names[i + 1]);\\n            next = next ? next.split('-') : null;\\n            while (j > 0) {\\n                locale = loadLocale(split.slice(0, j).join('-'));\\n                if (locale) {\\n                    return locale;\\n                }\\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\\n                    //the next array item is better than a shallower substring of this one\\n                    break;\\n                }\\n                j--;\\n            }\\n            i++;\\n        }\\n        return null;\\n    }\\n\\n    function loadLocale(name) {\\n        var oldLocale = null;\\n        // TODO: Find a better way to register and load all the locales in Node\\n        if (!locales[name] && (typeof module !== 'undefined') &&\\n            module && module.exports) {\\n            try {\\n                oldLocale = globalLocale._abbr;\\n                require('./locale/' + name);\\n                // because defineLocale currently also sets the global locale, we\\n                // want to undo that for lazy loaded locales\\n                getSetGlobalLocale(oldLocale);\\n            } catch (e) { }\\n        }\\n        return locales[name];\\n    }\\n\\n// This function will load locale and then set the global locale.  If\\n// no arguments are passed in, it will simply return the current global\\n// locale key.\\n    function getSetGlobalLocale (key, values) {\\n        var data;\\n        if (key) {\\n            if (isUndefined(values)) {\\n                data = getLocale(key);\\n            }\\n            else {\\n                data = defineLocale(key, values);\\n            }\\n\\n            if (data) {\\n                // moment.duration._locale = moment._locale = data;\\n                globalLocale = data;\\n            }\\n        }\\n\\n        return globalLocale._abbr;\\n    }\\n\\n    function defineLocale (name, config) {\\n        if (config !== null) {\\n            var parentConfig = baseConfig;\\n            config.abbr = name;\\n            if (locales[name] != null) {\\n                deprecateSimple('defineLocaleOverride',\\n                    'use moment.updateLocale(localeName, config) to change ' +\\n                    'an existing locale. moment.defineLocale(localeName, ' +\\n                    'config) should only be used for creating a new locale ' +\\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\\n                parentConfig = locales[name]._config;\\n            } else if (config.parentLocale != null) {\\n                if (locales[config.parentLocale] != null) {\\n                    parentConfig = locales[config.parentLocale]._config;\\n                } else {\\n                    if (!localeFamilies[config.parentLocale]) {\\n                        localeFamilies[config.parentLocale] = [];\\n                    }\\n                    localeFamilies[config.parentLocale].push({\\n                        name: name,\\n                        config: config\\n                    });\\n                    return null;\\n                }\\n            }\\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\\n\\n            if (localeFamilies[name]) {\\n                localeFamilies[name].forEach(function (x) {\\n                    defineLocale(x.name, x.config);\\n                });\\n            }\\n\\n            // backwards compat for now: also set the locale\\n            // make sure we set the locale AFTER all child locales have been\\n            // created, so we won't end up with the child locale set.\\n            getSetGlobalLocale(name);\\n\\n\\n            return locales[name];\\n        } else {\\n            // useful for testing\\n            delete locales[name];\\n            return null;\\n        }\\n    }\\n\\n    function updateLocale(name, config) {\\n        if (config != null) {\\n            var locale, parentConfig = baseConfig;\\n            // MERGE\\n            if (locales[name] != null) {\\n                parentConfig = locales[name]._config;\\n            }\\n            config = mergeConfigs(parentConfig, config);\\n            locale = new Locale(config);\\n            locale.parentLocale = locales[name];\\n            locales[name] = locale;\\n\\n            // backwards compat for now: also set the locale\\n            getSetGlobalLocale(name);\\n        } else {\\n            // pass null for config to unupdate, useful for tests\\n            if (locales[name] != null) {\\n                if (locales[name].parentLocale != null) {\\n                    locales[name] = locales[name].parentLocale;\\n                } else if (locales[name] != null) {\\n                    delete locales[name];\\n                }\\n            }\\n        }\\n        return locales[name];\\n    }\\n\\n// returns locale data\\n    function getLocale (key) {\\n        var locale;\\n\\n        if (key && key._locale && key._locale._abbr) {\\n            key = key._locale._abbr;\\n        }\\n\\n        if (!key) {\\n            return globalLocale;\\n        }\\n\\n        if (!isArray(key)) {\\n            //short-circuit everything else\\n            locale = loadLocale(key);\\n            if (locale) {\\n                return locale;\\n            }\\n            key = [key];\\n        }\\n\\n        return chooseLocale(key);\\n    }\\n\\n    function listLocales() {\\n        return keys$1(locales);\\n    }\\n\\n    function checkOverflow (m) {\\n        var overflow;\\n        var a = m._a;\\n\\n        if (a && getParsingFlags(m).overflow === -2) {\\n            overflow =\\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\\n                    a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\\n                        a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\\n                            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\\n                                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\\n                                    a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\\n                                        -1;\\n\\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\\n                overflow = DATE;\\n            }\\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\\n                overflow = WEEK;\\n            }\\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\\n                overflow = WEEKDAY;\\n            }\\n\\n            getParsingFlags(m).overflow = overflow;\\n        }\\n\\n        return m;\\n    }\\n\\n// iso 8601 regex\\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\\n    var extendedIsoRegex = /^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})-(?:\\\\d\\\\d-\\\\d\\\\d|W\\\\d\\\\d-\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?::\\\\d\\\\d(?::\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/;\\n    var basicIsoRegex = /^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})(?:\\\\d\\\\d\\\\d\\\\d|W\\\\d\\\\d\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?:\\\\d\\\\d(?:\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/;\\n\\n    var tzRegex = /Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/;\\n\\n    var isoDates = [\\n        ['YYYYYY-MM-DD', /[+-]\\\\d{6}-\\\\d\\\\d-\\\\d\\\\d/],\\n        ['YYYY-MM-DD', /\\\\d{4}-\\\\d\\\\d-\\\\d\\\\d/],\\n        ['GGGG-[W]WW-E', /\\\\d{4}-W\\\\d\\\\d-\\\\d/],\\n        ['GGGG-[W]WW', /\\\\d{4}-W\\\\d\\\\d/, false],\\n        ['YYYY-DDD', /\\\\d{4}-\\\\d{3}/],\\n        ['YYYY-MM', /\\\\d{4}-\\\\d\\\\d/, false],\\n        ['YYYYYYMMDD', /[+-]\\\\d{10}/],\\n        ['YYYYMMDD', /\\\\d{8}/],\\n        // YYYYMM is NOT allowed by the standard\\n        ['GGGG[W]WWE', /\\\\d{4}W\\\\d{3}/],\\n        ['GGGG[W]WW', /\\\\d{4}W\\\\d{2}/, false],\\n        ['YYYYDDD', /\\\\d{7}/]\\n    ];\\n\\n// iso time formats and regexes\\n    var isoTimes = [\\n        ['HH:mm:ss.SSSS', /\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d\\\\.\\\\d+/],\\n        ['HH:mm:ss,SSSS', /\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d,\\\\d+/],\\n        ['HH:mm:ss', /\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d/],\\n        ['HH:mm', /\\\\d\\\\d:\\\\d\\\\d/],\\n        ['HHmmss.SSSS', /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\.\\\\d+/],\\n        ['HHmmss,SSSS', /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d,\\\\d+/],\\n        ['HHmmss', /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d/],\\n        ['HHmm', /\\\\d\\\\d\\\\d\\\\d/],\\n        ['HH', /\\\\d\\\\d/]\\n    ];\\n\\n    var aspNetJsonRegex = /^\\\\/?Date\\\\((\\\\-?\\\\d+)/i;\\n\\n// date from iso format\\n    function configFromISO(config) {\\n        var i, l,\\n            string = config._i,\\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\\n            allowTime, dateFormat, timeFormat, tzFormat;\\n\\n        if (match) {\\n            getParsingFlags(config).iso = true;\\n\\n            for (i = 0, l = isoDates.length; i < l; i++) {\\n                if (isoDates[i][1].exec(match[1])) {\\n                    dateFormat = isoDates[i][0];\\n                    allowTime = isoDates[i][2] !== false;\\n                    break;\\n                }\\n            }\\n            if (dateFormat == null) {\\n                config._isValid = false;\\n                return;\\n            }\\n            if (match[3]) {\\n                for (i = 0, l = isoTimes.length; i < l; i++) {\\n                    if (isoTimes[i][1].exec(match[3])) {\\n                        // match[2] should be 'T' or space\\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\\n                        break;\\n                    }\\n                }\\n                if (timeFormat == null) {\\n                    \";\n  builder.string += \"config._isValid = false;\\n                    return;\\n                }\\n            }\\n            if (!allowTime && timeFormat != null) {\\n                config._isValid = false;\\n                return;\\n            }\\n            if (match[4]) {\\n                if (tzRegex.exec(match[4])) {\\n                    tzFormat = 'Z';\\n                } else {\\n                    config._isValid = false;\\n                    return;\\n                }\\n            }\\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\\n            configFromStringAndFormat(config);\\n        } else {\\n            config._isValid = false;\\n        }\\n    }\\n\\n// date from iso format or fallback\\n    function configFromString(config) {\\n        var matched = aspNetJsonRegex.exec(config._i);\\n\\n        if (matched !== null) {\\n            config._d = new Date(+matched[1]);\\n            return;\\n        }\\n\\n        configFromISO(config);\\n        if (config._isValid === false) {\\n            delete config._isValid;\\n            hooks.createFromInputFallback(config);\\n        }\\n    }\\n\\n    hooks.createFromInputFallback = deprecate(\\n        'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +\\n        'which is not reliable across all browsers and versions. Non ISO date formats are ' +\\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\\n        function (config) {\\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\\n        }\\n    );\\n\\n// Pick the first defined of two or three arguments.\\n    function defaults(a, b, c) {\\n        if (a != null) {\\n            return a;\\n        }\\n        if (b != null) {\\n            return b;\\n        }\\n        return c;\\n    }\\n\\n    function currentDateArray(config) {\\n        // hooks is actually the exported moment object\\n        var nowValue = new Date(hooks.now());\\n        if (config._useUTC) {\\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\\n        }\\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\\n    }\\n\\n// convert an array to a date.\\n// the array should mirror the parameters below\\n// note: all values past the year are optional and will default to the lowest possible value.\\n// [year, month, day , hour, minute, second, millisecond]\\n    function configFromArray (config) {\\n        var i, date, input = [], currentDate, yearToUse;\\n\\n        if (config._d) {\\n            return;\\n        }\\n\\n        currentDate = currentDateArray(config);\\n\\n        //compute day of the year from weeks and weekdays\\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\\n            dayOfYearFromWeekInfo(config);\\n        }\\n\\n        //if the day of the year is set, figure out what it is\\n        if (config._dayOfYear) {\\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\\n\\n            if (config._dayOfYear > daysInYear(yearToUse)) {\\n                getParsingFlags(config)._overflowDayOfYear = true;\\n            }\\n\\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\\n            config._a[MONTH] = date.getUTCMonth();\\n            config._a[DATE] = date.getUTCDate();\\n        }\\n\\n        // Default to current date.\\n        // * if no year, month, day of month are given, default to today\\n        // * if day of month is given, default month and year\\n        // * if month is given, default only year\\n        // * if year is given, don't default anything\\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\\n            config._a[i] = input[i] = currentDate[i];\\n        }\\n\\n        // Zero out whatever was not defaulted, including time\\n        for (; i < 7; i++) {\\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\\n        }\\n\\n        // Check for 24:00:00.000\\n        if (config._a[HOUR] === 24 &&\\n            config._a[MINUTE] === 0 &&\\n            config._a[SECOND] === 0 &&\\n            config._a[MILLISECOND] === 0) {\\n            config._nextDay = true;\\n            config._a[HOUR] = 0;\\n        }\\n\\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\\n        // Apply timezone offset from input. The actual utcOffset can be changed\\n        // with parseZone.\\n        if (config._tzm != null) {\\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\\n        }\\n\\n        if (config._nextDay) {\\n            config._a[HOUR] = 24;\\n        }\\n    }\\n\\n    function dayOfYearFromWeekInfo(config) {\\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\\n\\n        w = config._w;\\n        if (w.GG != null || w.W != null || w.E != null) {\\n            dow = 1;\\n            doy = 4;\\n\\n            // TODO: We need to take the current isoWeekYear, but that depends on\\n            // how we interpret now (local, utc, fixed offset). So create\\n            // a now version of current config (take local/utc/offset flags, and\\n            // create now).\\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\\n            week = defaults(w.W, 1);\\n            weekday = defaults(w.E, 1);\\n            if (weekday < 1 || weekday > 7) {\\n                weekdayOverflow = true;\\n            }\\n        } else {\\n            dow = config._locale._week.dow;\\n            doy = config._locale._week.doy;\\n\\n            var curWeek = weekOfYear(createLocal(), dow, doy);\\n\\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\\n\\n            // Default to current week.\\n            week = defaults(w.w, curWeek.week);\\n\\n            if (w.d != null) {\\n                // weekday -- low day numbers are considered next week\\n                weekday = w.d;\\n                if (weekday < 0 || weekday > 6) {\\n                    weekdayOverflow = true;\\n                }\\n            } else if (w.e != null) {\\n                // local weekday -- counting starts from begining of week\\n                weekday = w.e + dow;\\n                if (w.e < 0 || w.e > 6) {\\n                    weekdayOverflow = true;\\n                }\\n            } else {\\n                // default to begining of week\\n                weekday = dow;\\n            }\\n        }\\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\\n            getParsingFlags(config)._overflowWeeks = true;\\n        } else if (weekdayOverflow != null) {\\n            getParsingFlags(config)._overflowWeekday = true;\\n        } else {\\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\\n            config._a[YEAR] = temp.year;\\n            config._dayOfYear = temp.dayOfYear;\\n        }\\n    }\\n\\n// constant that refers to the ISO standard\\n    hooks.ISO_8601 = function () {};\\n\\n// date from string and format string\\n    function configFromStringAndFormat(config) {\\n        // TODO: Move this to another part of the creation flow to prevent circular deps\\n        if (config._f === hooks.ISO_8601) {\\n            configFromISO(config);\\n            return;\\n        }\\n\\n        config._a = [];\\n        getParsingFlags(config).empty = true;\\n\\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\\n        var string = '' + config._i,\\n            i, parsedInput, tokens, token, skipped,\\n            stringLength = string.length,\\n            totalParsedInputLength = 0;\\n\\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\\n\\n        for (i = 0; i < tokens.length; i++) {\\n            token = tokens[i];\\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\\n            // console.log('token', token, 'parsedInput', parsedInput,\\n            //         'regex', getParseRegexForToken(token, config));\\n            if (parsedInput) {\\n                skipped = string.substr(0, string.indexOf(parsedInput));\\n                if (skipped.length > 0) {\\n                    getParsingFlags(config).unusedInput.push(skipped);\\n                }\\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\\n                totalParsedInputLength += parsedInput.length;\\n            }\\n            // don't parse if it's not a known token\\n            if (formatTokenFunctions[token]) {\\n                if (parsedInput) {\\n                    getParsingFlags(config).empty = false;\\n                }\\n                else {\\n                    getParsingFlags(config).unusedTokens.push(token);\\n                }\\n                addTimeToArrayFromToken(token, parsedInput, config);\\n            }\\n            else if (config._strict && !parsedInput) {\\n                getParsingFlags(config).unusedTokens.push(token);\\n            }\\n        }\\n\\n        // add remaining unparsed input length to the string\\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\\n        if (string.length > 0) {\\n            getParsingFlags(config).unusedInput.push(string);\\n        }\\n\\n        // clear _12h flag if hour is <= 12\\n        if (config._a[HOUR] <= 12 &&\\n            getParsingFlags(config).bigHour === true &&\\n            config._a[HOUR] > 0) {\\n            getParsingFlags(config).bigHour = undefined;\\n        }\\n\\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\\n        getParsingFlags(config).meridiem = config._meridiem;\\n        // handle meridiem\\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\\n\\n        configFromArray(config);\\n        checkOverflow(config);\\n    }\\n\\n\\n    function meridiemFixWrap (locale, hour, meridiem) {\\n        var isPm;\\n\\n        if (meridiem == null) {\\n            // nothing to do\\n            return hour;\\n        }\\n        if (locale.meridiemHour != null) {\\n            return locale.meridiemHour(hour, meridiem);\\n        } else if (locale.isPM != null) {\\n            // Fallback\\n            isPm = locale.isPM(meridiem);\\n            if (isPm && hour < 12) {\\n                hour += 12;\\n            }\\n            if (!isPm && hour === 12) {\\n                hour = 0;\\n            }\\n            return hour;\\n        } else {\\n            // this is not supposed to happen\\n            return hour;\\n        }\\n    }\\n\\n// date from string and array of format strings\\n    function configFromStringAndArray(config) {\\n        var tempConfig,\\n            bestMoment,\\n\\n            scoreToBeat,\\n            i,\\n            currentScore;\\n\\n        if (config._f.length === 0) {\\n            getParsingFlags(config).invalidFormat = true;\\n            config._d = new Date(NaN);\\n            return;\\n        }\\n\\n        for (i = 0; i < config._f.length; i++) {\\n            currentScore = 0;\\n            tempConfig = copyConfig({}, config);\\n            if (config._useUTC != null) {\\n                tempConfig._useUTC = config._useUTC;\\n            }\\n            tempConfig._f = config._f[i];\\n            configFromStringAndFormat(tempConfig);\\n\\n            if (!isValid(tempConfig)) {\\n                continue;\\n            }\\n\\n            // if there is any input that was not parsed add a penalty for that format\\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\\n\\n            //or tokens\\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\\n\\n            getParsingFlags(tempConfig).score = currentScore;\\n\\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\\n                scoreToBeat = currentScore;\\n                bestMoment = tempConfig;\\n            }\\n        }\\n\\n        extend(config, bestMoment || tempConfig);\\n    }\\n\\n    function configFromObject(config) {\\n        if (config._d) {\\n            return;\\n        }\\n\\n        var i = normalizeObjectUnits(config._i);\\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\\n            return obj && parseInt(obj, 10);\\n        });\\n\\n        configFromArray(config);\\n    }\\n\\n    function createFromConfig (config) {\\n        var res = new Moment(checkOverflow(prepareConfig(config)));\\n        if (res._nextDay) {\\n            // Adding is smart enough around DST\\n            res.add(1, 'd');\\n            res._nextDay = undefined;\\n        }\\n\\n        return res;\\n    }\\n\\n    function prepareConfig (config) {\\n        var input = config._i,\\n            format = config._f;\\n\\n        config._locale = config._locale || getLocale(config._l);\\n\\n        if (input === null || (format === undefined && input === '')) {\\n            return createInvalid({nullInput: true});\\n        }\\n\\n        if (typeof input === 'string') {\\n            config._i = input = config._locale.preparse(input);\\n        }\\n\\n        if (isMoment(input)) {\\n            return new Moment(checkOverflow(input));\\n        } else if (isDate(input)) {\\n            config._d = input;\\n        } else if (isArray(format)) {\\n            configFromStringAndArray(config);\\n        } else if (format) {\\n            configFromStringAndFormat(config);\\n        }  else {\\n            configFromInput(config);\\n        }\\n\\n        if (!isValid(config)) {\\n            config._d = null;\\n        }\\n\\n        return config;\\n    }\\n\\n    function configFromInput(config) {\\n        var input = config._i;\\n        if (input === undefined) {\\n            config._d = new Date(hooks.now());\\n        } else if (isDate(input)) {\\n            config._d = new Date(input.valueOf());\\n        } else if (typeof input === 'string') {\\n            configFromString(config);\\n        } else if (isArray(input)) {\\n            config._a = map(input.slice(0), function (obj) {\\n                return parseInt(obj, 10);\\n            });\\n            configFromArray(config);\\n        } else if (typeof(input) === 'object') {\\n            configFromObject(config);\\n        } else if (isNumber(input)) {\\n            // from milliseconds\\n            config._d = new Date(input);\\n        } else {\\n            hooks.createFromInputFallback(config);\\n        }\\n    }\\n\\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\\n        var c = {};\\n\\n        if (locale === true || locale === false) {\\n            strict = locale;\\n            locale = undefined;\\n        }\\n\\n        if ((isObject(input) && isObjectEmpty(input)) ||\\n            (isArray(input) && input.length === 0)) {\\n            input = undefined;\\n        }\\n        // object construction must be done this way.\\n        // https://github.com/moment/moment/issues/1423\\n        c._isAMomentObject = true;\\n        c._useUTC = c._isUTC = isUTC;\\n        c._l = locale;\\n        c._i = input;\\n        c._f = format;\\n        c._strict = strict;\\n\\n        return createFromConfig(c);\\n    }\\n\\n    function createLocal (input, format, locale, strict) {\\n        return createLocalOrUTC(input, format, locale, strict, false);\\n    }\\n\\n    var prototypeMin = deprecate(\\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\\n        function () {\\n            var other = createLocal.apply(null, arguments);\\n            if (this.isValid() && other.isValid()) {\\n                return other < this ? this : other;\\n            } else {\\n                return createInvalid();\\n            }\\n        }\\n    );\\n\\n    var prototypeMax = deprecate(\\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\\n        function () {\\n            var other = createLocal.apply(null, arguments);\\n            if (this.isValid() && other.isValid()) {\\n                return other > this ? this : other;\\n            } else {\\n                return createInvalid();\\n            }\\n        }\\n    );\\n\\n// Pick a moment m from moments so that m[fn](other) is true for all\\n// other. This relies on the function fn to be transitive.\\n//\\n// moments should either be an array of moment objects or an array, whose\\n// first element is an array of moment objects.\\n    function pickBy(fn, moments) {\\n        var res, i;\\n        if (moments.length === 1 && isArray(moments[0])) {\\n            moments = moments[0];\\n        }\\n        if (!moments.length) {\\n            return createLocal();\\n        }\\n        res = moments[0];\\n        for (i = 1; i < moments.length; ++i) {\\n            if (!moments[i].isValid() || moments[i][fn](res)) {\\n                res = moments[i];\\n            }\\n        }\\n        return res;\\n    }\\n\\n// TODO: Use [].sor\";\n  builder.string += \"t instead?\\n    function min () {\\n        var args = [].slice.call(arguments, 0);\\n\\n        return pickBy('isBefore', args);\\n    }\\n\\n    function max () {\\n        var args = [].slice.call(arguments, 0);\\n\\n        return pickBy('isAfter', args);\\n    }\\n\\n    var now = function () {\\n        return Date.now ? Date.now() : +(new Date());\\n    };\\n\\n    function Duration (duration) {\\n        var normalizedInput = normalizeObjectUnits(duration),\\n            years = normalizedInput.year || 0,\\n            quarters = normalizedInput.quarter || 0,\\n            months = normalizedInput.month || 0,\\n            weeks = normalizedInput.week || 0,\\n            days = normalizedInput.day || 0,\\n            hours = normalizedInput.hour || 0,\\n            minutes = normalizedInput.minute || 0,\\n            seconds = normalizedInput.second || 0,\\n            milliseconds = normalizedInput.millisecond || 0;\\n\\n        // representation for dateAddRemove\\n        this._milliseconds = +milliseconds +\\n            seconds * 1e3 + // 1000\\n            minutes * 6e4 + // 1000 * 60\\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\\n        // Because of dateAddRemove treats 24 hours as different from a\\n        // day when working around DST, we need to store them separately\\n        this._days = +days +\\n            weeks * 7;\\n        // It is impossible translate months into days without knowing\\n        // which months you are are talking about, so we have to store\\n        // it separately.\\n        this._months = +months +\\n            quarters * 3 +\\n            years * 12;\\n\\n        this._data = {};\\n\\n        this._locale = getLocale();\\n\\n        this._bubble();\\n    }\\n\\n    function isDuration (obj) {\\n        return obj instanceof Duration;\\n    }\\n\\n    function absRound (number) {\\n        if (number < 0) {\\n            return Math.round(-1 * number) * -1;\\n        } else {\\n            return Math.round(number);\\n        }\\n    }\\n\\n// FORMATTING\\n\\n    function offset (token, separator) {\\n        addFormatToken(token, 0, 0, function () {\\n            var offset = this.utcOffset();\\n            var sign = '+';\\n            if (offset < 0) {\\n                offset = -offset;\\n                sign = '-';\\n            }\\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\\n        });\\n    }\\n\\n    offset('Z', ':');\\n    offset('ZZ', '');\\n\\n// PARSING\\n\\n    addRegexToken('Z',  matchShortOffset);\\n    addRegexToken('ZZ', matchShortOffset);\\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\\n        config._useUTC = true;\\n        config._tzm = offsetFromString(matchShortOffset, input);\\n    });\\n\\n// HELPERS\\n\\n// timezone chunker\\n// '+10:00' > ['10',  '00']\\n// '-1530'  > ['-15', '30']\\n    var chunkOffset = /([\\\\+\\\\-]|\\\\d\\\\d)/gi;\\n\\n    function offsetFromString(matcher, string) {\\n        var matches = (string || '').match(matcher);\\n\\n        if (matches === null) {\\n            return null;\\n        }\\n\\n        var chunk   = matches[matches.length - 1] || [];\\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\\n\\n        return minutes === 0 ?\\n            0 :\\n            parts[0] === '+' ? minutes : -minutes;\\n    }\\n\\n// Return a moment from input, that is local/utc/zone equivalent to model.\\n    function cloneWithOffset(input, model) {\\n        var res, diff;\\n        if (model._isUTC) {\\n            res = model.clone();\\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\\n            // Use low-level api, because this fn is low-level api.\\n            res._d.setTime(res._d.valueOf() + diff);\\n            hooks.updateOffset(res, false);\\n            return res;\\n        } else {\\n            return createLocal(input).local();\\n        }\\n    }\\n\\n    function getDateOffset (m) {\\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\\n        // https://github.com/moment/moment/pull/1871\\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\\n    }\\n\\n// HOOKS\\n\\n// This function will be called whenever a moment is mutated.\\n// It is intended to keep the offset in sync with the timezone.\\n    hooks.updateOffset = function () {};\\n\\n// MOMENTS\\n\\n// keepLocalTime = true means only change the timezone, without\\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\\n// +0200, so we adjust the time as needed, to be valid.\\n//\\n// Keeping the time actually adds/subtracts (one hour)\\n// from the actual represented time. That is why we call updateOffset\\n// a second time. In case it wants us to change the offset again\\n// _changeInProgress == true case, then we have to adjust, because\\n// there is no such time in the given timezone.\\n    function getSetOffset (input, keepLocalTime) {\\n        var offset = this._offset || 0,\\n            localAdjust;\\n        if (!this.isValid()) {\\n            return input != null ? this : NaN;\\n        }\\n        if (input != null) {\\n            if (typeof input === 'string') {\\n                input = offsetFromString(matchShortOffset, input);\\n                if (input === null) {\\n                    return this;\\n                }\\n            } else if (Math.abs(input) < 16) {\\n                input = input * 60;\\n            }\\n            if (!this._isUTC && keepLocalTime) {\\n                localAdjust = getDateOffset(this);\\n            }\\n            this._offset = input;\\n            this._isUTC = true;\\n            if (localAdjust != null) {\\n                this.add(localAdjust, 'm');\\n            }\\n            if (offset !== input) {\\n                if (!keepLocalTime || this._changeInProgress) {\\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\\n                } else if (!this._changeInProgress) {\\n                    this._changeInProgress = true;\\n                    hooks.updateOffset(this, true);\\n                    this._changeInProgress = null;\\n                }\\n            }\\n            return this;\\n        } else {\\n            return this._isUTC ? offset : getDateOffset(this);\\n        }\\n    }\\n\\n    function getSetZone (input, keepLocalTime) {\\n        if (input != null) {\\n            if (typeof input !== 'string') {\\n                input = -input;\\n            }\\n\\n            this.utcOffset(input, keepLocalTime);\\n\\n            return this;\\n        } else {\\n            return -this.utcOffset();\\n        }\\n    }\\n\\n    function setOffsetToUTC (keepLocalTime) {\\n        return this.utcOffset(0, keepLocalTime);\\n    }\\n\\n    function setOffsetToLocal (keepLocalTime) {\\n        if (this._isUTC) {\\n            this.utcOffset(0, keepLocalTime);\\n            this._isUTC = false;\\n\\n            if (keepLocalTime) {\\n                this.subtract(getDateOffset(this), 'm');\\n            }\\n        }\\n        return this;\\n    }\\n\\n    function setOffsetToParsedOffset () {\\n        if (this._tzm != null) {\\n            this.utcOffset(this._tzm);\\n        } else if (typeof this._i === 'string') {\\n            var tZone = offsetFromString(matchOffset, this._i);\\n            if (tZone != null) {\\n                this.utcOffset(tZone);\\n            }\\n            else {\\n                this.utcOffset(0, true);\\n            }\\n        }\\n        return this;\\n    }\\n\\n    function hasAlignedHourOffset (input) {\\n        if (!this.isValid()) {\\n            return false;\\n        }\\n        input = input ? createLocal(input).utcOffset() : 0;\\n\\n        return (this.utcOffset() - input) % 60 === 0;\\n    }\\n\\n    function isDaylightSavingTime () {\\n        return (\\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\\n            this.utcOffset() > this.clone().month(5).utcOffset()\\n        );\\n    }\\n\\n    function isDaylightSavingTimeShifted () {\\n        if (!isUndefined(this._isDSTShifted)) {\\n            return this._isDSTShifted;\\n        }\\n\\n        var c = {};\\n\\n        copyConfig(c, this);\\n        c = prepareConfig(c);\\n\\n        if (c._a) {\\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\\n            this._isDSTShifted = this.isValid() &&\\n                compareArrays(c._a, other.toArray()) > 0;\\n        } else {\\n            this._isDSTShifted = false;\\n        }\\n\\n        return this._isDSTShifted;\\n    }\\n\\n    function isLocal () {\\n        return this.isValid() ? !this._isUTC : false;\\n    }\\n\\n    function isUtcOffset () {\\n        return this.isValid() ? this._isUTC : false;\\n    }\\n\\n    function isUtc () {\\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\\n    }\\n\\n// ASP.NET json date format regex\\n    var aspNetRegex = /^(\\\\-)?(?:(\\\\d*)[. ])?(\\\\d+)\\\\:(\\\\d+)(?:\\\\:(\\\\d+)(\\\\.\\\\d*)?)?$/;\\n\\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\\n// and further modified to allow for strings containing both week and day\\n    var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\\n\\n    function createDuration (input, key) {\\n        var duration = input,\\n            // matching against regexp is expensive, do it on demand\\n            match = null,\\n            sign,\\n            ret,\\n            diffRes;\\n\\n        if (isDuration(input)) {\\n            duration = {\\n                ms : input._milliseconds,\\n                d  : input._days,\\n                M  : input._months\\n            };\\n        } else if (isNumber(input)) {\\n            duration = {};\\n            if (key) {\\n                duration[key] = input;\\n            } else {\\n                duration.milliseconds = input;\\n            }\\n        } else if (!!(match = aspNetRegex.exec(input))) {\\n            sign = (match[1] === '-') ? -1 : 1;\\n            duration = {\\n                y  : 0,\\n                d  : toInt(match[DATE])                         * sign,\\n                h  : toInt(match[HOUR])                         * sign,\\n                m  : toInt(match[MINUTE])                       * sign,\\n                s  : toInt(match[SECOND])                       * sign,\\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\\n            };\\n        } else if (!!(match = isoRegex.exec(input))) {\\n            sign = (match[1] === '-') ? -1 : 1;\\n            duration = {\\n                y : parseIso(match[2], sign),\\n                M : parseIso(match[3], sign),\\n                w : parseIso(match[4], sign),\\n                d : parseIso(match[5], sign),\\n                h : parseIso(match[6], sign),\\n                m : parseIso(match[7], sign),\\n                s : parseIso(match[8], sign)\\n            };\\n        } else if (duration == null) {// checks for null or undefined\\n            duration = {};\\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\\n\\n            duration = {};\\n            duration.ms = diffRes.milliseconds;\\n            duration.M = diffRes.months;\\n        }\\n\\n        ret = new Duration(duration);\\n\\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\\n            ret._locale = input._locale;\\n        }\\n\\n        return ret;\\n    }\\n\\n    createDuration.fn = Duration.prototype;\\n\\n    function parseIso (inp, sign) {\\n        // We'd normally use ~~inp for this, but unfortunately it also\\n        // converts floats to ints.\\n        // inp may be undefined, so careful calling replace on it.\\n        var res = inp && parseFloat(inp.replace(',', '.'));\\n        // apply sign while we're at it\\n        return (isNaN(res) ? 0 : res) * sign;\\n    }\\n\\n    function positiveMomentsDifference(base, other) {\\n        var res = {milliseconds: 0, months: 0};\\n\\n        res.months = other.month() - base.month() +\\n            (other.year() - base.year()) * 12;\\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\\n            --res.months;\\n        }\\n\\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\\n\\n        return res;\\n    }\\n\\n    function momentsDifference(base, other) {\\n        var res;\\n        if (!(base.isValid() && other.isValid())) {\\n            return {milliseconds: 0, months: 0};\\n        }\\n\\n        other = cloneWithOffset(other, base);\\n        if (base.isBefore(other)) {\\n            res = positiveMomentsDifference(base, other);\\n        } else {\\n            res = positiveMomentsDifference(other, base);\\n            res.milliseconds = -res.milliseconds;\\n            res.months = -res.months;\\n        }\\n\\n        return res;\\n    }\\n\\n// TODO: remove 'name' arg after deprecation is removed\\n    function createAdder(direction, name) {\\n        return function (val, period) {\\n            var dur, tmp;\\n            //invert the arguments, but complain about it\\n            if (period !== null && !isNaN(+period)) {\\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\\n                    'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\\n                tmp = val; val = period; period = tmp;\\n            }\\n\\n            val = typeof val === 'string' ? +val : val;\\n            dur = createDuration(val, period);\\n            addSubtract(this, dur, direction);\\n            return this;\\n        };\\n    }\\n\\n    function addSubtract (mom, duration, isAdding, updateOffset) {\\n        var milliseconds = duration._milliseconds,\\n            days = absRound(duration._days),\\n            months = absRound(duration._months);\\n\\n        if (!mom.isValid()) {\\n            // No op\\n            return;\\n        }\\n\\n        updateOffset = updateOffset == null ? true : updateOffset;\\n\\n        if (milliseconds) {\\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\\n        }\\n        if (days) {\\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\\n        }\\n        if (months) {\\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\\n        }\\n        if (updateOffset) {\\n            hooks.updateOffset(mom, days || months);\\n        }\\n    }\\n\\n    var add      = createAdder(1, 'add');\\n    var subtract = createAdder(-1, 'subtract');\\n\\n    function getCalendarFormat(myMoment, now) {\\n        var diff = myMoment.diff(now, 'days', true);\\n        return diff < -6 ? 'sameElse' :\\n            diff < -1 ? 'lastWeek' :\\n                diff < 0 ? 'lastDay' :\\n                    diff < 1 ? 'sameDay' :\\n                        diff < 2 ? 'nextDay' :\\n                            diff < 7 ? 'nextWeek' : 'sameElse';\\n    }\\n\\n    function calendar$1 (time, formats) {\\n        // We want to compare the start of today, vs this.\\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\\n        var now = time || createLocal(),\\n            sod = cloneWithOffset(now, this).startOf('day'),\\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\\n\\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\\n\\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\\n    }\\n\\n    function clone () {\\n        return new Moment(this);\\n    }\\n\\n    function isAfter (input, units) {\\n        var localInput = isMoment(input) ? input : createLocal(input);\\n        if (!(this.isValid() && localInput.isValid())) {\\n            return false;\\n        }\\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\\n        if (units === 'millisecond') {\\n            return this.valueOf() > localInput.valueOf();\\n        } else {\\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\\n        }\\n    }\\n\\n    function isBefore (input, units) {\\n        var localInput = isMoment(input) ? input : createLocal(input);\\n        if (!(this.isValid() && localInput.isValid())) {\\n            return false;\\n        }\\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\\n        if (units === 'millisecond') {\\n            return this.valueOf() < localInput.valueOf();\\n        } else {\\n            return this.clone().endOf(units).va\";\n  builder.string += \"lueOf() < localInput.valueOf();\\n        }\\n    }\\n\\n    function isBetween (from, to, units, inclusivity) {\\n        inclusivity = inclusivity || '()';\\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\\n    }\\n\\n    function isSame (input, units) {\\n        var localInput = isMoment(input) ? input : createLocal(input),\\n            inputMs;\\n        if (!(this.isValid() && localInput.isValid())) {\\n            return false;\\n        }\\n        units = normalizeUnits(units || 'millisecond');\\n        if (units === 'millisecond') {\\n            return this.valueOf() === localInput.valueOf();\\n        } else {\\n            inputMs = localInput.valueOf();\\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\\n        }\\n    }\\n\\n    function isSameOrAfter (input, units) {\\n        return this.isSame(input, units) || this.isAfter(input,units);\\n    }\\n\\n    function isSameOrBefore (input, units) {\\n        return this.isSame(input, units) || this.isBefore(input,units);\\n    }\\n\\n    function diff (input, units, asFloat) {\\n        var that,\\n            zoneDelta,\\n            delta, output;\\n\\n        if (!this.isValid()) {\\n            return NaN;\\n        }\\n\\n        that = cloneWithOffset(input, this);\\n\\n        if (!that.isValid()) {\\n            return NaN;\\n        }\\n\\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\\n\\n        units = normalizeUnits(units);\\n\\n        if (units === 'year' || units === 'month' || units === 'quarter') {\\n            output = monthDiff(this, that);\\n            if (units === 'quarter') {\\n                output = output / 3;\\n            } else if (units === 'year') {\\n                output = output / 12;\\n            }\\n        } else {\\n            delta = this - that;\\n            output = units === 'second' ? delta / 1e3 : // 1000\\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\\n                    units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\\n                        units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\\n                            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\\n                                delta;\\n        }\\n        return asFloat ? output : absFloor(output);\\n    }\\n\\n    function monthDiff (a, b) {\\n        // difference in months\\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\\n            // b is in (anchor - 1 month, anchor + 1 month)\\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\\n            anchor2, adjust;\\n\\n        if (b - anchor < 0) {\\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\\n            // linear across the month\\n            adjust = (b - anchor) / (anchor - anchor2);\\n        } else {\\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\\n            // linear across the month\\n            adjust = (b - anchor) / (anchor2 - anchor);\\n        }\\n\\n        //check for negative zero, return zero if negative zero\\n        return -(wholeMonthDiff + adjust) || 0;\\n    }\\n\\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\\n\\n    function toString () {\\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\\n    }\\n\\n    function toISOString () {\\n        var m = this.clone().utc();\\n        if (0 < m.year() && m.year() <= 9999) {\\n            if (isFunction(Date.prototype.toISOString)) {\\n                // native implementation is ~50x faster, use it when we can\\n                return this.toDate().toISOString();\\n            } else {\\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\\n            }\\n        } else {\\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\\n        }\\n    }\\n\\n    /**\\n     * Return a human readable representation of a moment that can\\n     * also be evaluated to get a new moment which is the same\\n     *\\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\\n     */\\n    function inspect () {\\n        if (!this.isValid()) {\\n            return 'moment.invalid(/* ' + this._i + ' */)';\\n        }\\n        var func = 'moment';\\n        var zone = '';\\n        if (!this.isLocal()) {\\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\\n            zone = 'Z';\\n        }\\n        var prefix = '[' + func + '(\\\"]';\\n        var year = (0 < this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\\n        var suffix = zone + '[\\\")]';\\n\\n        return this.format(prefix + year + datetime + suffix);\\n    }\\n\\n    function format (inputString) {\\n        if (!inputString) {\\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\\n        }\\n        var output = formatMoment(this, inputString);\\n        return this.localeData().postformat(output);\\n    }\\n\\n    function from (time, withoutSuffix) {\\n        if (this.isValid() &&\\n            ((isMoment(time) && time.isValid()) ||\\n            createLocal(time).isValid())) {\\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\\n        } else {\\n            return this.localeData().invalidDate();\\n        }\\n    }\\n\\n    function fromNow (withoutSuffix) {\\n        return this.from(createLocal(), withoutSuffix);\\n    }\\n\\n    function to (time, withoutSuffix) {\\n        if (this.isValid() &&\\n            ((isMoment(time) && time.isValid()) ||\\n            createLocal(time).isValid())) {\\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\\n        } else {\\n            return this.localeData().invalidDate();\\n        }\\n    }\\n\\n    function toNow (withoutSuffix) {\\n        return this.to(createLocal(), withoutSuffix);\\n    }\\n\\n// If passed a locale key, it will set the locale for this\\n// instance.  Otherwise, it will return the locale configuration\\n// variables for this instance.\\n    function locale (key) {\\n        var newLocaleData;\\n\\n        if (key === undefined) {\\n            return this._locale._abbr;\\n        } else {\\n            newLocaleData = getLocale(key);\\n            if (newLocaleData != null) {\\n                this._locale = newLocaleData;\\n            }\\n            return this;\\n        }\\n    }\\n\\n    var lang = deprecate(\\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\\n        function (key) {\\n            if (key === undefined) {\\n                return this.localeData();\\n            } else {\\n                return this.locale(key);\\n            }\\n        }\\n    );\\n\\n    function localeData () {\\n        return this._locale;\\n    }\\n\\n    function startOf (units) {\\n        units = normalizeUnits(units);\\n        // the following switch intentionally omits break keywords\\n        // to utilize falling through the cases.\\n        switch (units) {\\n            case 'year':\\n                this.month(0);\\n            /* falls through */\\n            case 'quarter':\\n            case 'month':\\n                this.date(1);\\n            /* falls through */\\n            case 'week':\\n            case 'isoWeek':\\n            case 'day':\\n            case 'date':\\n                this.hours(0);\\n            /* falls through */\\n            case 'hour':\\n                this.minutes(0);\\n            /* falls through */\\n            case 'minute':\\n                this.seconds(0);\\n            /* falls through */\\n            case 'second':\\n                this.milliseconds(0);\\n        }\\n\\n        // weeks are a special case\\n        if (units === 'week') {\\n            this.weekday(0);\\n        }\\n        if (units === 'isoWeek') {\\n            this.isoWeekday(1);\\n        }\\n\\n        // quarters are also special\\n        if (units === 'quarter') {\\n            this.month(Math.floor(this.month() / 3) * 3);\\n        }\\n\\n        return this;\\n    }\\n\\n    function endOf (units) {\\n        units = normalizeUnits(units);\\n        if (units === undefined || units === 'millisecond') {\\n            return this;\\n        }\\n\\n        // 'date' is an alias for 'day', so it should be considered as such.\\n        if (units === 'date') {\\n            units = 'day';\\n        }\\n\\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\\n    }\\n\\n    function valueOf () {\\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\\n    }\\n\\n    function unix () {\\n        return Math.floor(this.valueOf() / 1000);\\n    }\\n\\n    function toDate () {\\n        return new Date(this.valueOf());\\n    }\\n\\n    function toArray () {\\n        var m = this;\\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\\n    }\\n\\n    function toObject () {\\n        var m = this;\\n        return {\\n            years: m.year(),\\n            months: m.month(),\\n            date: m.date(),\\n            hours: m.hours(),\\n            minutes: m.minutes(),\\n            seconds: m.seconds(),\\n            milliseconds: m.milliseconds()\\n        };\\n    }\\n\\n    function toJSON () {\\n        // new Date(NaN).toJSON() === null\\n        return this.isValid() ? this.toISOString() : null;\\n    }\\n\\n    function isValid$1 () {\\n        return isValid(this);\\n    }\\n\\n    function parsingFlags () {\\n        return extend({}, getParsingFlags(this));\\n    }\\n\\n    function invalidAt () {\\n        return getParsingFlags(this).overflow;\\n    }\\n\\n    function creationData() {\\n        return {\\n            input: this._i,\\n            format: this._f,\\n            locale: this._locale,\\n            isUTC: this._isUTC,\\n            strict: this._strict\\n        };\\n    }\\n\\n// FORMATTING\\n\\n    addFormatToken(0, ['gg', 2], 0, function () {\\n        return this.weekYear() % 100;\\n    });\\n\\n    addFormatToken(0, ['GG', 2], 0, function () {\\n        return this.isoWeekYear() % 100;\\n    });\\n\\n    function addWeekYearFormatToken (token, getter) {\\n        addFormatToken(0, [token, token.length], 0, getter);\\n    }\\n\\n    addWeekYearFormatToken('gggg',     'weekYear');\\n    addWeekYearFormatToken('ggggg',    'weekYear');\\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\\n\\n// ALIASES\\n\\n    addUnitAlias('weekYear', 'gg');\\n    addUnitAlias('isoWeekYear', 'GG');\\n\\n// PRIORITY\\n\\n    addUnitPriority('weekYear', 1);\\n    addUnitPriority('isoWeekYear', 1);\\n\\n\\n// PARSING\\n\\n    addRegexToken('G',      matchSigned);\\n    addRegexToken('g',      matchSigned);\\n    addRegexToken('GG',     match1to2, match2);\\n    addRegexToken('gg',     match1to2, match2);\\n    addRegexToken('GGGG',   match1to4, match4);\\n    addRegexToken('gggg',   match1to4, match4);\\n    addRegexToken('GGGGG',  match1to6, match6);\\n    addRegexToken('ggggg',  match1to6, match6);\\n\\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\\n        week[token.substr(0, 2)] = toInt(input);\\n    });\\n\\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\\n        week[token] = hooks.parseTwoDigitYear(input);\\n    });\\n\\n// MOMENTS\\n\\n    function getSetWeekYear (input) {\\n        return getSetWeekYearHelper.call(this,\\n            input,\\n            this.week(),\\n            this.weekday(),\\n            this.localeData()._week.dow,\\n            this.localeData()._week.doy);\\n    }\\n\\n    function getSetISOWeekYear (input) {\\n        return getSetWeekYearHelper.call(this,\\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\\n    }\\n\\n    function getISOWeeksInYear () {\\n        return weeksInYear(this.year(), 1, 4);\\n    }\\n\\n    function getWeeksInYear () {\\n        var weekInfo = this.localeData()._week;\\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\\n    }\\n\\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\\n        var weeksTarget;\\n        if (input == null) {\\n            return weekOfYear(this, dow, doy).year;\\n        } else {\\n            weeksTarget = weeksInYear(input, dow, doy);\\n            if (week > weeksTarget) {\\n                week = weeksTarget;\\n            }\\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\\n        }\\n    }\\n\\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\\n\\n        this.year(date.getUTCFullYear());\\n        this.month(date.getUTCMonth());\\n        this.date(date.getUTCDate());\\n        return this;\\n    }\\n\\n// FORMATTING\\n\\n    addFormatToken('Q', 0, 'Qo', 'quarter');\\n\\n// ALIASES\\n\\n    addUnitAlias('quarter', 'Q');\\n\\n// PRIORITY\\n\\n    addUnitPriority('quarter', 7);\\n\\n// PARSING\\n\\n    addRegexToken('Q', match1);\\n    addParseToken('Q', function (input, array) {\\n        array[MONTH] = (toInt(input) - 1) * 3;\\n    });\\n\\n// MOMENTS\\n\\n    function getSetQuarter (input) {\\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\\n    }\\n\\n// FORMATTING\\n\\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\\n\\n// ALIASES\\n\\n    addUnitAlias('date', 'D');\\n\\n// PRIOROITY\\n    addUnitPriority('date', 9);\\n\\n// PARSING\\n\\n    addRegexToken('D',  match1to2);\\n    addRegexToken('DD', match1to2, match2);\\n    addRegexToken('Do', function (isStrict, locale) {\\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\\n    });\\n\\n    addParseToken(['D', 'DD'], DATE);\\n    addParseToken('Do', function (input, array) {\\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\\n    });\\n\\n// MOMENTS\\n\\n    var getSetDayOfMonth = makeGetSet('Date', true);\\n\\n// FORMATTING\\n\\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\\n\\n// ALIASES\\n\\n    addUnitAlias('dayOfYear', 'DDD');\\n\\n// PRIORITY\\n    addUnitPriority('dayOfYear', 4);\\n\\n// PARSING\\n\\n    addRegexToken('DDD',  match1to3);\\n    addRegexToken('DDDD', match3);\\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\\n        config._dayOfYear = toInt(input);\\n    });\\n\\n// HELPERS\\n\\n// MOMENTS\\n\\n    function getSetDayOfYear (input) {\\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\\n    }\\n\\n// FORMATTING\\n\\n    addFormatToken('m', ['mm', 2], 0, 'minute');\\n\\n// ALIASES\\n\\n    addUnitAlias('minute', 'm');\\n\\n// PRIORITY\\n\\n    addUnitPriority('minute', 14);\\n\\n// PARSING\\n\\n    addRegexToken('m',  match1to2);\\n    addRegexToken('mm', match1to2, match2);\\n    addParseToken(['m', 'mm'], MINUTE);\\n\\n// MOMENTS\\n\\n    var getSetMinute = makeGetSet('Minutes', false);\\n\\n// FORMATTING\\n\\n    addFormatToken('s', ['ss', 2], 0, 'second');\\n\\n// ALIASES\\n\\n    addUnitAlias('second', 's');\\n\\n// PRIORITY\\n\\n    addUnitPriority('second', 15);\\n\\n// PARSING\\n\\n    addRegexToken('s',  match1to2);\\n    addRegexToken('ss', match1to2, match2);\\n    addParseToken(['s', 'ss'], SECOND);\\n\\n// MOMENTS\\n\\n    var getSetSecond = makeGetSet('Seconds', false);\\n\\n// FORMATTING\\n\\n    addFormatToken('S', 0, 0, function () {\\n        return ~~(this.millisecond() / 100);\\n    });\\n\\n    addFormatToken(0, ['SS', 2], 0, function () {\\n        return ~~(this.millisecond() / 10);\\n    });\\n\\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\\n    addFormatToken(0, ['SSSS', 4], 0, function () {\\n        return this.millisecond() * 10;\\n    });\\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\\n        return this.millisecond() * 100;\\n    });\\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\\n        return this.millisecond() * 1000;\\n    });\\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\\n        return this.millisecond() * 10000;\\n    });\\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\\n        return this.millisecond() * 100000;\\n    });\\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\\n        return this.millisecond() * 1000000;\\n    });\\n\\n\\n// ALIASES\\n\\n    addUnitAlias('millisecond', 'ms');\\n\\n// PRIORITY\\n\\n    addUnitPriority('millisecond', 16);\\n\\n// PARSING\\n\\n    addRegexToken('S',    match1to3, match1);\\n    addRegexToken('SS',   match1to3, match2);\\n    addRegexToken('SSS',  match1to3, match3);\\n\\n    var token;\\n    for (token = 'SS\";\n  builder.string += \"SS'; token.length <= 9; token += 'S') {\\n        addRegexToken(token, matchUnsigned);\\n    }\\n\\n    function parseMs(input, array) {\\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\\n    }\\n\\n    for (token = 'S'; token.length <= 9; token += 'S') {\\n        addParseToken(token, parseMs);\\n    }\\n// MOMENTS\\n\\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\\n\\n// FORMATTING\\n\\n    addFormatToken('z',  0, 0, 'zoneAbbr');\\n    addFormatToken('zz', 0, 0, 'zoneName');\\n\\n// MOMENTS\\n\\n    function getZoneAbbr () {\\n        return this._isUTC ? 'UTC' : '';\\n    }\\n\\n    function getZoneName () {\\n        return this._isUTC ? 'Coordinated Universal Time' : '';\\n    }\\n\\n    var proto = Moment.prototype;\\n\\n    proto.add               = add;\\n    proto.calendar          = calendar$1;\\n    proto.clone             = clone;\\n    proto.diff              = diff;\\n    proto.endOf             = endOf;\\n    proto.format            = format;\\n    proto.from              = from;\\n    proto.fromNow           = fromNow;\\n    proto.to                = to;\\n    proto.toNow             = toNow;\\n    proto.get               = stringGet;\\n    proto.invalidAt         = invalidAt;\\n    proto.isAfter           = isAfter;\\n    proto.isBefore          = isBefore;\\n    proto.isBetween         = isBetween;\\n    proto.isSame            = isSame;\\n    proto.isSameOrAfter     = isSameOrAfter;\\n    proto.isSameOrBefore    = isSameOrBefore;\\n    proto.isValid           = isValid$1;\\n    proto.lang              = lang;\\n    proto.locale            = locale;\\n    proto.localeData        = localeData;\\n    proto.max               = prototypeMax;\\n    proto.min               = prototypeMin;\\n    proto.parsingFlags      = parsingFlags;\\n    proto.set               = stringSet;\\n    proto.startOf           = startOf;\\n    proto.subtract          = subtract;\\n    proto.toArray           = toArray;\\n    proto.toObject          = toObject;\\n    proto.toDate            = toDate;\\n    proto.toISOString       = toISOString;\\n    proto.inspect           = inspect;\\n    proto.toJSON            = toJSON;\\n    proto.toString          = toString;\\n    proto.unix              = unix;\\n    proto.valueOf           = valueOf;\\n    proto.creationData      = creationData;\\n\\n// Year\\n    proto.year       = getSetYear;\\n    proto.isLeapYear = getIsLeapYear;\\n\\n// Week Year\\n    proto.weekYear    = getSetWeekYear;\\n    proto.isoWeekYear = getSetISOWeekYear;\\n\\n// Quarter\\n    proto.quarter = proto.quarters = getSetQuarter;\\n\\n// Month\\n    proto.month       = getSetMonth;\\n    proto.daysInMonth = getDaysInMonth;\\n\\n// Week\\n    proto.week           = proto.weeks        = getSetWeek;\\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\\n    proto.weeksInYear    = getWeeksInYear;\\n    proto.isoWeeksInYear = getISOWeeksInYear;\\n\\n// Day\\n    proto.date       = getSetDayOfMonth;\\n    proto.day        = proto.days             = getSetDayOfWeek;\\n    proto.weekday    = getSetLocaleDayOfWeek;\\n    proto.isoWeekday = getSetISODayOfWeek;\\n    proto.dayOfYear  = getSetDayOfYear;\\n\\n// Hour\\n    proto.hour = proto.hours = getSetHour;\\n\\n// Minute\\n    proto.minute = proto.minutes = getSetMinute;\\n\\n// Second\\n    proto.second = proto.seconds = getSetSecond;\\n\\n// Millisecond\\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\\n\\n// Offset\\n    proto.utcOffset            = getSetOffset;\\n    proto.utc                  = setOffsetToUTC;\\n    proto.local                = setOffsetToLocal;\\n    proto.parseZone            = setOffsetToParsedOffset;\\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\\n    proto.isDST                = isDaylightSavingTime;\\n    proto.isLocal              = isLocal;\\n    proto.isUtcOffset          = isUtcOffset;\\n    proto.isUtc                = isUtc;\\n    proto.isUTC                = isUtc;\\n\\n// Timezone\\n    proto.zoneAbbr = getZoneAbbr;\\n    proto.zoneName = getZoneName;\\n\\n// Deprecations\\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\\n\\n    function createUnix (input) {\\n        return createLocal(input * 1000);\\n    }\\n\\n    function createInZone () {\\n        return createLocal.apply(null, arguments).parseZone();\\n    }\\n\\n    function preParsePostFormat (string) {\\n        return string;\\n    }\\n\\n    var proto$1 = Locale.prototype;\\n\\n    proto$1.calendar        = calendar;\\n    proto$1.longDateFormat  = longDateFormat;\\n    proto$1.invalidDate     = invalidDate;\\n    proto$1.ordinal         = ordinal;\\n    proto$1.preparse        = preParsePostFormat;\\n    proto$1.postformat      = preParsePostFormat;\\n    proto$1.relativeTime    = relativeTime;\\n    proto$1.pastFuture      = pastFuture;\\n    proto$1.set             = set;\\n\\n// Month\\n    proto$1.months            =        localeMonths;\\n    proto$1.monthsShort       =        localeMonthsShort;\\n    proto$1.monthsParse       =        localeMonthsParse;\\n    proto$1.monthsRegex       = monthsRegex;\\n    proto$1.monthsShortRegex  = monthsShortRegex;\\n\\n// Week\\n    proto$1.week = localeWeek;\\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\\n\\n// Day of Week\\n    proto$1.weekdays       =        localeWeekdays;\\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\\n\\n    proto$1.weekdaysRegex       =        weekdaysRegex;\\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\\n\\n// Hours\\n    proto$1.isPM = localeIsPM;\\n    proto$1.meridiem = localeMeridiem;\\n\\n    function get$1 (format, index, field, setter) {\\n        var locale = getLocale();\\n        var utc = createUTC().set(setter, index);\\n        return locale[field](utc, format);\\n    }\\n\\n    function listMonthsImpl (format, index, field) {\\n        if (isNumber(format)) {\\n            index = format;\\n            format = undefined;\\n        }\\n\\n        format = format || '';\\n\\n        if (index != null) {\\n            return get$1(format, index, field, 'month');\\n        }\\n\\n        var i;\\n        var out = [];\\n        for (i = 0; i < 12; i++) {\\n            out[i] = get$1(format, i, field, 'month');\\n        }\\n        return out;\\n    }\\n\\n// ()\\n// (5)\\n// (fmt, 5)\\n// (fmt)\\n// (true)\\n// (true, 5)\\n// (true, fmt, 5)\\n// (true, fmt)\\n    function listWeekdaysImpl (localeSorted, format, index, field) {\\n        if (typeof localeSorted === 'boolean') {\\n            if (isNumber(format)) {\\n                index = format;\\n                format = undefined;\\n            }\\n\\n            format = format || '';\\n        } else {\\n            format = localeSorted;\\n            index = format;\\n            localeSorted = false;\\n\\n            if (isNumber(format)) {\\n                index = format;\\n                format = undefined;\\n            }\\n\\n            format = format || '';\\n        }\\n\\n        var locale = getLocale(),\\n            shift = localeSorted ? locale._week.dow : 0;\\n\\n        if (index != null) {\\n            return get$1(format, (index + shift) % 7, field, 'day');\\n        }\\n\\n        var i;\\n        var out = [];\\n        for (i = 0; i < 7; i++) {\\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\\n        }\\n        return out;\\n    }\\n\\n    function listMonths (format, index) {\\n        return listMonthsImpl(format, index, 'months');\\n    }\\n\\n    function listMonthsShort (format, index) {\\n        return listMonthsImpl(format, index, 'monthsShort');\\n    }\\n\\n    function listWeekdays (localeSorted, format, index) {\\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\\n    }\\n\\n    function listWeekdaysShort (localeSorted, format, index) {\\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\\n    }\\n\\n    function listWeekdaysMin (localeSorted, format, index) {\\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\\n    }\\n\\n    getSetGlobalLocale('en', {\\n        ordinalParse: /\\\\d{1,2}(th|st|nd|rd)/,\\n        ordinal : function (number) {\\n            var b = number % 10,\\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\\n                    (b === 1) ? 'st' :\\n                        (b === 2) ? 'nd' :\\n                            (b === 3) ? 'rd' : 'th';\\n            return number + output;\\n        }\\n    });\\n\\n// Side effect imports\\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\\n\\n    var mathAbs = Math.abs;\\n\\n    function abs () {\\n        var data           = this._data;\\n\\n        this._milliseconds = mathAbs(this._milliseconds);\\n        this._days         = mathAbs(this._days);\\n        this._months       = mathAbs(this._months);\\n\\n        data.milliseconds  = mathAbs(data.milliseconds);\\n        data.seconds       = mathAbs(data.seconds);\\n        data.minutes       = mathAbs(data.minutes);\\n        data.hours         = mathAbs(data.hours);\\n        data.months        = mathAbs(data.months);\\n        data.years         = mathAbs(data.years);\\n\\n        return this;\\n    }\\n\\n    function addSubtract$1 (duration, input, value, direction) {\\n        var other = createDuration(input, value);\\n\\n        duration._milliseconds += direction * other._milliseconds;\\n        duration._days         += direction * other._days;\\n        duration._months       += direction * other._months;\\n\\n        return duration._bubble();\\n    }\\n\\n// supports only 2.0-style add(1, 's') or add(duration)\\n    function add$1 (input, value) {\\n        return addSubtract$1(this, input, value, 1);\\n    }\\n\\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\\n    function subtract$1 (input, value) {\\n        return addSubtract$1(this, input, value, -1);\\n    }\\n\\n    function absCeil (number) {\\n        if (number < 0) {\\n            return Math.floor(number);\\n        } else {\\n            return Math.ceil(number);\\n        }\\n    }\\n\\n    function bubble () {\\n        var milliseconds = this._milliseconds;\\n        var days         = this._days;\\n        var months       = this._months;\\n        var data         = this._data;\\n        var seconds, minutes, hours, years, monthsFromDays;\\n\\n        // if we have a mix of positive and negative values, bubble down first\\n        // check: https://github.com/moment/moment/issues/2166\\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\\n            days = 0;\\n            months = 0;\\n        }\\n\\n        // The following code bubbles up values, see the tests for\\n        // examples of what that means.\\n        data.milliseconds = milliseconds % 1000;\\n\\n        seconds           = absFloor(milliseconds / 1000);\\n        data.seconds      = seconds % 60;\\n\\n        minutes           = absFloor(seconds / 60);\\n        data.minutes      = minutes % 60;\\n\\n        hours             = absFloor(minutes / 60);\\n        data.hours        = hours % 24;\\n\\n        days += absFloor(hours / 24);\\n\\n        // convert days to months\\n        monthsFromDays = absFloor(daysToMonths(days));\\n        months += monthsFromDays;\\n        days -= absCeil(monthsToDays(monthsFromDays));\\n\\n        // 12 months -> 1 year\\n        years = absFloor(months / 12);\\n        months %= 12;\\n\\n        data.days   = days;\\n        data.months = months;\\n        data.years  = years;\\n\\n        return this;\\n    }\\n\\n    function daysToMonths (days) {\\n        // 400 years have 146097 days (taking into account leap year rules)\\n        // 400 years have 12 months === 4800\\n        return days * 4800 / 146097;\\n    }\\n\\n    function monthsToDays (months) {\\n        // the reverse of daysToMonths\\n        return months * 146097 / 4800;\\n    }\\n\\n    function as (units) {\\n        var days;\\n        var months;\\n        var milliseconds = this._milliseconds;\\n\\n        units = normalizeUnits(units);\\n\\n        if (units === 'month' || units === 'year') {\\n            days   = this._days   + milliseconds / 864e5;\\n            months = this._months + daysToMonths(days);\\n            return units === 'month' ? months : months / 12;\\n        } else {\\n            // handle milliseconds separately because of floating point math errors (issue #1867)\\n            days = this._days + Math.round(monthsToDays(this._months));\\n            switch (units) {\\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\\n                case 'day'    : return days         + milliseconds / 864e5;\\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\\n                case 'second' : return days * 86400 + milliseconds / 1000;\\n                // Math.floor prevents floating point math errors here\\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\\n                default: throw new Error('Unknown unit ' + units);\\n            }\\n        }\\n    }\\n\\n// TODO: Use this.as('ms')?\\n    function valueOf$1 () {\\n        return (\\n            this._milliseconds +\\n            this._days * 864e5 +\\n            (this._months % 12) * 2592e6 +\\n            toInt(this._months / 12) * 31536e6\\n        );\\n    }\\n\\n    function makeAs (alias) {\\n        return function () {\\n            return this.as(alias);\\n        };\\n    }\\n\\n    var asMilliseconds = makeAs('ms');\\n    var asSeconds      = makeAs('s');\\n    var asMinutes      = makeAs('m');\\n    var asHours        = makeAs('h');\\n    var asDays         = makeAs('d');\\n    var asWeeks        = makeAs('w');\\n    var asMonths       = makeAs('M');\\n    var asYears        = makeAs('y');\\n\\n    function get$2 (units) {\\n        units = normalizeUnits(units);\\n        return this[units + 's']();\\n    }\\n\\n    function makeGetter(name) {\\n        return function () {\\n            return this._data[name];\\n        };\\n    }\\n\\n    var milliseconds = makeGetter('milliseconds');\\n    var seconds      = makeGetter('seconds');\\n    var minutes      = makeGetter('minutes');\\n    var hours        = makeGetter('hours');\\n    var days         = makeGetter('days');\\n    var months       = makeGetter('months');\\n    var years        = makeGetter('years');\\n\\n    function weeks () {\\n        return absFloor(this.days() / 7);\\n    }\\n\\n    var round = Math.round;\\n    var thresholds = {\\n        s: 45,  // seconds to minute\\n        m: 45,  // minutes to hour\\n        h: 22,  // hours to day\\n        d: 26,  // days to month\\n        M: 11   // months to year\\n    };\\n\\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\\n    }\\n\\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\\n        var duration = createDuration(posNegDuration).abs();\\n        var seconds  = round(duration.as('s'));\\n        var minutes  = round(duration.as('m'));\\n        var hours    = round(duration.as('h'));\\n        var days     = round(duration.as('d'));\\n        var months   = round(duration.as('M'));\\n        var years    = round(duration.as('y'));\\n\\n        var a = seconds < thresholds.s && ['s', seconds]  ||\\n            minutes <= 1           && ['m']           ||\\n            minutes < thresholds.m && ['mm', minutes] ||\\n            hours   <= 1           && ['h']           ||\\n            hours   < thresholds.h && ['hh', hours]   ||\\n            days    <= 1           && ['d']           ||\\n            days    < thresholds.d && ['dd', days]    ||\\n            months  <= 1           && ['M']           ||\\n            months  < thresholds.M && ['MM', months]  ||\\n            years   <= 1           && ['y']           || ['yy', years];\\n\\n        a[2] = withoutSuffix;\\n        a[3] = +posNegDuration > 0;\\n        a[4] = locale;\\n \";\n  builder.string += \"       return substituteTimeAgo.apply(null, a);\\n    }\\n\\n// This function allows you to set the rounding function for relative time strings\\n    function getSetRelativeTimeRounding (roundingFunction) {\\n        if (roundingFunction === undefined) {\\n            return round;\\n        }\\n        if (typeof(roundingFunction) === 'function') {\\n            round = roundingFunction;\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n// This function allows you to set a threshold for relative time strings\\n    function getSetRelativeTimeThreshold (threshold, limit) {\\n        if (thresholds[threshold] === undefined) {\\n            return false;\\n        }\\n        if (limit === undefined) {\\n            return thresholds[threshold];\\n        }\\n        thresholds[threshold] = limit;\\n        return true;\\n    }\\n\\n    function humanize (withSuffix) {\\n        var locale = this.localeData();\\n        var output = relativeTime$1(this, !withSuffix, locale);\\n\\n        if (withSuffix) {\\n            output = locale.pastFuture(+this, output);\\n        }\\n\\n        return locale.postformat(output);\\n    }\\n\\n    var abs$1 = Math.abs;\\n\\n    function toISOString$1() {\\n        // for ISO strings we do not use the normal bubbling rules:\\n        //  * milliseconds bubble up until they become hours\\n        //  * days do not bubble at all\\n        //  * months bubble up until they become years\\n        // This is because there is no context-free conversion between hours and days\\n        // (think of clock changes)\\n        // and also not between days and months (28-31 days per month)\\n        var seconds = abs$1(this._milliseconds) / 1000;\\n        var days         = abs$1(this._days);\\n        var months       = abs$1(this._months);\\n        var minutes, hours, years;\\n\\n        // 3600 seconds -> 60 minutes -> 1 hour\\n        minutes           = absFloor(seconds / 60);\\n        hours             = absFloor(minutes / 60);\\n        seconds %= 60;\\n        minutes %= 60;\\n\\n        // 12 months -> 1 year\\n        years  = absFloor(months / 12);\\n        months %= 12;\\n\\n\\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\\n        var Y = years;\\n        var M = months;\\n        var D = days;\\n        var h = hours;\\n        var m = minutes;\\n        var s = seconds;\\n        var total = this.asSeconds();\\n\\n        if (!total) {\\n            // this is the same as C#'s (Noda) and python (isodate)...\\n            // but not other JS (goog.date)\\n            return 'P0D';\\n        }\\n\\n        return (total < 0 ? '-' : '') +\\n            'P' +\\n            (Y ? Y + 'Y' : '') +\\n            (M ? M + 'M' : '') +\\n            (D ? D + 'D' : '') +\\n            ((h || m || s) ? 'T' : '') +\\n            (h ? h + 'H' : '') +\\n            (m ? m + 'M' : '') +\\n            (s ? s + 'S' : '');\\n    }\\n\\n    var proto$2 = Duration.prototype;\\n\\n    proto$2.abs            = abs;\\n    proto$2.add            = add$1;\\n    proto$2.subtract       = subtract$1;\\n    proto$2.as             = as;\\n    proto$2.asMilliseconds = asMilliseconds;\\n    proto$2.asSeconds      = asSeconds;\\n    proto$2.asMinutes      = asMinutes;\\n    proto$2.asHours        = asHours;\\n    proto$2.asDays         = asDays;\\n    proto$2.asWeeks        = asWeeks;\\n    proto$2.asMonths       = asMonths;\\n    proto$2.asYears        = asYears;\\n    proto$2.valueOf        = valueOf$1;\\n    proto$2._bubble        = bubble;\\n    proto$2.get            = get$2;\\n    proto$2.milliseconds   = milliseconds;\\n    proto$2.seconds        = seconds;\\n    proto$2.minutes        = minutes;\\n    proto$2.hours          = hours;\\n    proto$2.days           = days;\\n    proto$2.weeks          = weeks;\\n    proto$2.months         = months;\\n    proto$2.years          = years;\\n    proto$2.humanize       = humanize;\\n    proto$2.toISOString    = toISOString$1;\\n    proto$2.toString       = toISOString$1;\\n    proto$2.toJSON         = toISOString$1;\\n    proto$2.locale         = locale;\\n    proto$2.localeData     = localeData;\\n\\n// Deprecations\\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\\n    proto$2.lang = lang;\\n\\n// Side effect imports\\n\\n// FORMATTING\\n\\n    addFormatToken('X', 0, 0, 'unix');\\n    addFormatToken('x', 0, 0, 'valueOf');\\n\\n// PARSING\\n\\n    addRegexToken('x', matchSigned);\\n    addRegexToken('X', matchTimestamp);\\n    addParseToken('X', function (input, array, config) {\\n        config._d = new Date(parseFloat(input, 10) * 1000);\\n    });\\n    addParseToken('x', function (input, array, config) {\\n        config._d = new Date(toInt(input));\\n    });\\n\\n// Side effect imports\\n\\n\\n    hooks.version = '2.17.1';\\n\\n    setHookCallback(createLocal);\\n\\n    hooks.fn                    = proto;\\n    hooks.min                   = min;\\n    hooks.max                   = max;\\n    hooks.now                   = now;\\n    hooks.utc                   = createUTC;\\n    hooks.unix                  = createUnix;\\n    hooks.months                = listMonths;\\n    hooks.isDate                = isDate;\\n    hooks.locale                = getSetGlobalLocale;\\n    hooks.invalid               = createInvalid;\\n    hooks.duration              = createDuration;\\n    hooks.isMoment              = isMoment;\\n    hooks.weekdays              = listWeekdays;\\n    hooks.parseZone             = createInZone;\\n    hooks.localeData            = getLocale;\\n    hooks.isDuration            = isDuration;\\n    hooks.monthsShort           = listMonthsShort;\\n    hooks.weekdaysMin           = listWeekdaysMin;\\n    hooks.defineLocale          = defineLocale;\\n    hooks.updateLocale          = updateLocale;\\n    hooks.locales               = listLocales;\\n    hooks.weekdaysShort         = listWeekdaysShort;\\n    hooks.normalizeUnits        = normalizeUnits;\\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\\n    hooks.calendarFormat        = getCalendarFormat;\\n    hooks.prototype             = proto;\\n\\n    return hooks;\\n\\n})));\";\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_livestamp_MaterialLiveStampDebugClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass('gwt.material.design.addins.client.livestamp', 'MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator/2', 2662);\nfunction $clinit_MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$liveStampDebugJsInitializer(){\n  $clinit_MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$liveStampDebugJsInitializer = emptyMethod;\n  liveStampDebugJs = new MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$momentDebugJsInitializer(){\n  $clinit_MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$momentDebugJsInitializer = emptyMethod;\n  momentDebugJs = new MaterialLiveStampDebugClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nfunction LiveStampPresenter(eventBus, view, proxy){\n  $clinit_PresenterWidget();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MAIN));\n}\n\ndefineClass(913, 53, $intern_54, LiveStampPresenter);\n_.onReveal = function onReveal_18(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent('Live Stamp', 'The livestamp will update automatically as time goes by', 'addins/menubar/LiveStampView', ''));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_livestamp_LiveStampPresenter_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.livestamp', 'LiveStampPresenter', 913);\nfunction LiveStampView(){\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_HTMLPanel1_7(new LiveStampView_BinderImpl$Widgets(this)));\n  $setDate_0(this.liveStampPast, new Date_1(115, 2, 1));\n  $setDate_0(this.liveStampFuture, new Date_1(125, 2, 1));\n}\n\ndefineClass(1294, 61, $intern_55, LiveStampView);\nvar Lgwt_material_design_demo_client_application_addins_livestamp_LiveStampView_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.livestamp', 'LiveStampView', 1294);\nfunction $build_f_HTMLPanel1_7(this$static){\n  var __attachRecord__, f_HTMLPanel1, f_MaterialRow2, f_MaterialRow8, f_MaterialRow12, f_MaterialTitle3, f_ExternalLibrary4, f_MaterialLink5, f_livestamp$MaterialLiveStamp6, f_PrettyPre7, sb, f_MaterialTitle9, f_MaterialLink10, liveStampPast, f_PrettyPre11, sb_0, f_MaterialTitle13, f_MaterialLink14, liveStampFuture, f_PrettyPre15, sb_1;\n  f_HTMLPanel1 = new HTMLPanel($html4_4(this$static.domId0, this$static.domId1, this$static.domId2).html_0);\n  __attachRecord__ = attachToDom(($clinit_DOM() , f_HTMLPanel1.element_0));\n  $get_0(this$static.domId0Element);\n  $get_0(this$static.domId1Element);\n  $get_0(this$static.domId2Element);\n  __attachRecord__.origParent?$insertBefore(__attachRecord__.origParent, __attachRecord__.element, __attachRecord__.origSibling):orphan(__attachRecord__.element);\n  $addAndReplaceElement(f_HTMLPanel1, (f_MaterialRow2 = new MaterialRow , $add_9(f_MaterialRow2, (f_MaterialTitle3 = new MaterialTitle , $setText_12(f_MaterialTitle3.paragraph, 'Wait half a minute - the livestamp will update automatically') , $setInnerHTML($getElement(f_MaterialTitle3.header), ($clinit_SafeHtmlUtils() , (new SafeHtmlString(htmlEscape('Default'))).html_0)) , fire_5(f_MaterialTitle3, 'Default') , f_MaterialTitle3)) , $add_9(f_MaterialRow2, (f_ExternalLibrary4 = new ExternalLibrary , $setHref(f_ExternalLibrary4.externalLink, 'https://github.com/mattbradley/livestampjs') , $setTarget(f_ExternalLibrary4.externalLink) , f_ExternalLibrary4.element_0.style['marginBottom'] = ($clinit_Style$Unit() , '40.0px') , $setText_2(f_ExternalLibrary4.externalLink, 'LiveStamp 1.1.2') , f_ExternalLibrary4)) , $add_9(f_MaterialRow2, (f_MaterialLink5 = new MaterialLink , $setIconType(f_MaterialLink5, ($clinit_IconType() , ACCESS_TIME)) , $setText_3(f_MaterialLink5.span_1, 'You discovered MaterialLiveStamp') , f_MaterialLink5.span_1.attached || $add_9(f_MaterialLink5, f_MaterialLink5.span_1) , $setFloat(f_MaterialLink5, ($clinit_Style$Float() , LEFT)) , $setTextColor(f_MaterialLink5, ($clinit_Color() , GREY)) , f_MaterialLink5)) , $add_9(f_MaterialRow2, (f_livestamp$MaterialLiveStamp6 = new MaterialLiveStamp , $setFloat(f_livestamp$MaterialLiveStamp6, LEFT) , $setFontWeight(f_livestamp$MaterialLiveStamp6, ($clinit_Style$FontWeight() , BOLD)) , f_livestamp$MaterialLiveStamp6.element_0.style['marginLeft'] = '8.0px' , f_livestamp$MaterialLiveStamp6)) , $add_9(f_MaterialRow2, (f_PrettyPre7 = new PrettyPre , $setHTML_0(f_PrettyPre7, (sb = new StringBuilder , sb.string += '\\u2003&lt;m:MaterialLink textColor=\"GREY\" iconType=\"ACCESS_TIME\" text=\"You discovered MaterialLiveStamp \" float=\"LEFT\"/&gt;<br> &lt;ma:livestamp.MaterialLiveStamp float=\"LEFT\" fontWeight=\"BOLD\" marginLeft=\"8\"/&gt;<br>' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string)).html_0) , setStyleName(f_PrettyPre7.element_0, 'code', true) , f_PrettyPre7.element_0.style['marginTop'] = '80.0px' , f_PrettyPre7)) , setStyleName(f_MaterialRow2.element_0, 'code', true) , f_MaterialRow2), $get_0(this$static.domId0Element));\n  $addAndReplaceElement(f_HTMLPanel1, (f_MaterialRow8 = new MaterialRow , $add_9(f_MaterialRow8, (f_MaterialTitle9 = new MaterialTitle , $setText_12(f_MaterialTitle9.paragraph, 'The livestamp also supports past periods, especially birthdays, date of establishment etc.') , $setInnerHTML($getElement(f_MaterialTitle9.header), (new SafeHtmlString(htmlEscape('Long time Ago'))).html_0) , fire_5(f_MaterialTitle9, 'Long time Ago') , f_MaterialTitle9)) , $add_9(f_MaterialRow8, (f_MaterialLink10 = new MaterialLink , $setIconType(f_MaterialLink10, ACCESS_TIME) , $setText_3(f_MaterialLink10.span_1, 'GMD was first released') , f_MaterialLink10.span_1.attached || $add_9(f_MaterialLink10, f_MaterialLink10.span_1) , $setFloat(f_MaterialLink10, LEFT) , $setTextColor(f_MaterialLink10, GREY) , f_MaterialLink10)) , $add_9(f_MaterialRow8, (liveStampPast = new MaterialLiveStamp , $setFloat(liveStampPast, LEFT) , $setFontWeight(liveStampPast, BOLD) , liveStampPast.element_0.style['marginLeft'] = '8.0px' , this$static.owner.liveStampPast = liveStampPast , liveStampPast)) , $add_9(f_MaterialRow8, (f_PrettyPre11 = new PrettyPre , $setHTML_0(f_PrettyPre11, (sb_0 = new StringBuilder , sb_0.string += '\\u2003&lt;m:MaterialLink textColor=\"GREY\" iconType=\"ACCESS_TIME\" text=\"GMD was first released \" float=\"LEFT\"/&gt; <br> &lt;ma:livestamp.MaterialLiveStamp ui:field=\"liveStampPast\" float=\"LEFT\" fontWeight=\"BOLD\" marginLeft=\"8\"/&gt; <br>' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_0.string)).html_0) , setStyleName(f_PrettyPre11.element_0, 'code', true) , f_PrettyPre11.element_0.style['marginTop'] = '80.0px' , f_PrettyPre11)) , setStyleName(f_MaterialRow8.element_0, 'code', true) , f_MaterialRow8), $get_0(this$static.domId1Element));\n  $addAndReplaceElement(f_HTMLPanel1, (f_MaterialRow12 = new MaterialRow , $add_9(f_MaterialRow12, (f_MaterialTitle13 = new MaterialTitle , $setText_12(f_MaterialTitle13.paragraph, 'You can even use timestamps in the future! This works well for fortune-tellers, time travelers, and meteorologists.') , $setInnerHTML($getElement(f_MaterialTitle13.header), (new SafeHtmlString(htmlEscape('Future'))).html_0) , fire_5(f_MaterialTitle13, 'Future') , f_MaterialTitle13)) , $add_9(f_MaterialRow12, (f_MaterialLink14 = new MaterialLink , $setIconType(f_MaterialLink14, ACCESS_TIME) , $setText_3(f_MaterialLink14.span_1, 'GMD will be 10 years old') , f_MaterialLink14.span_1.attached || $add_9(f_MaterialLink14, f_MaterialLink14.span_1) , $setFloat(f_MaterialLink14, LEFT) , $setTextColor(f_MaterialLink14, GREY) , f_MaterialLink14)) , $add_9(f_MaterialRow12, (liveStampFuture = new MaterialLiveStamp , $setFloat(liveStampFuture, LEFT) , $setFontWeight(liveStampFuture, BOLD) , liveStampFuture.element_0.style['marginLeft'] = '8.0px' , this$static.owner.liveStampFuture = liveStampFuture , liveStampFuture)) , $add_9(f_MaterialRow12, (f_PrettyPre15 = new PrettyPre , $setHTML_0(f_PrettyPre15, (sb_1 = new StringBuilder , sb_1.string += '\\u2003&lt;m:MaterialLink textColor=\"GREY\" iconType=\"ACCESS_TIME\" text=\"GMD will be 10 years old \" float=\"LEFT\"/&gt;<br> &lt;ma:livestamp.MaterialLiveStamp ui:field=\"liveStampFuture\" float=\"LEFT\" fontWeight=\"BOLD\" marginLeft=\"8\"/&gt;<br>' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_1.string)).html_0) , setStyleName(f_PrettyPre15.element_0, 'code', true) , f_PrettyPre15.element_0.style['marginTop'] = '80.0px' , f_PrettyPre15)) , setStyleName(f_MaterialRow12.element_0, 'code', true) , f_MaterialRow12), $get_0(this$static.domId2Element));\n  return f_HTMLPanel1;\n}\n\nfunction LiveStampView_BinderImpl$Widgets(owner){\n  this.owner = owner;\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId2 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement(this.domId0);\n  this.domId1Element = new LazyDomElement(this.domId1);\n  this.domId2Element = new LazyDomElement(this.domId2);\n}\n\ndefineClass(1738, 1, {}, LiveStampView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_livestamp_LiveStampView_1BinderImpl$Widgets_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.livestamp', 'LiveStampView_BinderImpl/Widgets', 1738);\nfunction $html4_4(arg0, arg1, arg2){\n  var sb;\n  sb = new StringBuilder;\n  sb.string += \"<span id='\";\n  $append_1(sb, htmlEscape(arg0));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_1(sb, htmlEscape(arg1));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_1(sb, htmlEscape(arg2));\n  sb.string += \"'><\\/span>\";\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string);\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampPresenter$_annotation$$none$$(this$static){\n  var result, result0;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampPresenter$_annotation$$none$$) {\n    result0 = new LiveStampPresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), (result = $get_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampView$_annotation$$none$$(this$static) , result), $get_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampPresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result0), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampPresenter$_annotation$$none$$ = result0;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampView$_annotation$$none$$) {\n    result = new LiveStampView;\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampView$_annotation$$none$$;\n}\n\ndefineClass(760, 1, $intern_106);\n_.onSuccess_0 = function onSuccess_12(){\n  $onSuccess(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$addins$livestamp$LiveStampPresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\n$entry(onLoad_1)(11);\n\n//# sourceURL=gwtmaterialdemo-11.js\n")

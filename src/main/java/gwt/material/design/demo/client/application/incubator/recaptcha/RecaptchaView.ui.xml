<!--
  #%L
  GwtMaterial
  %%
  Copyright (C) 2015 - 2016 GwtMaterialDesign
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder'
             xmlns:m="urn:import:gwt.material.design.client.ui"
             xmlns:incubator="urn:import:gwt.material.design.incubator.client"
             xmlns:demo="urn:import:gwt.material.design.demo.client.ui"
             xmlns:recaptcha="urn:import:gwt.material.design.incubator.client.google.recaptcha">

    <ui:with field='res' type='gwt.material.design.demo.client.resources.MaterialResources' />

    <m:MaterialPanel>
        <m:MaterialRow addStyleNames="code">
            <m:MaterialTitle title="Api Registry" description="We currently register all Google API's into a registry for ease of loading the Google libraries." />
            <demo:PrettyPre addStyleNames="lang-java">
                &emsp;@UiField<br/>
                ReCaptcha recaptcha;<br/><br/>

                // Load the Api<br/>
                RecaptchaApi recaptchaApi = new RecaptchaApi("YOUR_API");<br/>
                ApiRegistry.register(recaptchaApi, new Callback&lt;Void, Exception>() {<br/>
                &emsp;@Override<br/>
                &emsp;public void onFailure(Exception reason) {<br/>
                &emsp;&emsp;MaterialToast.fireToast(reason.getMessage());<br/>
                &emsp;}<br/><br/>

                &emsp;@Override<br/>
                &emsp;public void onSuccess(Void result) {<br/>
                &emsp;&emsp;recaptcha.load(recaptchaApi);<br/>
                &emsp;}<br/>
                });
            </demo:PrettyPre>
        </m:MaterialRow>

        <m:MaterialRow addStyleNames="code">
            <m:MaterialTitle title="Basic Usage" />
            <recaptcha:ReCaptcha ui:field="recaptcha" />
            <m:MaterialButton text="Get Response" marginTop="12" ui:field="getResponse"/>
            <demo:PrettyPre addStyleNames="lang-xml">
                &emsp;&lt;incubator:recaptcha.ReCaptcha ui:field="recaptcha"/>
            </demo:PrettyPre>
        </m:MaterialRow>

        <m:MaterialRow addStyleNames="code">
            <m:MaterialTitle title="Getting Response" />
            <demo:PrettyPre addStyleNames="lang-java">
                &emsp;@UiHandler("getResponse") <br/>
                void validate(ClickEvent e) { <br/>
                &emsp;String response = recaptcha.getResponse(); <br/>
                &emsp;if (response == null) { <br/>
                &emsp;&emsp;MaterialToast.fireToast("Recaptcha is not validated"); <br/>
                &emsp;} else { <br/>
                &emsp;&emsp;MaterialToast.fireToast(recaptcha.getResponse()); <br/>
                &emsp;} <br/>
                }
            </demo:PrettyPre>
        </m:MaterialRow>

        <m:MaterialRow addStyleNames="code">
            <m:MaterialTitle title="Available Callbacks" />
            <demo:PrettyPre addStyleNames="lang-java">
                &emsp;recaptcha.setDataCallback(response -> MaterialToast.fireToast(response));<br/>
                recaptcha.setErrorCallback(() -> MaterialToast.fireToast("There was an error on recaptch"));<br/>
                recaptcha.setExpiredCallback(() -> MaterialToast.fireToast("Recaptcha is expired, please refresh the page"));<br/>
            </demo:PrettyPre>
        </m:MaterialRow>
    </m:MaterialPanel>
</ui:UiBinder>

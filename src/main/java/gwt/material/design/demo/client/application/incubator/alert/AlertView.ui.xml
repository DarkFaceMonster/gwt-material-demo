<!--
  #%L
  GwtMaterial
  %%
  Copyright (C) 2015 - 2016 GwtMaterialDesign
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder'
             xmlns:m="urn:import:gwt.material.design.client.ui"
             xmlns:ma="urn:import:gwt.material.design.addins.client"
             xmlns:incubator="urn:import:gwt.material.design.incubator.client"
             xmlns:demo="urn:import:gwt.material.design.demo.client.ui">

    <ui:with field='res' type='gwt.material.design.demo.client.resources.MaterialResources' />

    <m:MaterialPanel>
        <m:MaterialRow addStyleNames="code">
            <m:MaterialTitle title="Introduction" description="Building alert notification needs an AlertContainer to wrap all your alerts." />
            <m:MaterialRow>
                <m:MaterialColumn grid="s12 m6 l6" >
                    <incubator:alert.AlertContainer margin="20" paddingTop="20" shadow="1" backgroundColor="GREY_LIGHTEN_4" height="400px">
                        <m:MaterialRow padding="20">
                            <ma:combobox.MaterialComboBox textAlign="LEFT" ui:field="comboType" label="Alert Type" grid="s12" />
                            <m:MaterialCheckBox ui:field="withCallback" text="With Callback" />
                            <m:MaterialPanel marginTop="20">
                                <m:MaterialButton ui:field="showAlertError" text="Show Error" />
                                <m:MaterialButton ui:field="hideAlertError" backgroundColor="WHITE" marginLeft="20" textColor="BLACK" text="Hide Error" />
                            </m:MaterialPanel>
                        </m:MaterialRow>
                        <incubator:alert.Alert ui:field="alertError" text="This is an error" type="ERROR"/>
                    </incubator:alert.AlertContainer>
                </m:MaterialColumn>
            </m:MaterialRow>
            <demo:PrettyPre addStyleNames="lang-xml">
                &emsp;&lt;incubator:alert.AlertContainer margin="20" paddingTop="20" shadow="1" backgroundColor="GREY_LIGHTEN_4" height="400px"><br/>
                &emsp;&lt;m:MaterialRow padding="20"><br/>
                &emsp;&emsp;&lt;ma:combobox.MaterialComboBox textAlign="LEFT" ui:field="comboType" label="Alert Type" grid="s12" /><br/>
                &emsp;&emsp;&lt;m:MaterialCheckBox ui:field="withCallback" text="With Callback" /><br/>
                &emsp;&emsp;&lt;m:MaterialPanel marginTop="20"><br/>
                &emsp;&emsp;&emsp;&lt;m:MaterialButton ui:field="showAlertError" text="Show Error" /><br/>
                &emsp;&emsp;&emsp;&lt;m:MaterialButton ui:field="hideAlertError" backgroundColor="WHITE" marginLeft="20" textColor="BLACK" text="Hide Error" /><br/>
                &emsp;&emsp;&lt;/m:MaterialPanel><br/>
                &emsp;&lt;/m:MaterialRow><br/>
                &emsp;&lt;incubator:alert.Alert ui:field="alertError" text="This is an error" type="ERROR"/><br/>
                &lt;/incubator:alert.AlertContainer><br/>
            </demo:PrettyPre>

            <demo:PrettyPre addStyleNames="lang-java">
                &emsp; // Showing your alert component<br/>
                @UiHandler("showAlertError")<br/>
                void showAlertError(ClickEvent e) {<br/>
                &emsp;alertError.setType(comboType.getSingleValue());<br/>
                &emsp;if (withCallback.getValue()) {<br/>
                &emsp;&emsp;alertError.open(() -> MaterialToast.fireToast("Callback Fired"));<br/>
                &emsp;&emsp;return;<br/>
                &emsp;}<br/>
                &emsp;alertError.open();<br/>
                }<br/><br/>

                // Hiding your alert Component <br/>
                @UiHandler("hideAlertError")<br/>
                void hideAlertError(ClickEvent e) {<br/>
                &emsp;alertError.close();<br/>
                }<br/>
            </demo:PrettyPre>
        </m:MaterialRow>
    </m:MaterialPanel>
</ui:UiBinder>

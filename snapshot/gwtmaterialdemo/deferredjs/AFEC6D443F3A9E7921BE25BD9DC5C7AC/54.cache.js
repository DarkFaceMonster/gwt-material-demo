$wnd.gwtmaterialdemo.runAsyncCallback54("function rue(){}\nfunction tue(){}\nfunction vue(){}\nfunction xue(){}\nfunction zue(){}\nfunction Due(){}\nfunction Fue(){}\nfunction A6c(a,b){a.onshow=b}\nfunction y6c(a,b){a.onclose=b}\nfunction x6c(a,b){a.onclick=b}\nfunction z6c(a,b){a.onerror=b}\nfunction Cue(){this.a=new Due;this.b=new Fue}\nfunction que(){uLb.call(this);sLb(this,Bue(new Cue))}\nfunction hue(a,b,c){FKb();cLb.call(this,a,b,c,(Cud(),Aud))}\nfunction Jue(a){var b;if(!a.d){b=new que;a.d=b}return a.d}\nfunction Iue(a){var b,c;if(!a.c){c=new hue(SHb(MLb(a.a)),(b=Jue(a),b),Hue(a));xKb((PLb(a.a),c),NNb(PLb(a.a)));a.c=c}return a.c}\nfunction oue(){var a;a=(e6c(),$wnd.navigator.serviceWorker!=null);a||und(new xnd(xE(rE(_L,1),r_e,21,0,[])),'Push Notification is not supported',E4e,null);return a}\nfunction pue(){var a,b;if(oue()){if(tPe($wnd.Notification.permission,'granted')){b=new $wnd.Object;b.body='I love GMD';b.icon='https://user.oc-static.com/upload/2017/05/03/14938342186053_01-duration-and-easing.png';a=new $wnd.Notification('GMD Says',b);x6c(a,rwb(tue.prototype.Df,tue,[]));y6c(a,rwb(vue.prototype.Df,vue,[]));z6c(a,rwb(xue.prototype.Df,xue,[]));A6c(a,rwb(zue.prototype.Df,zue,[]))}else{und(new xnd(xE(rE(_L,1),r_e,21,0,[])),'Permission Denied. Update it thru the browser setting',E4e,null)}}}\nfunction Bue(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A;b=new Ykc;iRb(b,(c=new W7b,iRb(c,(i=new pnd,Cqd(i.b,'Will check if the Notification API is supported'),Ws(ho(i.a),(Jxb(),(new xxb(Kxb(Cyf))).a)),SB(i,Cyf),i)),iRb(c,(j=new IBe,Eqd(j,(k=new TPe,k.a+='PwaManager.isPwaSupported()',new rxb(k.a)).a),zo((pyb(),j.tb),ybf,true),j)),zo(c.tb,K7e,true),c));iRb(b,(d=new W7b,iRb(d,(l=new pnd,Ws(ho(l.a),(new xxb(Kxb(Dyf))).a),SB(l,Dyf),l)),iRb(d,(m=new oYb,vZb(m.k,Dyf),m.k.ob||iRb(m,m.k),mRb(m,a.a),m)),iRb(d,(n=new IBe,Eqd(n,(o=new TPe,o.a+='// Will return the following status (see next section) <br> Notification.getPermission();',new rxb(o.a)).a),zo(n.tb,ybf,true),n)),zo(d.tb,K7e,true),d));iRb(b,(e=new W7b,iRb(e,(p=new pnd,Ws(ho(p.a),(new xxb(Kxb(Eyf))).a),SB(p,Eyf),p)),iRb(e,new yCb((q=new TPe,q.a+='<blockquote> <p><b>denied<\\/b> - The user refuses to have notifications displayed. <\\/p> <p><b>granted<\\/b> - The user accepts having notifications displayed. <\\/p> <p><b>default<\\/b> - The user choice is unknown and therefore the browser will act as if the value were denied. <\\/p> <\\/blockquote>',new rxb(q.a)).a)),zo(e.tb,K7e,true),e));iRb(b,(f=new W7b,iRb(f,(r=new pnd,Ws(ho(r.a),(new xxb(Kxb(Fyf))).a),SB(r,Fyf),r)),iRb(f,(s=new oYb,vZb(s.k,Fyf),s.k.ob||iRb(s,s.k),mRb(s,a.b),s)),zo(f.tb,K7e,true),f));iRb(b,(g=new W7b,iRb(g,(t=new pnd,Ws(ho(t.a),(new xxb(Kxb(Gyf))).a),SB(t,Gyf),t)),iRb(g,new yCb((u=new TPe,u.a+='<blockquote> <p><b>actions<\\/b> - The actions array of the notification as specified in the options parameter of the constructor.<\\/p> <p><b>badge<\\/b> - The URL of the image used to represent the notification when there is not enough space to display the notification itself.<\\/p> <p><b>body<\\/b> - The body string of the notification as specified in the options parameter of the constructor.<\\/p> <p><b>data<\\/b> - Returns a structured clone of the notification\\u2019s data.<\\/p> <p><b>dir<\\/b> - The text direction of the notification as specified in the options parameter of the constructor.<\\/p> <p><b>lang<\\/b> - The language code of the notification as specified in the options parameter of the constructor. <\\/p> <p><b>tag<\\/b> - The ID of the notification (if any) as specified in the options parameter of the constructor. <\\/p> <p><b>icon<\\/b> - The URL of the image used as an icon of the notification as specified in the options parameter of the constructor. <\\/p> <p><b>image<\\/b> - The URL of an image to be displayed as part of the notification, as specified in the options parameter of the constructor. <\\/p> <p><b>renotify<\\/b> - Specifies whether the user should be notified after a new notification replaces an old one. <\\/p> <p><b>requireInteraction<\\/b> - A Boolean indicating that a notification should remain active until the user clicks or dismisses it, rather than closing automatically. <\\/p> <p><b>silent<\\/b> - Specifies whether the notification should be silent, i.e. no sounds or vibrations should be issued, regardless of the device settings. <\\/p> <p><b>timestamp<\\/b> - Specifies the time at which a notification is created or applicable (past, present, or future). <\\/p> <p><b>title<\\/b> - The title of the notification as specified in the first parameter of the constructor. <\\/p> <p><b>vibrate<\\/b> - Specifies a vibration pattern for devices with vibration hardware to emit. <\\/p> <\\/blockquote>',new rxb(u.a)).a)),zo(g.tb,K7e,true),g));iRb(b,(h=new W7b,iRb(h,(v=new pnd,Ws(ho(v.a),(new xxb(Kxb(Hyf))).a),SB(v,Hyf),v)),iRb(h,(w=new IBe,Eqd(w,(A=new TPe,A.a+='Notification notification = new Notification(\"GMD Says\", options); <br> // Listen to any Notification events <br> // A handler for the click event. It is triggered each time the user clicks on the notification. <br> notification.setOnclick(param1 -&gt; MaterialToast.fireToast(\"Clicked\")); <br> // A handler for the close event. It is triggered when the user closes the notification. <br> notification.setOnclose(param1 -&gt; MaterialToast.fireToast(\"Closed\")); <br> // A handler for the error event. It is triggered each time the notification encounters an error. <br> notification.setOnerror(param1 -&gt; MaterialToast.fireToast(\"Error\")); <br> // A handler for the show event. It is triggered when the notification is displayed. <br> notification.setOnshow(param1 -&gt; MaterialToast.fireToast(\"Shown\")); <br>',new rxb(A.a)).a),zo(w.tb,ybf,true),w)),zo(h.tb,K7e,true),h));return b}\nvar Cyf='isSupported()',Dyf='Request Permission',Eyf='Permission Status',Fyf='Show Notification',Gyf='Notification Options',Hyf='Notification Handlers';pwb(1117,120,G3e,hue);_.Ge=function iue(){hBe();MKb(this,new jBe(pkf,'Push messaging provides a simple and effective way to re-engage with your users','pwa/notification/NotificationView',''))};var dob=ZNe(wkf,'NotificationPresenter',1117);pwb(1729,129,H3e,que);var hob=ZNe(wkf,'NotificationView',1729);pwb(3216,$wnd.Function,{},rue);_.Df=function sue(a){ynd('Status: '+nF(a))};pwb(3212,$wnd.Function,{},tue);_.Df=function uue(a){und(new xnd(xE(rE(_L,1),r_e,21,0,[])),'Clicked',E4e,null)};pwb(3213,$wnd.Function,{},vue);_.Df=function wue(a){und(new xnd(xE(rE(_L,1),r_e,21,0,[])),cof,E4e,null)};pwb(3214,$wnd.Function,{},xue);_.Df=function yue(a){und(new xnd(xE(rE(_L,1),r_e,21,0,[])),Atf,E4e,null)};pwb(3215,$wnd.Function,{},zue);_.Df=function Aue(a){und(new xnd(xE(rE(_L,1),r_e,21,0,[])),'Shown',E4e,null)};pwb(2274,1,{},Cue);var gob=ZNe(wkf,'NotificationView_BinderImpl/Widgets',2274);pwb(2275,1,r4e,Due);_.od=function Eue(a){oue()&&$wnd.Notification.requestPermission(rwb(rue.prototype.Df,rue,[]))};var eob=ZNe(wkf,'NotificationView_BinderImpl/Widgets/1',2275);pwb(2276,1,r4e,Fue);_.od=function Gue(a){pue()};var fob=ZNe(wkf,'NotificationView_BinderImpl/Widgets/2',2276);pwb(1002,1,Qbf);_.Yc=function Pue(){cPb(this.b,Iue(this.a.a))};S$e(Kq)(54);\n//# sourceURL=gwtmaterialdemo-54.js\n")

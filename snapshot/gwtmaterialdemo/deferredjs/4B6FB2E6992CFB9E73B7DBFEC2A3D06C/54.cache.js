$wnd.gwtmaterialdemo.runAsyncCallback54("function gue(){}\nfunction iue(){}\nfunction kue(){}\nfunction mue(){}\nfunction oue(){}\nfunction sue(){}\nfunction uue(){}\nfunction D6c(a,b){a.onshow=b}\nfunction B6c(a,b){a.onclose=b}\nfunction A6c(a,b){a.onclick=b}\nfunction C6c(a,b){a.onerror=b}\nfunction rue(){this.a=new sue;this.b=new uue}\nfunction fue(){yLb.call(this);wLb(this,que(new rue))}\nfunction Yte(a,b,c){JKb();gLb.call(this,a,b,c,(rud(),pud))}\nfunction yue(a){var b;if(!a.d){b=new fue;a.d=b}return a.d}\nfunction xue(a){var b,c;if(!a.c){c=new Yte(WHb(QLb(a.a)),(b=yue(a),b),wue(a));BKb((TLb(a.a),c),RNb(TLb(a.a)));a.c=c}return a.c}\nfunction due(){var a;a=(h6c(),$wnd.navigator.serviceWorker!=null);a||lnd(new nnd(wE(qE($L,1),w_e,21,0,[])),'Push Notification is not supported',H4e,null);return a}\nfunction eue(){var a,b;if(due()){if(lPe($wnd.Notification.permission,'granted')){b=new $wnd.Object;b.body='I love GMD';b.icon='https://user.oc-static.com/upload/2017/05/03/14938342186053_01-duration-and-easing.png';a=new $wnd.Notification('GMD Says',b);A6c(a,vwb(iue.prototype.Df,iue,[]));B6c(a,vwb(kue.prototype.Df,kue,[]));C6c(a,vwb(mue.prototype.Df,mue,[]));D6c(a,vwb(oue.prototype.Df,oue,[]))}else{lnd(new nnd(wE(qE($L,1),w_e,21,0,[])),'Permission Denied. Update it thru the browser setting',H4e,null)}}}\nfunction que(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A;b=new _kc;mRb(b,(c=new Z7b,mRb(c,(i=new fnd,rqd(i.b,'Will check if the Notification API is supported'),Vs(ho(i.a),(Nxb(),(new Bxb(Oxb(Iyf))).a)),RB(i,Iyf),i)),mRb(c,(j=new xBe,tqd(j,(k=new LPe,k.a+='PwaManager.isPwaSupported()',new vxb(k.a)).a),zo((tyb(),j.tb),Bbf,true),j)),zo(c.tb,N7e,true),c));mRb(b,(d=new Z7b,mRb(d,(l=new fnd,Vs(ho(l.a),(new Bxb(Oxb(Jyf))).a),RB(l,Jyf),l)),mRb(d,(m=new qYb,xZb(m.k,Jyf),m.k.ob||mRb(m,m.k),qRb(m,a.a),m)),mRb(d,(n=new xBe,tqd(n,(o=new LPe,o.a+='// Will return the following status (see next section) <br> Notification.getPermission();',new vxb(o.a)).a),zo(n.tb,Bbf,true),n)),zo(d.tb,N7e,true),d));mRb(b,(e=new Z7b,mRb(e,(p=new fnd,Vs(ho(p.a),(new Bxb(Oxb(Kyf))).a),RB(p,Kyf),p)),mRb(e,new CCb((q=new LPe,q.a+='<blockquote> <p><b>denied<\\/b> - The user refuses to have notifications displayed. <\\/p> <p><b>granted<\\/b> - The user accepts having notifications displayed. <\\/p> <p><b>default<\\/b> - The user choice is unknown and therefore the browser will act as if the value were denied. <\\/p> <\\/blockquote>',new vxb(q.a)).a)),zo(e.tb,N7e,true),e));mRb(b,(f=new Z7b,mRb(f,(r=new fnd,Vs(ho(r.a),(new Bxb(Oxb(Lyf))).a),RB(r,Lyf),r)),mRb(f,(s=new qYb,xZb(s.k,Lyf),s.k.ob||mRb(s,s.k),qRb(s,a.b),s)),zo(f.tb,N7e,true),f));mRb(b,(g=new Z7b,mRb(g,(t=new fnd,Vs(ho(t.a),(new Bxb(Oxb(Myf))).a),RB(t,Myf),t)),mRb(g,new CCb((u=new LPe,u.a+='<blockquote> <p><b>actions<\\/b> - The actions array of the notification as specified in the options parameter of the constructor.<\\/p> <p><b>badge<\\/b> - The URL of the image used to represent the notification when there is not enough space to display the notification itself.<\\/p> <p><b>body<\\/b> - The body string of the notification as specified in the options parameter of the constructor.<\\/p> <p><b>data<\\/b> - Returns a structured clone of the notification\\u2019s data.<\\/p> <p><b>dir<\\/b> - The text direction of the notification as specified in the options parameter of the constructor.<\\/p> <p><b>lang<\\/b> - The language code of the notification as specified in the options parameter of the constructor. <\\/p> <p><b>tag<\\/b> - The ID of the notification (if any) as specified in the options parameter of the constructor. <\\/p> <p><b>icon<\\/b> - The URL of the image used as an icon of the notification as specified in the options parameter of the constructor. <\\/p> <p><b>image<\\/b> - The URL of an image to be displayed as part of the notification, as specified in the options parameter of the constructor. <\\/p> <p><b>renotify<\\/b> - Specifies whether the user should be notified after a new notification replaces an old one. <\\/p> <p><b>requireInteraction<\\/b> - A Boolean indicating that a notification should remain active until the user clicks or dismisses it, rather than closing automatically. <\\/p> <p><b>silent<\\/b> - Specifies whether the notification should be silent, i.e. no sounds or vibrations should be issued, regardless of the device settings. <\\/p> <p><b>timestamp<\\/b> - Specifies the time at which a notification is created or applicable (past, present, or future). <\\/p> <p><b>title<\\/b> - The title of the notification as specified in the first parameter of the constructor. <\\/p> <p><b>vibrate<\\/b> - Specifies a vibration pattern for devices with vibration hardware to emit. <\\/p> <\\/blockquote>',new vxb(u.a)).a)),zo(g.tb,N7e,true),g));mRb(b,(h=new Z7b,mRb(h,(v=new fnd,Vs(ho(v.a),(new Bxb(Oxb(Nyf))).a),RB(v,Nyf),v)),mRb(h,(w=new xBe,tqd(w,(A=new LPe,A.a+='Notification notification = new Notification(\"GMD Says\", options); <br> // Listen to any Notification events <br> // A handler for the click event. It is triggered each time the user clicks on the notification. <br> notification.setOnclick(param1 -&gt; MaterialToast.fireToast(\"Clicked\")); <br> // A handler for the close event. It is triggered when the user closes the notification. <br> notification.setOnclose(param1 -&gt; MaterialToast.fireToast(\"Closed\")); <br> // A handler for the error event. It is triggered each time the notification encounters an error. <br> notification.setOnerror(param1 -&gt; MaterialToast.fireToast(\"Error\")); <br> // A handler for the show event. It is triggered when the notification is displayed. <br> notification.setOnshow(param1 -&gt; MaterialToast.fireToast(\"Shown\")); <br>',new vxb(A.a)).a),zo(w.tb,Bbf,true),w)),zo(h.tb,N7e,true),h));return b}\nvar Iyf='isSupported()',Jyf='Request Permission',Kyf='Permission Status',Lyf='Show Notification',Myf='Notification Options',Nyf='Notification Handlers';twb(1120,120,L3e,Yte);_.Ge=function Zte(){YAe();QKb(this,new $Ae(ukf,'Push messaging provides a simple and effective way to re-engage with your users','pwa/notification/NotificationView',''))};var cob=PNe(Bkf,'NotificationPresenter',1120);twb(1732,129,M3e,fue);var gob=PNe(Bkf,'NotificationView',1732);twb(3219,$wnd.Function,{},gue);_.Df=function hue(a){ond('Status: '+mF(a))};twb(3215,$wnd.Function,{},iue);_.Df=function jue(a){lnd(new nnd(wE(qE($L,1),w_e,21,0,[])),'Clicked',H4e,null)};twb(3216,$wnd.Function,{},kue);_.Df=function lue(a){lnd(new nnd(wE(qE($L,1),w_e,21,0,[])),iof,H4e,null)};twb(3217,$wnd.Function,{},mue);_.Df=function nue(a){lnd(new nnd(wE(qE($L,1),w_e,21,0,[])),Gtf,H4e,null)};twb(3218,$wnd.Function,{},oue);_.Df=function pue(a){lnd(new nnd(wE(qE($L,1),w_e,21,0,[])),'Shown',H4e,null)};twb(2277,1,{},rue);var fob=PNe(Bkf,'NotificationView_BinderImpl/Widgets',2277);twb(2278,1,u4e,sue);_.od=function tue(a){due()&&$wnd.Notification.requestPermission(vwb(gue.prototype.Df,gue,[]))};var dob=PNe(Bkf,'NotificationView_BinderImpl/Widgets/1',2278);twb(2279,1,u4e,uue);_.od=function vue(a){eue()};var eob=PNe(Bkf,'NotificationView_BinderImpl/Widgets/2',2279);twb(1005,1,Tbf);_.Yc=function Eue(){gPb(this.b,xue(this.a.a))};X$e(Kq)(54);\n//# sourceURL=gwtmaterialdemo-54.js\n")

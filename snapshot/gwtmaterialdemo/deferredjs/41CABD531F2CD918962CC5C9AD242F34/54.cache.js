$wnd.gwtmaterialdemo.runAsyncCallback54("function Lse(){}\nfunction Nse(){}\nfunction Pse(){}\nfunction Rse(){}\nfunction Tse(){}\nfunction Xse(){}\nfunction Zse(){}\nfunction U4c(a,b){a.onshow=b}\nfunction S4c(a,b){a.onclose=b}\nfunction R4c(a,b){a.onclick=b}\nfunction T4c(a,b){a.onerror=b}\nfunction Wse(){this.a=new Xse;this.b=new Zse}\nfunction Kse(){OJb.call(this);MJb(this,Vse(new Wse))}\nfunction Bse(a,b,c){ZIb();wJb.call(this,a,b,c,(Wsd(),Usd))}\nfunction bte(a){var b;if(!a.d){b=new Kse;a.d=b}return a.d}\nfunction ate(a){var b,c;if(!a.c){c=new Bse(kGb(eKb(a.a)),(b=bte(a),b),_se(a));RIb((hKb(a.a),c),fMb(hKb(a.a)));a.c=c}return a.c}\nfunction Ise(){var a;a=(y4c(),$wnd.navigator.serviceWorker!=null);a||Old(new Rld(dD(ZC(GK,1),LZe,21,0,[])),'Push Notification is not supported',X2e,null);return a}\nfunction Jse(){var a,b;if(Ise()){if(NNe($wnd.Notification.permission,'granted')){b=new $wnd.Object;b.body='I love GMD';b.icon='https://user.oc-static.com/upload/2017/05/03/14938342186053_01-duration-and-easing.png';a=new $wnd.Notification('GMD Says',b);R4c(a,Vub(Nse.prototype.Bf,Nse,[]));S4c(a,Vub(Pse.prototype.Bf,Pse,[]));T4c(a,Vub(Rse.prototype.Bf,Rse,[]));U4c(a,Vub(Tse.prototype.Bf,Tse,[]))}else{Old(new Rld(dD(ZC(GK,1),LZe,21,0,[])),'Permission Denied. Update it thru the browser setting',X2e,null)}}}\nfunction Vse(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A;b=new qjc;CPb(b,(c=new o6b,CPb(c,(i=new Jld,Wod(i.b,'Will check if the Notification API is supported'),Fs(ho(i.a),(lwb(),(new _vb(mwb(Ywf))).a)),yA(i,Ywf),i)),CPb(c,(j=new aAe,Yod(j,(k=new lOe,k.a+='PwaManager.isPwaSupported()',new Vvb(k.a)).a),zo((Twb(),j.tb),U9e,true),j)),zo(c.tb,e6e,true),c));CPb(b,(d=new o6b,CPb(d,(l=new Jld,Fs(ho(l.a),(new _vb(mwb(Zwf))).a),yA(l,Zwf),l)),CPb(d,(m=new IWb,PXb(m.k,Zwf),m.k.ob||CPb(m,m.k),GPb(m,a.a),m)),CPb(d,(n=new aAe,Yod(n,(o=new lOe,o.a+='// Will return the following status (see next section) <br> Notification.getPermission();',new Vvb(o.a)).a),zo(n.tb,U9e,true),n)),zo(d.tb,e6e,true),d));CPb(b,(e=new o6b,CPb(e,(p=new Jld,Fs(ho(p.a),(new _vb(mwb($wf))).a),yA(p,$wf),p)),CPb(e,new eBb((q=new lOe,q.a+='<blockquote> <p><b>denied<\\/b> - The user refuses to have notifications displayed. <\\/p> <p><b>granted<\\/b> - The user accepts having notifications displayed. <\\/p> <p><b>default<\\/b> - The user choice is unknown and therefore the browser will act as if the value were denied. <\\/p> <\\/blockquote>',new Vvb(q.a)).a)),zo(e.tb,e6e,true),e));CPb(b,(f=new o6b,CPb(f,(r=new Jld,Fs(ho(r.a),(new _vb(mwb(_wf))).a),yA(r,_wf),r)),CPb(f,(s=new IWb,PXb(s.k,_wf),s.k.ob||CPb(s,s.k),GPb(s,a.b),s)),zo(f.tb,e6e,true),f));CPb(b,(g=new o6b,CPb(g,(t=new Jld,Fs(ho(t.a),(new _vb(mwb(axf))).a),yA(t,axf),t)),CPb(g,new eBb((u=new lOe,u.a+='<blockquote> <p><b>actions<\\/b> - The actions array of the notification as specified in the options parameter of the constructor.<\\/p> <p><b>badge<\\/b> - The URL of the image used to represent the notification when there is not enough space to display the notification itself.<\\/p> <p><b>body<\\/b> - The body string of the notification as specified in the options parameter of the constructor.<\\/p> <p><b>data<\\/b> - Returns a structured clone of the notification\\u2019s data.<\\/p> <p><b>dir<\\/b> - The text direction of the notification as specified in the options parameter of the constructor.<\\/p> <p><b>lang<\\/b> - The language code of the notification as specified in the options parameter of the constructor. <\\/p> <p><b>tag<\\/b> - The ID of the notification (if any) as specified in the options parameter of the constructor. <\\/p> <p><b>icon<\\/b> - The URL of the image used as an icon of the notification as specified in the options parameter of the constructor. <\\/p> <p><b>image<\\/b> - The URL of an image to be displayed as part of the notification, as specified in the options parameter of the constructor. <\\/p> <p><b>renotify<\\/b> - Specifies whether the user should be notified after a new notification replaces an old one. <\\/p> <p><b>requireInteraction<\\/b> - A Boolean indicating that a notification should remain active until the user clicks or dismisses it, rather than closing automatically. <\\/p> <p><b>silent<\\/b> - Specifies whether the notification should be silent, i.e. no sounds or vibrations should be issued, regardless of the device settings. <\\/p> <p><b>timestamp<\\/b> - Specifies the time at which a notification is created or applicable (past, present, or future). <\\/p> <p><b>title<\\/b> - The title of the notification as specified in the first parameter of the constructor. <\\/p> <p><b>vibrate<\\/b> - Specifies a vibration pattern for devices with vibration hardware to emit. <\\/p> <\\/blockquote>',new Vvb(u.a)).a)),zo(g.tb,e6e,true),g));CPb(b,(h=new o6b,CPb(h,(v=new Jld,Fs(ho(v.a),(new _vb(mwb(bxf))).a),yA(v,bxf),v)),CPb(h,(w=new aAe,Yod(w,(A=new lOe,A.a+='Notification notification = new Notification(\"GMD Says\", options); <br> // Listen to any Notification events <br> // A handler for the click event. It is triggered each time the user clicks on the notification. <br> notification.setOnclick(param1 -&gt; MaterialToast.fireToast(\"Clicked\")); <br> // A handler for the close event. It is triggered when the user closes the notification. <br> notification.setOnclose(param1 -&gt; MaterialToast.fireToast(\"Closed\")); <br> // A handler for the error event. It is triggered each time the notification encounters an error. <br> notification.setOnerror(param1 -&gt; MaterialToast.fireToast(\"Error\")); <br> // A handler for the show event. It is triggered when the notification is displayed. <br> notification.setOnshow(param1 -&gt; MaterialToast.fireToast(\"Shown\")); <br>',new Vvb(A.a)).a),zo(w.tb,U9e,true),w)),zo(h.tb,e6e,true),h));return b}\nvar Ywf='isSupported()',Zwf='Request Permission',$wf='Permission Status',_wf='Show Notification',axf='Notification Options',bxf='Notification Handlers';Tub(1117,120,Z1e,Bse);_.Ee=function Cse(){Bze();eJb(this,new Dze(Lif,'Push messaging provides a simple and effective way to re-engage with your users','pwa/notification/NotificationView',''))};var Hmb=rMe(Sif,'NotificationPresenter',1117);Tub(1732,129,$1e,Kse);var Lmb=rMe(Sif,'NotificationView',1732);Tub(3212,$wnd.Function,{},Lse);_.Bf=function Mse(a){Sld('Status: '+VD(a))};Tub(3208,$wnd.Function,{},Nse);_.Bf=function Ose(a){Old(new Rld(dD(ZC(GK,1),LZe,21,0,[])),'Clicked',X2e,null)};Tub(3209,$wnd.Function,{},Pse);_.Bf=function Qse(a){Old(new Rld(dD(ZC(GK,1),LZe,21,0,[])),ymf,X2e,null)};Tub(3210,$wnd.Function,{},Rse);_.Bf=function Sse(a){Old(new Rld(dD(ZC(GK,1),LZe,21,0,[])),Wrf,X2e,null)};Tub(3211,$wnd.Function,{},Tse);_.Bf=function Use(a){Old(new Rld(dD(ZC(GK,1),LZe,21,0,[])),'Shown',X2e,null)};Tub(2276,1,{},Wse);var Kmb=rMe(Sif,'NotificationView_BinderImpl/Widgets',2276);Tub(2277,1,K2e,Xse);_.nd=function Yse(a){Ise()&&$wnd.Notification.requestPermission(Vub(Lse.prototype.Bf,Lse,[]))};var Imb=rMe(Sif,'NotificationView_BinderImpl/Widgets/1',2277);Tub(2278,1,K2e,Zse);_.nd=function $se(a){Jse()};var Jmb=rMe(Sif,'NotificationView_BinderImpl/Widgets/2',2278);Tub(1002,1,kaf);_.Yc=function hte(){wNb(this.b,ate(this.a.a))};kZe(Iq)(54);\n//# sourceURL=gwtmaterialdemo-54.js\n")

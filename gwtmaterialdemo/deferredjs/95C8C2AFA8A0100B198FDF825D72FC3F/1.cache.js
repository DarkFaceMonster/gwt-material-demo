$wnd.gwtmaterialdemo.runAsyncCallback1('function $setValue_4(this$static, value_0, reload){\n  $setAttribute(($clinit_DOM() , this$static.element_0), \'data-jdenticon-hash\', (this$static.value_0 = value_0 , $wnd.md5(value_0)));\n  reload && $wnd.jdenticon();\n}\n\nfunction $clinit_MaterialAvatar(){\n  $clinit_MaterialAvatar = emptyMethod;\n  !startupState && (startupState = new StartupState$DebugState);\n  if (startupState) {\n    $clinit_MaterialDesignBase();\n    injectJs(($clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$jdenticonDebugJsInitializer() , jdenticonDebugJs), false, true);\n    injectJs(($clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$md5DebugJsInitializer() , md5DebugJs), false, true);\n  }\n   else {\n    $clinit_MaterialDesignBase();\n    injectJs(($clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$jdenticonJsInitializer() , jdenticonJs), true, false);\n    injectJs(($clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$md5JsInitializer() , md5Js), true, false);\n  }\n}\n\nfunction $setDimension(this$static, width_0, height){\n  $setAttribute(($clinit_DOM() , this$static.element_0), \'width\', \'\' + width_0);\n  $setAttribute(this$static.element_0, \'height\', \'\' + height);\n  $wnd.jdenticon();\n}\n\nfunction $setValue_6(this$static, value_0, fireEvents){\n  fireEvents && fire_5(this$static, value_0);\n  $setAttribute(($clinit_DOM() , this$static.element_0), \'data-jdenticon-hash\', (this$static.value_0 = value_0 , $wnd.md5(value_0)));\n}\n\nfunction MaterialAvatar(){\n  $clinit_MaterialAvatar();\n  AbstractValueWidget.call(this, $doc.createElement(\'canvas\'));\n}\n\ndefineClass(581, 154, $intern_62, MaterialAvatar);\n_.getValue = function getValue_5(){\n  return this.value_0;\n}\n;\n_.setValue_1 = function setValue_5(value_0, fireEvents){\n  $setValue_6(this, throwClassCastExceptionUnlessNull(value_0), fireEvents);\n}\n;\n_.onLoad = function onLoad_8(){\n  $onLoad(this);\n  $wnd.jdenticon();\n}\n;\n_.setHeight_0 = function setHeight_1(height){\n  $setAttribute(($clinit_DOM() , this.element_0), \'height\', height);\n}\n;\n_.setWidth_0 = function setWidth_1(width_0){\n  $setAttribute(($clinit_DOM() , this.element_0), \'width\', width_0);\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatar_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatar\', 581);\nvar jdenticonJs, md5Js;\nfunction MaterialAvatarClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2355, 1, {}, MaterialAvatarClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_2(){\n  return \'jdenticonJs\';\n}\n;\n_.getText = function getText_1(){\n  return \'// Jdenticon 1.3.2 | jdenticon.com | zlib licensed | (c) 2014-2015 Daniel Mester Pirttij\\xE4rvi\\n(function(k,g,h){var l=h(k,k.jQuery);"undefined"!==typeof module&&"exports"in module?module.exports=l:"function"===typeof define&&define.amd?define([],function(){return l}):k[g]=l})(this,"jdenticon",function(k,g){function h(b,a){this.x=b;this.y=a}function l(b,a,c,d){this.o=b;this.s=a;this.f=c;this.l=d}function A(b){this.C=b;this.m=l.O}function m(b){b|=0;return 0>b?"00":16>b?"0"+b.toString(16):256>b?b.toString(16):"ff"}function q(b,a,c){c=0>c?c+6:6<c?c-6:c;return m(255*(1>c?b+(a-b)*c:3>c?a:4>c?b+(a-\\nb)*(4-c):b))}function D(b,a){return[n.w(0,0,a.H(0)),n.v(b,a.A,a.u(.5)),n.w(0,0,a.H(1)),n.v(b,a.A,a.u(1)),n.v(b,a.A,a.u(0))]}function r(b,a,c,d,t){var f=0,u=0;function v(c,d,t,e,g){e=e?parseInt(a.charAt(e),16):0;d=d[parseInt(a.charAt(t),16)%d.length];b.F(n[m[c]]);for(c=0;c<g.length;c++)k.m=new l(f+g[c][0]*h,u+g[c][1]*h,h,e++%4),d(k,h,c);b.G()}function e(a){if(0<=a.indexOf(g))for(var b=0;b<a.length;b++)if(0<=m.indexOf(a[b]))return!0}d=c*(void 0===d?.08:d)|0;c-=2*d;if(30>c)throw Error("Jdenticon cannot render identicons smaller than 30 pixels.");\\nif(!/^[0-9a-f]{11,}$/i.test(a))throw Error("Invalid hash passed to Jdenticon.");var k=new A(b),h=0|c/4,f=f+(0|d+c/2-2*h),u=u+(0|d+c/2-2*h),n=D(parseInt(a.substr(-7),16)/268435455,t),m=[],g;for(c=0;3>c;c++){g=parseInt(a.charAt(8+c),16)%n.length;if(e([0,4])||e([2,3]))g=1;m.push(g)}v(0,w.J,2,3,[[1,0],[2,0],[2,3],[1,3],[0,1],[3,1],[3,2],[0,2]]);v(1,w.J,4,5,[[0,0],[3,0],[3,3],[0,3]]);v(2,w.N,1,null,[[1,1],[2,1],[2,2],[1,2]])}function B(){this.i=""}function x(b,a){this.j={};this.f={M:b,I:a}}function y(b,\\na,c){this.h=b;b.clearRect(0,0,a,c)}function z(){function b(a,b,f){var e=c[a]instanceof Array?c[a]:[b,f];return function(a){a=e[0]+a*(e[1]-e[0]);return 0>a?0:1<a?1:a}}var a=e.config||k.jdenticon_config||{},c=a.lightness||{},a=a.saturation;return{A:"number"==typeof a?a:.5,u:b("color",.4,.8),H:b("grayscale",.3,.9)}}function p(b,a,c){if("string"===typeof b){if(C){b=document.querySelectorAll(b);for(var d=0;d<b.length;d++)p(b[d],a,c)}}else if(b&&b.tagName&&(a=a||b.getAttribute("data-jdenticon-hash"))){var e=\\n"svg"==b.tagName.toLowerCase(),d="canvas"==b.tagName.toLowerCase();if(e||d&&"getContext"in b){var d=Number(b.getAttribute("width"))||b.clientWidth||0,f=Number(b.getAttribute("height"))||b.clientHeight||0,g=e?new x(d,f):new y(b.getContext("2d"),d,f);r(g,a,Math.min(d,f),c,z());if(e){a=document.createElement("span");for(a.innerHTML=g.K(!1);b.firstChild;)b.removeChild(b.firstChild);for(a=a.firstChild.childNodes;a.length;)b.appendChild(a[0]);b.setAttribute("viewBox","0 0 "+d+" "+f)}}}}function e(){C&&\\np("svg[data-jdenticon-hash],canvas[data-jdenticon-hash]")}l.prototype={L:function(b,a,c,d){var e=this.o+this.f,f=this.s+this.f;return 1===this.l?new h(e-a-(d||0),this.s+b):2===this.l?new h(e-b-(c||0),f-a-(d||0)):3===this.l?new h(this.o+a,f-b-(c||0)):new h(this.o+b,this.s+a)}};l.O=new l(0,0,0,0);A.prototype={a:function(b,a){var c=a?-2:2,d=this.m,e=[],f;for(f=a?b.length-2:0;f<b.length&&0<=f;f+=c)e.push(d.L(b[f],b[f+1]));this.C.a(e)},b:function(b,a,c,d){this.C.b(this.m.L(b,a,c,c),c,d)},c:function(b,\\na,c,d,e){this.a([b,a,b+c,a,b+c,a+d,b,a+d],e)},g:function(b,a,c,d,e,f){b=[b+c,a,b+c,a+d,b,a+d,b,a];b.splice((e||0)%4*2,2);this.a(b,f)},D:function(b,a,c,d,e){this.a([b+c/2,a,b+c,a+d/2,b+c/2,a+d,b,a+d/2],e)}};var w={N:[function(b,a){var c=.42*a;b.a([0,0,a,0,a,a-2*c,a-c,a,0,a])},function(b,a){var c=0|.5*a;b.g(a-c,0,c,0|.8*a,2)},function(b,a){var c=0|a/3;b.c(c,c,a-c,a-c)},function(b,a){var c=0|.1*a,d=0|.25*a;b.c(d,d,a-c-d,a-c-d)},function(b,a){var c=0|.15*a,d=0|.5*a;b.b(a-d-c,a-d-c,d)},function(b,a){var c=\\n.1*a,d=4*c;b.c(0,0,a,a);b.a([d,d,a-c,d,d+(a-d-c)/2,a-c],!0)},function(b,a){b.a([0,0,a,0,a,.7*a,.4*a,.4*a,.7*a,a,0,a])},function(b,a){b.g(a/2,a/2,a/2,a/2,3)},function(b,a){b.c(0,0,a,a/2);b.c(0,a/2,a/2,a/2);b.g(a/2,a/2,a/2,a/2,1)},function(b,a){var c=0|.14*a,d=0|.35*a;b.c(0,0,a,a);b.c(d,d,a-d-c,a-d-c,!0)},function(b,a){var c=.12*a,d=3*c;b.c(0,0,a,a);b.b(d,d,a-c-d,!0)},function(b,a){b.g(a/2,a/2,a/2,a/2,3)},function(b,a){var c=.25*a;b.c(0,0,a,a);b.D(c,c,a-c,a-c,!0)},function(b,a,c){var d=.4*a;c||b.b(d,\\nd,1.2*a)}],J:[function(b,a){b.g(0,0,a,a,0)},function(b,a){b.g(0,a/2,a,a/2,0)},function(b,a){b.D(0,0,a,a)},function(b,a){var c=a/6;b.b(c,c,a-2*c)}]},n={P:function(b,a,c){return"#"+m(b)+m(a)+m(c)},w:function(b,a,c){if(0==a)return b=m(255*c),"#"+b+b+b;a=.5>=c?c*(a+1):c+a-c*a;c=2*c-a;return"#"+q(c,a,6*b+2)+q(c,a,6*b)+q(c,a,6*b-2)},v:function(b,a,c){var d=[.55,.5,.5,.46,.6,.55,.55][6*b+.5|0];return n.w(b,a,.5>c?c*d*2:d+(c-.5)*(1-d)*2)}};B.prototype={a:function(b){for(var a="M"+b[0].x+" "+b[0].y,c=1;c<\\nb.length;c++)a+="L"+b[c].x+" "+b[c].y;this.i+=a+"Z"},b:function(b,a,c){c=c?0:1;var d=a/2;this.i+="M"+b.x+" "+(b.y+d)+"a"+d+","+d+" 0 1,"+c+" "+a+",0a"+d+","+d+" 0 1,"+c+" "+-a+",0"}};x.prototype={F:function(b){this.B=this.j[b]||(this.j[b]=new B)},G:function(){},a:function(b){this.B.a(b)},b:function(b,a,c){this.B.b(b,a,c)},K:function(b){var a=b?"":\\\'<svg xmlns="http://www.w3.org/2000/svg" width="\\\'+this.f.M+\\\'" height="\\\'+this.f.I+\\\'" viewBox="0 0 \\\'+this.f.M+" "+this.f.I+\\\'" preserveAspectRatio="xMidYMid meet">\\\',\\nc;for(c in this.j)a+=\\\'<path fill="\\\'+c+\\\'" d="\\\'+this.j[c].i+\\\'"/>\\\';return b?a:a+"<\\/svg>"}};y.prototype={F:function(b){this.h.fillStyle=b;this.h.beginPath()},G:function(){this.h.fill()},a:function(b){var a=this.h,c;a.moveTo(b[0].x,b[0].y);for(c=1;c<b.length;c++)a.lineTo(b[c].x,b[c].y);a.closePath()},b:function(b,a,c){var d=this.h;a/=2;d.arc(b.x+a,b.y+a,a,0,2*Math.PI,c);d.closePath()}};var C="document"in k&&"querySelectorAll"in document;e.drawIcon=function(b,a,c){if(!b)throw Error("No canvas specified.");\\nb=new y(b,c,c);r(b,a,c,0,z())};e.toSvg=function(b,a,c){var d=new x(a,a);r(d,b,a,c,z());return d.K()};e.update=p;e.version="1.3.2";g&&(g.fn.jdenticon=function(b,a){this.each(function(c,d){p(d,b,a)});return this});"function"===typeof setTimeout&&setTimeout(e,0);return e});\';\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarClientBundle_default_InlineClientBundleGenerator/1\', 2355);\nfunction MaterialAvatarClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(2356, 1, {}, MaterialAvatarClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_3(){\n  return \'md5Js\';\n}\n;\n_.getText = function getText_2(){\n  return \'/**\\n * [js-md5]{@link https://github.com/emn178/js-md5}\\n *\\n * @namespace md5\\n * @version 0.4.0\\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\\n * @copyright Chen, Yi-Cyuan 2014-2016\\n * @license MIT\\n */\\n!function(t){"use strict";function r(t){if(t)c[0]=c[16]=c[1]=c[2]=c[3]=c[4]=c[5]=c[6]=c[7]=c[8]=c[9]=c[10]=c[11]=c[12]=c[13]=c[14]=c[15]=0,this.blocks=c,this.buffer8=i;else if(n){var r=new ArrayBuffer(68);this.buffer8=new Uint8Array(r),this.blocks=new Uint32Array(r)}else this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];this.h0=this.h1=this.h2=this.h3=this.start=this.bytes=0,this.finalized=this.hashed=!1,this.first=!0}var e="object"==typeof process&&process.versions&&process.versions.node;e&&(t=global);var i,h=!t.JS_MD5_TEST&&"object"==typeof module&&module.exports,s="function"==typeof define&&define.amd,n=!t.JS_MD5_TEST&&"undefined"!=typeof ArrayBuffer,f="0123456789abcdef".split(""),a=[128,32768,8388608,-2147483648],o=[0,8,16,24],u=["hex","array","digest","buffer","arrayBuffer"],c=[];if(n){var p=new ArrayBuffer(68);i=new Uint8Array(p),c=new Uint32Array(p)}var y=function(t){return function(e){return new r(!0).update(e)[t]()}},d=function(){var t=y("hex");e&&(t=l(t)),t.create=function(){return new r},t.update=function(r){return t.create().update(r)};for(var i=0;i<u.length;++i){var h=u[i];t[h]=y(h)}return t},l=function(r){var e,i;try{if(t.JS_MD5_TEST)throw"JS_MD5_TEST";e=require("crypto"),i=require("buffer").Buffer}catch(h){return console.log(h),r}var s=function(t){if("string"==typeof t)return e.createHash("md5").update(t,"utf8").digest("hex");if(t.constructor==ArrayBuffer)t=new Uint8Array(t);else if(void 0===t.length)return r(t);return e.createHash("md5").update(new i(t)).digest("hex")};return s};r.prototype.update=function(r){if(!this.finalized){var e="string"!=typeof r;e&&r.constructor==t.ArrayBuffer&&(r=new Uint8Array(r));for(var i,h,s=0,f=r.length||0,a=this.blocks,u=this.buffer8;f>s;){if(this.hashed&&(this.hashed=!1,a[0]=a[16],a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),e)if(n)for(h=this.start;f>s&&64>h;++s)u[h++]=r[s];else for(h=this.start;f>s&&64>h;++s)a[h>>2]|=r[s]<<o[3&h++];else if(n)for(h=this.start;f>s&&64>h;++s)i=r.charCodeAt(s),128>i?u[h++]=i:2048>i?(u[h++]=192|i>>6,u[h++]=128|63&i):55296>i||i>=57344?(u[h++]=224|i>>12,u[h++]=128|i>>6&63,u[h++]=128|63&i):(i=65536+((1023&i)<<10|1023&r.charCodeAt(++s)),u[h++]=240|i>>18,u[h++]=128|i>>12&63,u[h++]=128|i>>6&63,u[h++]=128|63&i);else for(h=this.start;f>s&&64>h;++s)i=r.charCodeAt(s),128>i?a[h>>2]|=i<<o[3&h++]:2048>i?(a[h>>2]|=(192|i>>6)<<o[3&h++],a[h>>2]|=(128|63&i)<<o[3&h++]):55296>i||i>=57344?(a[h>>2]|=(224|i>>12)<<o[3&h++],a[h>>2]|=(128|i>>6&63)<<o[3&h++],a[h>>2]|=(128|63&i)<<o[3&h++]):(i=65536+((1023&i)<<10|1023&r.charCodeAt(++s)),a[h>>2]|=(240|i>>18)<<o[3&h++],a[h>>2]|=(128|i>>12&63)<<o[3&h++],a[h>>2]|=(128|i>>6&63)<<o[3&h++],a[h>>2]|=(128|63&i)<<o[3&h++]);this.lastByteIndex=h,this.bytes+=h-this.start,h>=64?(this.start=h-64,this.hash(),this.hashed=!0):this.start=h}return this}},r.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,r=this.lastByteIndex;t[r>>2]|=a[3&r],r>=56&&(this.hashed||this.hash(),t[0]=t[16],t[16]=t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=t[7]=t[8]=t[9]=t[10]=t[11]=t[12]=t[13]=t[14]=t[15]=0),t[14]=this.bytes<<3,this.hash()}},r.prototype.hash=function(){var t,r,e,i,h,s,n=this.blocks;this.first?(t=n[0]-680876937,t=(t<<7|t>>>25)-271733879<<0,i=(-1732584194^2004318071&t)+n[1]-117830708,i=(i<<12|i>>>20)+t<<0,e=(-271733879^i&(-271733879^t))+n[2]-1126478375,e=(e<<17|e>>>15)+i<<0,r=(t^e&(i^t))+n[3]-1316259209,r=(r<<22|r>>>10)+e<<0):(t=this.h0,r=this.h1,e=this.h2,i=this.h3,t+=(i^r&(e^i))+n[0]-680876936,t=(t<<7|t>>>25)+r<<0,i+=(e^t&(r^e))+n[1]-389564586,i=(i<<12|i>>>20)+t<<0,e+=(r^i&(t^r))+n[2]+606105819,e=(e<<17|e>>>15)+i<<0,r+=(t^e&(i^t))+n[3]-1044525330,r=(r<<22|r>>>10)+e<<0),t+=(i^r&(e^i))+n[4]-176418897,t=(t<<7|t>>>25)+r<<0,i+=(e^t&(r^e))+n[5]+1200080426,i=(i<<12|i>>>20)+t<<0,e+=(r^i&(t^r))+n[6]-1473231341,e=(e<<17|e>>>15)+i<<0,r+=(t^e&(i^t))+n[7]-45705983,r=(r<<22|r>>>10)+e<<0,t+=(i^r&(e^i))+n[8]+1770035416,t=(t<<7|t>>>25)+r<<0,i+=(e^t&(r^e))+n[9]-1958414417,i=(i<<12|i>>>20)+t<<0,e+=(r^i&(t^r))+n[10]-42063,e=(e<<17|e>>>15)+i<<0,r+=(t^e&(i^t))+n[11]-1990404162,r=(r<<22|r>>>10)+e<<0,t+=(i^r&(e^i))+n[12]+1804603682,t=(t<<7|t>>>25)+r<<0,i+=(e^t&(r^e))+n[13]-40341101,i=(i<<12|i>>>20)+t<<0,e+=(r^i&(t^r))+n[14]-1502002290,e=(e<<17|e>>>15)+i<<0,r+=(t^e&(i^t))+n[15]+1236535329,r=(r<<22|r>>>10)+e<<0,t+=(e^i&(r^e))+n[1]-165796510,t=(t<<5|t>>>27)+r<<0,i+=(r^e&(t^r))+n[6]-1069501632,i=(i<<9|i>>>23)+t<<0,e+=(t^r&(i^t))+n[11]+643717713,e=(e<<14|e>>>18)+i<<0,r+=(i^t&(e^i))+n[0]-373897302,r=(r<<20|r>>>12)+e<<0,t+=(e^i&(r^e))+n[5]-701558691,t=(t<<5|t>>>27)+r<<0,i+=(r^e&(t^r))+n[10]+38016083,i=(i<<9|i>>>23)+t<<0,e+=(t^r&(i^t))+n[15]-660478335,e=(e<<14|e>>>18)+i<<0,r+=(i^t&(e^i))+n[4]-405537848,r=(r<<20|r>>>12)+e<<0,t+=(e^i&(r^e))+n[9]+568446438,t=(t<<5|t>>>27)+r<<0,i+=(r^e&(t^r))+n[14]-1019803690,i=(i<<9|i>>>23)+t<<0,e+=(t^r&(i^t))+n[3]-187363961,e=(e<<14|e>>>18)+i<<0,r+=(i^t&(e^i))+n[8]+1163531501,r=(r<<20|r>>>12)+e<<0,t+=(e^i&(r^e))+n[13]-1444681467,t=(t<<5|t>>>27)+r<<0,i+=(r^e&(t^r))+n[2]-51403784,i=(i<<9|i>>>23)+t<<0,e+=(t^r&(i^t))+n[7]+1735328473,e=(e<<14|e>>>18)+i<<0,r+=(i^t&(e^i))+n[12]-1926607734,r=(r<<20|r>>>12)+e<<0,h=r^e,t+=(h^i)+n[5]-378558,t=(t<<4|t>>>28)+r<<0,i+=(h^t)+n[8]-2022574463,i=(i<<11|i>>>21)+t<<0,s=i^t,e+=(s^r)+n[11]+1839030562,e=(e<<16|e>>>16)+i<<0,r+=(s^e)+n[14]-35309556,r=(r<<23|r>>>9)+e<<0,h=r^e,t+=(h^i)+n[1]-1530992060,t=(t<<4|t>>>28)+r<<0,i+=(h^t)+n[4]+1272893353,i=(i<<11|i>>>21)+t<<0,s=i^t,e+=(s^r)+n[7]-155497632,e=(e<<16|e>>>16)+i<<0,r+=(s^e)+n[10]-1094730640,r=(r<<23|r>>>9)+e<<0,h=r^e,t+=(h^i)+n[13]+681279174,t=(t<<4|t>>>28)+r<<0,i+=(h^t)+n[0]-358537222,i=(i<<11|i>>>21)+t<<0,s=i^t,e+=(s^r)+n[3]-722521979,e=(e<<16|e>>>16)+i<<0,r+=(s^e)+n[6]+76029189,r=(r<<23|r>>>9)+e<<0,h=r^e,t+=(h^i)+n[9]-640364487,t=(t<<4|t>>>28)+r<<0,i+=(h^t)+n[12]-421815835,i=(i<<11|i>>>21)+t<<0,s=i^t,e+=(s^r)+n[15]+530742520,e=(e<<16|e>>>16)+i<<0,r+=(s^e)+n[2]-995338651,r=(r<<23|r>>>9)+e<<0,t+=(e^(r|~i))+n[0]-198630844,t=(t<<6|t>>>26)+r<<0,i+=(r^(t|~e))+n[7]+1126891415,i=(i<<10|i>>>22)+t<<0,e+=(t^(i|~r))+n[14]-1416354905,e=(e<<15|e>>>17)+i<<0,r+=(i^(e|~t))+n[5]-57434055,r=(r<<21|r>>>11)+e<<0,t+=(e^(r|~i))+n[12]+1700485571,t=(t<<6|t>>>26)+r<<0,i+=(r^(t|~e))+n[3]-1894986606,i=(i<<10|i>>>22)+t<<0,e+=(t^(i|~r))+n[10]-1051523,e=(e<<15|e>>>17)+i<<0,r+=(i^(e|~t))+n[1]-2054922799,r=(r<<21|r>>>11)+e<<0,t+=(e^(r|~i))+n[8]+1873313359,t=(t<<6|t>>>26)+r<<0,i+=(r^(t|~e))+n[15]-30611744,i=(i<<10|i>>>22)+t<<0,e+=(t^(i|~r))+n[6]-1560198380,e=(e<<15|e>>>17)+i<<0,r+=(i^(e|~t))+n[13]+1309151649,r=(r<<21|r>>>11)+e<<0,t+=(e^(r|~i))+n[4]-145523070,t=(t<<6|t>>>26)+r<<0,i+=(r^(t|~e))+n[11]-1120210379,i=(i<<10|i>>>22)+t<<0,e+=(t^(i|~r))+n[2]+718787259,e=(e<<15|e>>>17)+i<<0,r+=(i^(e|~t))+n[9]-343485551,r=(r<<21|r>>>11)+e<<0,this.first?(this.h0=t+1732584193<<0,this.h1=r-271733879<<0,this.h2=e-1732584194<<0,this.h3=i+271733878<<0,this.first=!1):(this.h0=this.h0+t<<0,this.h1=this.h1+r<<0,this.h2=this.h2+e<<0,this.h3=this.h3+i<<0)},r.prototype.hex=function(){this.finalize();var t=this.h0,r=this.h1,e=this.h2,i=this.h3;return f[t>>4&15]+f[15&t]+f[t>>12&15]+f[t>>8&15]+f[t>>20&15]+f[t>>16&15]+f[t>>28&15]+f[t>>24&15]+f[r>>4&15]+f[15&r]+f[r>>12&15]+f[r>>8&15]+f[r>>20&15]+f[r>>16&15]+f[r>>28&15]+f[r>>24&15]+f[e>>4&15]+f[15&e]+f[e>>12&15]+f[e>>8&15]+f[e>>20&15]+f[e>>16&15]+f[e>>28&15]+f[e>>24&15]+f[i>>4&15]+f[15&i]+f[i>>12&15]+f[i>>8&15]+f[i>>20&15]+f[i>>16&15]+f[i>>28&15]+f[i>>24&15]},r.prototype.toString=r.prototype.hex,r.prototype.digest=function(){this.finalize();var t=this.h0,r=this.h1,e=this.h2,i=this.h3;return[255&t,t>>8&255,t>>16&255,t>>24&255,255&r,r>>8&255,r>>16&255,r>>24&255,255&e,e>>8&255,e>>16&255,e>>24&255,255&i,i>>8&255,i>>16&255,i>>24&255]},r.prototype.array=r.prototype.digest,r.prototype.arrayBuffer=function(){this.finalize();var t=new ArrayBuffer(16),r=new Uint32Array(t);return r[0]=this.h0,r[1]=this.h1,r[2]=this.h2,r[3]=this.h3,t},r.prototype.buffer=r.prototype.arrayBuffer;var v=d();h?module.exports=v:(t.md5=v,s&&define(function(){return v}))}(this);\';\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarClientBundle_default_InlineClientBundleGenerator/2\', 2356);\nfunction $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$jdenticonJsInitializer(){\n  $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$jdenticonJsInitializer = emptyMethod;\n  jdenticonJs = new MaterialAvatarClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$md5JsInitializer(){\n  $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$md5JsInitializer = emptyMethod;\n  md5Js = new MaterialAvatarClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nvar jdenticonDebugJs, md5DebugJs;\nfunction MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2353, 1, {}, MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_4(){\n  return \'jdenticonDebugJs\';\n}\n;\n_.getText = function getText_3(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += \'/**\\n * Jdenticon 1.3.2\\n * http://jdenticon.com\\n *  \\n * Built: 2015-10-10T11:55:57.451Z\\n *\\n * Copyright (c) 2014-2015 Daniel Mester Pirttij\\xE4rvi\\n *\\n * This software is provided \\\'as-is\\\', without any express or implied\\n * warranty.  In no event will the authors be held liable for any damages\\n * arising from the use of this software.\\n * \\n * Permission is granted to anyone to use this software for any purpose,\\n * including commercial applications, and to alter it and redistribute it\\n * freely, subject to the following restrictions:\\n * \\n * 1. The origin of this software must not be misrepresented; you must not\\n *    claim that you wrote the original software. If you use this software\\n *    in a product, an acknowledgment in the product documentation would be\\n *    appreciated but is not required.\\n * \\n * 2. Altered source versions must be plainly marked as such, and must not be\\n *    misrepresented as being the original software.\\n * \\n * 3. This notice may not be removed or altered from any source distribution.\\n * \\n */\\n\\n/*jslint bitwise: true */\\n\\n(function (global, name, factory) {\\n    var jQuery = global["jQuery"],\\n        jdenticon = factory(global, jQuery);\\n\\n    // Node.js\\n    if (typeof module !== "undefined" && "exports" in module) {\\n        module["exports"] = jdenticon;\\n    }\\n    // RequireJS\\n    else if (typeof define === "function" && define["amd"]) {\\n        define([], function () { return jdenticon; });\\n    }\\n    // No module loader\\n    else {\\n        global[name] = jdenticon;\\n    }\\n})(this, "jdenticon", function (global, jQuery) {\\n    "use strict";\\n\\n\\n\\n    \\n    /**\\n     * Represents a point.\\n     * @private\\n     * @constructor\\n     */\\n    function Point(x, y) {\\n        this.x = x;\\n        this.y = y;\\n    };\\n    \\n    \\n    /**\\n     * Translates and rotates a point before being passed on to the canvas context. This was previously done by the canvas context itself, \\n     * but this caused a rendering issue in Chrome on sizes > 256 where the rotation transformation of inverted paths was not done properly.\\n     * @param {number} x The x-coordinate of the upper left corner of the transformed rectangle.\\n     * @param {number} y The y-coordinate of the upper left corner of the transformed rectangle.\\n     * @param {number} size The size of the transformed rectangle.\\n     * @param {number} rotation Rotation specified as 0 = 0 rad, 1 = 0.5\\u03C0 rad, 2 = \\u03C0 rad, 3 = 1.5\\u03C0 rad\\n     * @private\\n     * @constructor\\n     */\\n    function Transform(x, y, size, rotation) {\\n        this._x = x;\\n        this._y = y;\\n        this._size = size;\\n        this._rotation = rotation;\\n    }\\n    Transform.prototype = {\\n        /**\\n         * Transforms the specified point based on the translation and rotation specification for this Transform.\\n         * @param {number} x x-coordinate\\n         * @param {number} y y-coordinate\\n         * @param {number=} w The width of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\\n         * @param {number=} h The height of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\\n         */\\n        transformPoint: function (x, y, w, h) {\\n            var right = this._x + this._size,\\n                bottom = this._y + this._size;\\n            return this._rotation === 1 ? new Point(right - y - (h || 0), this._y + x) :\\n                   this._rotation === 2 ? new Point(right - x - (w || 0), bottom - y - (h || 0)) :\\n                   this._rotation === 3 ? new Point(this._x + y, bottom - x - (w || 0)) :\\n                   new Point(this._x + x, this._y + y);\\n        }\\n    };\\n    Transform.noTransform = new Transform(0, 0, 0, 0);\\n    \\n    \\n    \\n    /**\\n     * Provides helper functions for rendering common basic shapes.\\n     * @private\\n     * @constructor\\n     */\\n    function Graphics(renderer) {\\n        this._renderer = renderer;\\n        this._transform = Transform.noTransform;\\n    }\\n    Graphics.prototype = {\\n        /**\\n         * Adds a polygon to the underlying renderer.\\n         * @param {Array} points The points of the polygon clockwise on the format [ x0, y0, x1, y1, ..., xn, yn ]\\n         * @param {boolean=} invert Specifies if the polygon will be inverted.\\n         */\\n        addPolygon: function (points, invert) {\\n            var di = invert ? -2 : 2, \\n                transform = this._transform,\\n                transformedPoints = [],\\n                i;\\n            \\n            for (i = invert ? points.length - 2 : 0; i < points.length && i >= 0; i += di) {\\n                transformedPoints.push(transform.transformPoint(points[i], points[i + 1]));\\n            }\\n            \\n            this._renderer.addPolygon(transformedPoints);\\n        },\\n        \\n        /**\\n         * Adds a polygon to the underlying renderer.\\n         * Source: http://stackoverflow.com/a/2173084\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the entire ellipse.\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the entire ellipse.\\n         * @param {number} size The size of the ellipse.\\n         * @param {boolean=} invert Specifies if the ellipse will be inverted.\\n         */\\n        addCircle: function (x, y, size, invert) {\\n            var p = this._transform.transformPoint(x, y, size, size);\\n            this._renderer.addCircle(p, size, invert);\\n        },\\n\\n        /**\\n         * Adds a rectangle to the underlying renderer.\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle.\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle.\\n         * @param {number} w The width of the rectangle.\\n         * @param {number} h The height of the rectangle.\\n         * @param {boolean=} invert Specifies if the rectangle will be inverted.\\n         */\\n        addRectangle: function (x, y, w, h, invert) {\\n            this.addPolygon([\\n                x, y, \\n                x + w, y,\\n                x + w, y + h,\\n                x, y + h\\n            ], invert);\\n        },\\n\\n        /**\\n         * Adds a right triangle to the underlying renderer.\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the triangle.\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the triangle.\\n         * @param {number} w The width of the triangle.\\n         * @param {number} h The height of the triangle.\\n         * @param {number} r The rotation of the triangle (clockwise). 0 = right corner of the triangle in the lower left corner of the bounding rectangle.\\n         * @param {boolean=} invert Specifies if the triangle will be inverted.\\n         */\\n        addTriangle: function (x, y, w, h, r, invert) {\\n            var points = [\\n                x + w, y, \\n                x + w, y + h, \\n                x, y + h,\\n                x, y\\n            ];\\n            points.splice(((r || 0) % 4) * 2, 2);\\n            this.addPolygon(points, invert);\\n        },\\n\\n        /**\\n         * Adds a rhombus to the underlying renderer.\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the rhombus.\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the rhombus.\\n         * @param {number} w The width of the rhombus.\\n         * @param {number} h The height of the rhombus.\\n         * @param {boolean=} invert Specifies if the rhombus will be inverted.\\n         */\\n        addRhombus: function (x, y, w, h, invert) {\\n            this.addPolygon([\\n                x + w / 2, y,\\n                x + w, y + h / 2,\\n                x + w / 2, y + h,\\n                x, y + h / 2\\n            ], invert);\\n        }\\n    };\\n    \\n    \\n    \\n    \\n    var shapes = {\\n        center: [\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var k = cell * 0.42;\\n                g.addPolygon([\\n                    0, 0,\\n                    cell, 0,\\n                    cell, cell - k * 2,\\n                    cell - k, cell,\\n                    0, cell\\n                ]);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var w = 0 | (cell * 0.5), \\n                    h = 0 | (cell * 0.8);\\n                g.addTriangle(cell - w, 0, w, h, 2);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) { \\n                var s = 0 | (cell / 3);\\n                g.addRectangle(s, s, cell - s, cell - s);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) { \\n                var inner = 0 | (cell * 0.1),\\n                    outer = 0 | (cell * 0.25);\\n                g.addRectangle(outer, outer, cell - inner - outer, cell - inner - outer);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) { \\n                var m = 0 | (cell * 0.15),\\n                    s = 0 | (cell * 0.5);\\n                g.addCircle(cell - s - m, cell - s - m, s);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var inner = cell * 0.1,\\n                    outer = inner * 4;\\n\\n                g.addRectangle(0, 0, cell, cell);\\n                g.addPolygon([\\n                    outer, outer,\\n                    cell - inner, outer,\\n                    outer + (cell - outer - inner) / 2, cell - inner\\n                ], true);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addPolygon([\\n                    0, 0,\\n                    cell, 0,\\n                    cell, cell * 0.7,\\n                    cell * 0.4, cell * 0.4,\\n                    cell * 0.7, cell,\\n                    0, cell\\n                ]);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 3);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addRectangle(0, 0, cell, cell / 2);\\n                g.addRectangle(0, cell / 2, cell / 2, cell / 2);\\n                g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 1);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var inner = 0 | (cell * 0.14),\\n                    outer = 0 | (cell * 0.35);\\n                g.addRectangle(0, 0, cell, cell);\\n                g.addRectangle(outer, outer, cell - outer - inner, cell - outer - inner, true);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var inner = cell * 0.12,\\n                    outer = inner * 3;\\n\\n                g.addRectangle(0, 0, cell, cell);\\n                g.addCircle(outer, outer, cell - inner - outer, true);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 3);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var m = cell * 0.25;\\n                g.addRectangle(0, 0, cell, cell);\\n                g.addRhombus(m, m, cell - m, cell - m, true);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var m = cell * 0.4, s = cell * 1.2;\\n                if (!index) {\\n                    g.addCircle(m, m, s);\\n                }\\n            }\\n        ],\\n        \\n        outer: [\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addTriangle(0, 0, cell, cell, 0);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addTriangle(0, cell / 2, cell, cell / 2, 0);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addRhombus(0, 0, cell, cell);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var m = cell / 6;\\n                g.addCircle(m, m, cell - 2 * m);\\n            }\\n        ]\\n    };\\n\\n    \\n    \\n    \\n    function decToHex(v) {\\n        v |= 0; // Ensure integer value\\n        return v < 0 ? "00" :\\n            v < 16 ? "0" + v.toString(16) :\\n            v < 256 ? v.toString(16) :\\n            "ff";\\n    }\\n    \\n    function hueToRgb(m1, m2, h) {\\n        h = h < 0 ? h + 6 : h > 6 ? h - 6 : h;\\n        return decToHex(255 * (\\n            h < 1 ? m1 + (m2 - m1) * h :\\n            h < 3 ? m2 :\\n            h < 4 ? m1 + (m2 - m1) * (4 - h) :\\n            m1));\\n    }\\n        \\n    /**\\n     * Functions for converting colors to hex-rgb representations.\\n     * @private\\n     */\\n    var color = {\\n        /**\\n         * @param {number} r Red channel [0, 255]\\n         * @param {number} g Green channel [0, 255]\\n         * @param {number} b Blue channel [0, 255]\\n         */\\n        rgb: function (r, g, b) {\\n            return "#" + decToHex(r) + decToHex(g) + decToHex(b);\\n        },\\n        /**\\n         * @param h Hue [0, 1]\\n         * @param s Saturation [0, 1]\\n         * @param l Lightness [0, 1]\\n         */\\n        hsl: function (h, s, l) {\\n            // Based on http://www.w3.org/TR/2011/REC-css3-color-20110607/#hsl-color\\n            if (s == 0) {\\n                var partialHex = decToHex(l * 255);\\n                return "#" + partialHex + partialHex + partialHex;\\n            }\\n            else {\\n                var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s,\\n                    m1 = l * 2 - m2;\\n                return "#" +\\n                    hueToRgb(m1, m2, h * 6 + 2) +\\n                    hueToRgb(m1, m2, h * 6) +\\n                    hueToRgb(m1, m2, h * 6 - 2);\\n            }\\n        },\\n        // This function will correct the lightness for the "dark" hues\\n        correctedHsl: function (h, s, l) {\\n            // The corrector specifies the perceived middle lightnesses for each hue\\n            var correctors = [ 0.55, 0.5, 0.5, 0.46, 0.6, 0.55, 0.55 ],\\n                corrector = correctors[(h * 6 + 0.5) | 0];\\n            \\n            // Adjust the input lightness relative to the corrector\\n            l = l < 0.5 ? l * corrector * 2 : corrector + (l - 0.5) * (1 - corrector) * 2;\\n            \\n            return color.hsl(h, s, l);\\n        }\\n    };\\n\\n    \\n    \\n    \\n    /**\\n     * Gets a set of identicon color candidates for a specified hue and config.\\n     */\\n    function colorTheme(hue, config) {\\n        return [\\n            // Dark gray\\n            color.hsl(0, 0, config.grayscaleLightness(0)),\\n            // Mid color\\n            color.correctedHsl(hue, config.saturation, config.colorLightness(0.5)),\\n            // Light gray\\n            color.hsl(0, 0, config.grayscaleLightness(1)),\\n            // Light color\\n            color.correctedHsl(hue, config.saturation, config.colorLightness(1)),\\n            // Dark color\\n            color.correctedHsl(hue, config.saturation, config.colorLightness(0))\\n        ];\\n    }\\n\\n    \\n    \\n         \\n    /**\\n     * Draws an identicon to a specified renderer.\\n     */\\n    function iconGenerator(renderer, hash, x, y, size, padding, config) {\\n        var undefined;\\n        \\n        // Calculate padding\\n        padding = (size * (padding === undefined ? 0.08 : padding)) | 0;\\n        size -= padding * 2;\\n        \\n        // Sizes smaller than 30 px are not supported. If really needed, apply a scaling transformation \\n        // to the context before passing it to this function.\\n        if (size < 30) {\\n            throw new Error("Jdenticon cannot render identicons smaller than 30 pixels.");\\n        }\\n        if (!/^[0-9a-f]{11,}$/i.test(hash)) {\\n            throw new Error("Invalid hash passed to Jdenticon.");\\n        }\\n        \\n        var graphics = new Graphics(renderer);\\n        \\n        // Calculate cell size and ensure it is an integer\\n        var cell = 0 | (size / 4);\\n        \\n        // Since the cell size is integer based, the actual icon will be slightly smaller than specified => center icon\\n        x += 0 | (padding + size / 2 - cell * 2);\\n        y += 0 | (padd\';\n  builder.string += \'ing + size / 2 - cell * 2);\\n\\n        function renderShape(colorIndex, shapes, index, rotationIndex, positions) {\\n            var r = rotationIndex ? parseInt(hash.charAt(rotationIndex), 16) : 0,\\n                shape = shapes[parseInt(hash.charAt(index), 16) % shapes.length],\\n                i;\\n            \\n            renderer.beginShape(availableColors[selectedColorIndexes[colorIndex]]);\\n            \\n            for (i = 0; i < positions.length; i++) {\\n                graphics._transform = new Transform(x + positions[i][0] * cell, y + positions[i][1] * cell, cell, r++ % 4);\\n                shape(graphics, cell, i);\\n            }\\n            \\n            renderer.endShape();\\n        }\\n\\n        // AVAILABLE COLORS\\n        var hue = parseInt(hash.substr(-7), 16) / 0xfffffff,\\n        \\n            // Available colors for this icon\\n            availableColors = colorTheme(hue, config),\\n\\n            // The index of the selected colors\\n            selectedColorIndexes = [],\\n            index;\\n\\n        function isDuplicate(values) {\\n            if (values.indexOf(index) >= 0) {\\n                for (var i = 0; i < values.length; i++) {\\n                    if (selectedColorIndexes.indexOf(values[i]) >= 0) {\\n                        return true;\\n                    }\\n                }\\n            }\\n        }\\n\\n        for (var i = 0; i < 3; i++) {\\n            index = parseInt(hash.charAt(8 + i), 16) % availableColors.length;\\n            if (isDuplicate([0, 4]) || // Disallow dark gray and dark color combo\\n                isDuplicate([2, 3])) { // Disallow light gray and light color combo\\n                index = 1;\\n            }\\n            selectedColorIndexes.push(index);\\n        }\\n\\n        // ACTUAL RENDERING\\n        // Sides\\n        renderShape(0, shapes.outer, 2, 3, [[1, 0], [2, 0], [2, 3], [1, 3], [0, 1], [3, 1], [3, 2], [0, 2]]);\\n        // Corners\\n        renderShape(1, shapes.outer, 4, 5, [[0, 0], [3, 0], [3, 3], [0, 3]]);\\n        // Center\\n        renderShape(2, shapes.center, 1, null, [[1, 1], [2, 1], [2, 2], [1, 2]]);\\n    };\\n\\n    \\n    \\n    /**\\n     * Represents an SVG path element.\\n     * @private\\n     * @constructor\\n     */\\n    function SvgPath() {\\n        /**\\n         * This property holds the data string (path.d) of the SVG path.\\n         */\\n        this.dataString = "";\\n    }\\n    SvgPath.prototype = {\\n        /**\\n         * Adds a polygon with the current fill color to the SVG path.\\n         * @param points An array of Point objects.\\n         */\\n        addPolygon: function (points) {\\n            var dataString = "M" + points[0].x + " " + points[0].y;\\n            for (var i = 1; i < points.length; i++) {\\n                dataString += "L" + points[i].x + " " + points[i].y;\\n            }\\n            this.dataString += dataString + "Z";\\n        },\\n        /**\\n         * Adds a circle with the current fill color to the SVG path.\\n         * @param {Point} point The upper left corner of the circle bounding box.\\n         * @param {number} diameter The diameter of the circle.\\n         * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\\n         */\\n        addCircle: function (point, diameter, counterClockwise) {\\n            var sweepFlag = counterClockwise ? 0 : 1,\\n                radius = diameter / 2;\\n            this.dataString += \\n                "M" + (point.x) + " " + (point.y + radius) +\\n                "a" + radius + "," + radius + " 0 1," + sweepFlag + " " + diameter + ",0" + \\n                "a" + radius + "," + radius + " 0 1," + sweepFlag + " " + (-diameter) + ",0";\\n        }\\n    };\\n    \\n    \\n    \\n    /**\\n     * Renderer producing SVG output.\\n     * @private\\n     * @constructor\\n     */\\n    function SvgRenderer(width, height) {\\n        this._pathsByColor = { };\\n        this._size = { w: width, h: height };\\n    }\\n    SvgRenderer.prototype = {\\n        /**\\n         * Marks the beginning of a new shape of the specified color. Should be ended with a call to endShape.\\n         * @param {string} color Fill color on format #xxxxxx.\\n         */\\n        beginShape: function (color) {\\n            this._path = this._pathsByColor[color] || (this._pathsByColor[color] = new SvgPath());\\n        },\\n        /**\\n         * Marks the end of the currently drawn shape.\\n         */\\n        endShape: function () { },\\n        /**\\n         * Adds a polygon with the current fill color to the SVG.\\n         * @param points An array of Point objects.\\n         */\\n        addPolygon: function (points) {\\n            this._path.addPolygon(points);\\n        },\\n        /**\\n         * Adds a circle with the current fill color to the SVG.\\n         * @param {Point} point The upper left corner of the circle bounding box.\\n         * @param {number} diameter The diameter of the circle.\\n         * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\\n         */\\n        addCircle: function (point, diameter, counterClockwise) {\\n            this._path.addCircle(point, diameter, counterClockwise);\\n        },\\n        /**\\n         * Gets the rendered image as an SVG string.\\n         * @param {boolean=} fragment If true, the container svg element is not included in the result.\\n         */\\n        toSvg: function (fragment) {\\n            var svg = fragment ? \\\'\\\' : \\n                \\\'<svg xmlns="http://www.w3.org/2000/svg" width="\\\' + \\n                this._size.w + \\\'" height="\\\' + this._size.h + \\\'" viewBox="0 0 \\\' + \\n                this._size.w + \\\' \\\' + this._size.h + \\\'" preserveAspectRatio="xMidYMid meet">\\\';\\n            \\n            for (var color in this._pathsByColor) {\\n                svg += \\\'<path fill="\\\' + color + \\\'" d="\\\' + this._pathsByColor[color].dataString + \\\'"/>\\\';\\n            }\\n\\n            return fragment ? svg : \\n                svg + \\\'<\\/svg>\\\';\\n        }\\n    };\\n    \\n    \\n    \\n    /**\\n     * Renderer redirecting drawing commands to a canvas context.\\n     * @private\\n     * @constructor\\n     */\\n    function CanvasRenderer(ctx, width, height) {\\n        this._ctx = ctx;\\n        ctx.clearRect(0, 0, width, height);\\n    }\\n    CanvasRenderer.prototype = {\\n        /**\\n         * Marks the beginning of a new shape of the specified color. Should be ended with a call to endShape.\\n         * @param {string} color Fill color on format #xxxxxx.\\n         */\\n        beginShape: function (color) {\\n            this._ctx.fillStyle = color;\\n            this._ctx.beginPath();\\n        },\\n        /**\\n         * Marks the end of the currently drawn shape. This causes the queued paths to be rendered on the canvas.\\n         */\\n        endShape: function () {\\n            this._ctx.fill();\\n        },\\n        /**\\n         * Adds a polygon to the rendering queue.\\n         * @param points An array of Point objects.\\n         */\\n        addPolygon: function (points) {\\n            var ctx = this._ctx, i;\\n            ctx.moveTo(points[0].x, points[0].y);\\n            for (i = 1; i < points.length; i++) {\\n                ctx.lineTo(points[i].x, points[i].y);\\n            }\\n            ctx.closePath();\\n        },\\n        /**\\n         * Adds a circle to the rendering queue.\\n         * @param {Point} point The upper left corner of the circle bounding box.\\n         * @param {number} diameter The diameter of the circle.\\n         * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\\n         */\\n        addCircle: function (point, diameter, counterClockwise) {\\n            var ctx = this._ctx,\\n                radius = diameter / 2;\\n            ctx.arc(point.x + radius, point.y + radius, radius, 0, Math.PI * 2, counterClockwise);\\n            ctx.closePath();\\n        }\\n    };\\n    \\n    \\n    \\n         \\n    \\n    \\n    var /** @const */\\n        HASH_ATTRIBUTE = "data-jdenticon-hash",\\n        supportsQuerySelectorAll = "document" in global && "querySelectorAll" in document;\\n    \\n    /**\\n     * Gets the normalized current Jdenticon color configuration. Missing fields have default values.\\n     */\\n    function getCurrentConfig() {\\n        var configObject = jdenticon["config"] || global["jdenticon_config"] || { },\\n            lightnessConfig = configObject["lightness"] || { },\\n            saturation = configObject["saturation"];\\n        \\n        /**\\n         * Creates a lightness range.\\n         */\\n        function lightness(configName, defaultMin, defaultMax) {\\n            var range = lightnessConfig[configName] instanceof Array ? lightnessConfig[configName] : [defaultMin, defaultMax];\\n            \\n            /**\\n             * Gets a lightness relative the specified value in the specified lightness range.\\n             */\\n            return function (value) {\\n                value = range[0] + value * (range[1] - range[0]);\\n                return value < 0 ? 0 : value > 1 ? 1 : value;\\n            };\\n        }\\n            \\n        return {\\n            saturation: typeof saturation == "number" ? saturation : 0.5,\\n            colorLightness: lightness("color", 0.4, 0.8),\\n            grayscaleLightness: lightness("grayscale", 0.3, 0.9)\\n        }\\n    }\\n    \\n    /**\\n     * Updates the identicon in the specified canvas or svg elements.\\n     * @param {string=} hash Optional hash to be rendered. If not specified, the hash specified by the data-jdenticon-hash is used.\\n     * @param {number=} padding Optional padding in percents. Extra padding might be added to center the rendered identicon.\\n     */\\n    function update(el, hash, padding) {\\n        if (typeof(el) === "string") {\\n            if (supportsQuerySelectorAll) {\\n                var elements = document.querySelectorAll(el);\\n                for (var i = 0; i < elements.length; i++) {\\n                    update(elements[i], hash, padding);\\n                }\\n            }\\n            return;\\n        }\\n        if (!el || !el["tagName"]) {\\n            // No element found\\n            return;\\n        }\\n        hash = hash || el.getAttribute(HASH_ATTRIBUTE);\\n        if (!hash) {\\n            // No hash specified\\n            return;\\n        }\\n        \\n        var isSvg = el["tagName"].toLowerCase() == "svg",\\n            isCanvas = el["tagName"].toLowerCase() == "canvas";\\n        \\n        // Ensure we have a supported element\\n        if (!isSvg && !(isCanvas && "getContext" in el)) {\\n            return;\\n        }\\n        \\n        var width = Number(el.getAttribute("width")) || el.clientWidth || 0,\\n            height = Number(el.getAttribute("height")) || el.clientHeight || 0,\\n            renderer = isSvg ? new SvgRenderer(width, height) : new CanvasRenderer(el.getContext("2d"), width, height),\\n            size = Math.min(width, height);\\n        \\n        // Draw icon\\n        iconGenerator(renderer, hash, 0, 0, size, padding, getCurrentConfig());\\n        \\n        // SVG needs postprocessing\\n        if (isSvg) {\\n            // Parse svg to a temporary span element.\\n            // Simply using innerHTML does unfortunately not work on IE.\\n            var wrapper = document.createElement("span");\\n            wrapper.innerHTML = renderer.toSvg(false);\\n            \\n            // Then replace the content of the target element with the parsed svg.\\n            while (el.firstChild) {\\n                el.removeChild(el.firstChild);\\n            }\\n            var newNodes = wrapper.firstChild.childNodes;\\n            while (newNodes.length) {\\n                el.appendChild(newNodes[0]);\\n            }\\n            \\n            // Set viewBox attribute to ensure the svg scales nicely.\\n            el.setAttribute("viewBox", "0 0 " + width + " " + height);\\n        }\\n    }\\n    \\n    /**\\n     * Draws an identicon to a context.\\n     */\\n    function drawIcon(ctx, hash, size) {\\n        if (!ctx) {\\n            throw new Error("No canvas specified.");\\n        }\\n        \\n        var renderer = new CanvasRenderer(ctx, size, size);\\n        iconGenerator(renderer, hash, 0, 0, size, 0, getCurrentConfig());\\n    }\\n    \\n    /**\\n     * Draws an identicon to a context.\\n     * @param {number=} padding Optional padding in percents. Extra padding might be added to center the rendered identicon.\\n     */\\n    function toSvg(hash, size, padding) {\\n        var renderer = new SvgRenderer(size, size);\\n        iconGenerator(renderer, hash, 0, 0, size, padding, getCurrentConfig());\\n        return renderer.toSvg();\\n    }\\n\\n    /**\\n     * Updates all canvas elements with the data-jdenticon-hash attribute.\\n     */\\n    function jdenticon() {\\n        if (supportsQuerySelectorAll) {\\n            update("svg[" + HASH_ATTRIBUTE + "],canvas[" + HASH_ATTRIBUTE + "]");\\n        }\\n    }\\n    \\n    // Public API\\n    jdenticon["drawIcon"] = drawIcon;\\n    jdenticon["toSvg"] = toSvg;\\n    jdenticon["update"] = update;\\n    jdenticon["version"] = "1.3.2";\\n    \\n    // Basic jQuery plugin\\n    if (jQuery) {\\n        jQuery["fn"]["jdenticon"] = function (hash, padding) {\\n            this["each"](function (index, el) {\\n                update(el, hash, padding);\\n            });\\n            return this;\\n        };\\n    }\\n    \\n    // Schedule to render all identicons on the page once it has been loaded.\\n    if (typeof setTimeout === "function") {\\n        setTimeout(jdenticon, 0);\\n    }\\n    \\n    return jdenticon;\\n\\n});\';\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarDebugClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator/1\', 2353);\nfunction MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(2354, 1, {}, MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_5(){\n  return \'md5DebugJs\';\n}\n;\n_.getText = function getText_4(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += "/**\\n * [js-md5]{@link https://github.com/emn178/js-md5}\\n *\\n * @namespace md5\\n * @version 0.4.0\\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\\n * @copyright Chen, Yi-Cyuan 2014-2016\\n * @license MIT\\n */\\n(function (root) {\\n    \'use strict\';\\n\\n    var NODE_JS = typeof process == \'object\' && process.versions && process.versions.node;\\n    if (NODE_JS) {\\n        root = global;\\n    }\\n    var COMMON_JS = !root.JS_MD5_TEST && typeof module == \'object\' && module.exports;\\n    var AMD = typeof define == \'function\' && define.amd;\\n    var ARRAY_BUFFER = !root.JS_MD5_TEST && typeof ArrayBuffer != \'undefined\';\\n    var HEX_CHARS = \'0123456789abcdef\'.split(\'\');\\n    var EXTRA = [128, 32768, 8388608, -2147483648];\\n    var SHIFT = [0, 8, 16, 24];\\n    var OUTPUT_TYPES = [\'hex\', \'array\', \'digest\', \'buffer\', \'arrayBuffer\'];\\n\\n    var blocks = [], buffer8;\\n    if (ARRAY_BUFFER) {\\n        var buffer = new ArrayBuffer(68);\\n        buffer8 = new Uint8Array(buffer);\\n        blocks = new Uint32Array(buffer);\\n    }\\n\\n    /**\\n     * @method hex\\n     * @memberof md5\\n     * @description Output hash as hex string\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n     * @returns {String} Hex string\\n     * @example\\n     * md5.hex(\'The quick brown fox jumps over the lazy dog\');\\n     * // equal to\\n     * md5(\'The quick brown fox jumps over the lazy dog\');\\n     */\\n    /**\\n     * @method digest\\n     * @memberof md5\\n     * @description Output hash as bytes array\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n     * @returns {Array} Bytes array\\n     * @example\\n     * md5.digest(\'The quick brown fox jumps over the lazy dog\');\\n     */\\n    /**\\n     * @method array\\n     * @memberof md5\\n     * @description Output hash as bytes array\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n     * @returns {Array} Bytes array\\n     * @example\\n     * md5.array(\'The quick brown fox jumps over the lazy dog\');\\n     */\\n    /**\\n     * @method arrayBuffer\\n     * @memberof md5\\n     * @description Output hash as ArrayBuffer\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n     * @returns {ArrayBuffer} ArrayBuffer\\n     * @example\\n     * md5.arrayBuffer(\'The quick brown fox jumps over the lazy dog\');\\n     */\\n    /**\\n     * @method buffer\\n     * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\\n     * @memberof md5\\n     * @description Output hash as ArrayBuffer\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n     * @returns {ArrayBuffer} ArrayBuffer\\n     * @example\\n     * md5.buffer(\'The quick brown fox jumps over the lazy dog\');\\n     */\\n    var createOutputMethod = function (outputType) {\\n        return function (message) {\\n            return new Md5(true).update(message)[outputType]();\\n        };\\n    };\\n\\n    /**\\n     * @method create\\n     * @memberof md5\\n     * @description Create Md5 object\\n     * @returns {Md5} Md5 object.\\n     * @example\\n     * var hash = md5.create();\\n     */\\n    /**\\n     * @method update\\n     * @memberof md5\\n     * @description Create and update Md5 object\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n     * @returns {Md5} Md5 object.\\n     * @example\\n     * var hash = md5.update(\'The quick brown fox jumps over the lazy dog\');\\n     * // equal to\\n     * var hash = md5.create();\\n     * hash.update(\'The quick brown fox jumps over the lazy dog\');\\n     */\\n    var createMethod = function () {\\n        var method = createOutputMethod(\'hex\');\\n        if (NODE_JS) {\\n            method = nodeWrap(method);\\n        }\\n        method.create = function () {\\n            return new Md5();\\n        };\\n        method.update = function (message) {\\n            return method.create().update(message);\\n        };\\n        for (var i = 0;i < OUTPUT_TYPES.length;++i) {\\n            var type = OUTPUT_TYPES[i];\\n            method[type] = createOutputMethod(type);\\n        }\\n        return method;\\n    };\\n\\n    var nodeWrap = function (method) {\\n        var crypto, Buffer;\\n        try {\\n            if (root.JS_MD5_TEST) {\\n                throw \'JS_MD5_TEST\';\\n            }\\n            crypto = require(\'crypto\');\\n            Buffer = require(\'buffer\').Buffer;\\n        } catch (e) {\\n            console.log(e);\\n            return method;\\n        }\\n        var nodeMethod = function (message) {\\n            if (typeof message == \'string\') {\\n                return crypto.createHash(\'md5\').update(message, \'utf8\').digest(\'hex\');\\n            } else if (message.constructor == ArrayBuffer) {\\n                message = new Uint8Array(message);\\n            } else if (message.length === undefined) {\\n                return method(message);\\n            }\\n            return crypto.createHash(\'md5\').update(new Buffer(message)).digest(\'hex\');\\n        };\\n        return nodeMethod;\\n    };\\n\\n    /**\\n     * Md5 class\\n     * @class Md5\\n     * @description This is internal class.\\n     * @see {@link md5.create}\\n     */\\n    function Md5(sharedMemory) {\\n        if (sharedMemory) {\\n            blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\n                blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\n                    blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\n                        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\n            this.blocks = blocks;\\n            this.buffer8 = buffer8;\\n        } else {\\n            if (ARRAY_BUFFER) {\\n                var buffer = new ArrayBuffer(68);\\n                this.buffer8 = new Uint8Array(buffer);\\n                this.blocks = new Uint32Array(buffer);\\n            } else {\\n                this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n            }\\n        }\\n        this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = 0;\\n        this.finalized = this.hashed = false;\\n        this.first = true;\\n    }\\n\\n    /**\\n     * @method update\\n     * @memberof Md5\\n     * @instance\\n     * @description Update hash\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n     * @returns {Md5} Md5 object.\\n     * @see {@link md5.update}\\n     */\\n    Md5.prototype.update = function (message) {\\n        if (this.finalized) {\\n            return;\\n        }\\n        var notString = typeof(message) != \'string\';\\n        if (notString && message.constructor == root.ArrayBuffer) {\\n            message = new Uint8Array(message);\\n        }\\n        var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\\n        var buffer8 = this.buffer8;\\n\\n        while (index < length) {\\n            if (this.hashed) {\\n                this.hashed = false;\\n                blocks[0] = blocks[16];\\n                blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\n                    blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\n                        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\n                            blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\n            }\\n\\n            if (notString) {\\n                if (ARRAY_BUFFER) {\\n                    for (i = this.start;index < length && i < 64; ++index) {\\n                        buffer8[i++] = message[index];\\n                    }\\n                } else {\\n                    for (i = this.start;index < length && i < 64; ++index) {\\n                        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\\n                    }\\n                }\\n            } else {\\n                if (ARRAY_BUFFER) {\\n                    for (i = this.start;index < length && i < 64; ++index) {\\n                        code = message.charCodeAt(index);\\n                        if (code < 0x80) {\\n                            buffer8[i++] = code;\\n                        } else if (code < 0x800) {\\n                            buffer8[i++] = 0xc0 | (code >> 6);\\n                            buffer8[i++] = 0x80 | (code & 0x3f);\\n                        } else if (code < 0xd800 || code >= 0xe000) {\\n                            buffer8[i++] = 0xe0 | (code >> 12);\\n                            buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\\n                            buffer8[i++] = 0x80 | (code & 0x3f);\\n                        } else {\\n                            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\\n                            buffer8[i++] = 0xf0 | (code >> 18);\\n                            buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\\n                            buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\\n                            buffer8[i++] = 0x80 | (code & 0x3f);\\n                        }\\n                    }\\n                } else {\\n                    for (i = this.start;index < length && i < 64; ++index) {\\n                        code = message.charCodeAt(index);\\n                        if (code < 0x80) {\\n                            blocks[i >> 2] |= code << SHIFT[i++ & 3];\\n                        } else if (code < 0x800) {\\n                            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\\n                            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n                        } else if (code < 0xd800 || code >= 0xe000) {\\n                            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\\n                            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\n                            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n                        } else {\\n                            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\\n                            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\\n                            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\\n                            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\n                            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n                        }\\n                    }\\n                }\\n            }\\n            this.lastByteIndex = i;\\n            this.bytes += i - this.start;\\n            if (i >= 64) {\\n                this.start = i - 64;\\n                this.hash();\\n                this.hashed = true;\\n            } else {\\n                this.start = i;\\n            }\\n        }\\n        return this;\\n    };\\n\\n    Md5.prototype.finalize = function () {\\n        if (this.finalized) {\\n            return;\\n        }\\n        this.finalized = true;\\n        var blocks = this.blocks, i = this.lastByteIndex;\\n        blocks[i >> 2] |= EXTRA[i & 3];\\n        if (i >= 56) {\\n            if (!this.hashed) {\\n                this.hash();\\n            }\\n            blocks[0] = blocks[16];\\n            blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\n                blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\n                    blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\n                        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\n        }\\n        blocks[14] = this.bytes << 3;\\n        this.hash();\\n    };\\n\\n    Md5.prototype.hash = function () {\\n        var a, b, c, d, bc, da, blocks = this.blocks;\\n\\n        if (this.first) {\\n            a = blocks[0] - 680876937;\\n            a = (a << 7 | a >>> 25) - 271733879 << 0;\\n            d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\\n            d = (d << 12 | d >>> 20) + a << 0;\\n            c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\\n            c = (c << 17 | c >>> 15) + d << 0;\\n            b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\\n            b = (b << 22 | b >>> 10) + c << 0;\\n        } else {\\n            a = this.h0;\\n            b = this.h1;\\n            c = this.h2;\\n            d = this.h3;\\n            a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\\n            a = (a << 7 | a >>> 25) + b << 0;\\n            d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\\n            d = (d << 12 | d >>> 20) + a << 0;\\n            c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\\n            c = (c << 17 | c >>> 15) + d << 0;\\n            b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\\n            b = (b << 22 | b >>> 10) + c << 0;\\n        }\\n\\n        a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\\n        a = (a << 7 | a >>> 25) + b << 0;\\n        d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\\n        d = (d << 12 | d >>> 20) + a << 0;\\n        c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\\n        c = (c << 17 | c >>> 15) + d << 0;\\n        b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\\n        b = (b << 22 | b >>> 10) + c << 0;\\n        a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\\n        a = (a << 7 | a >>> 25) + b << 0;\\n        d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\\n        d = (d << 12 | d >>> 20) + a << 0;\\n        c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\\n        c = (c << 17 | c >>> 15) + d << 0;\\n        b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\\n        b = (b << 22 | b >>> 10) + c << 0;\\n        a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\\n        a = (a << 7 | a >>> 25) + b << 0;\\n        d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\\n        d = (d << 12 | d >>> 20) + a << 0;\\n        c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\\n        c = (c << 17 | c >>> 15) + d << 0;\\n        b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\\n        b = (b << 22 | b >>> 10) + c << 0;\\n        a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\\n        a = (a << 5 | a >>> 27) + b << 0;\\n        d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\\n        d = (d << 9 | d >>> 23) + a << 0;\\n        c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\\n        c = (c << 14 | c >>> 18) + d << 0;\\n        b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\\n        b = (b << 20 | b >>> 12) + c << 0;\\n        a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\\n        a = (a << 5 | a >>> 27) + b << 0;\\n        d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\\n        d = (d << 9 | d >>> 23) + a << 0;\\n        c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\\n        c = (c << 14 | c >>> 18) + d << 0;\\n        b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\\n        b = (b << 20 | b >>> 12) + c << 0;\\n        a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\\n        a = (a << 5 | a >>> 27) + b << 0;\\n        d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\\n        d = (d << 9 | d >>> 23) + a << 0;\\n        c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\\n        c = (c << 14 | c >>> 18) + d << 0;\\n        b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\\n        b = (b << 20 | b >>> 12) + c << 0;\\n        a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\\n        a = (a << 5 | a >>> 27) + b << 0;\\n        d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\\n        d = (d << 9 | d >>> 23) + a << 0;\\n        c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\\n        c = (c << 14 | c >>> 18) + d << 0;\\n        b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\\n        b = (b << 20 | b >>> 12) + c << 0;\\n        bc = b ^ c;\\n        a += (bc ^ d) + blocks[5] - 378558;\\n        a = (a << 4 | a >>> 28) + b << 0;\\n        d += (bc ^ a) + blocks[8] - 2022574463;\\n        d = (d << 11 | d >>> 21) + a << 0;\\n        da = d ^ a;\\n        c += (da ^ b) + blocks[11] + 1839030562;\\n        c = (c << 16 | c >>> 16) + d << 0;\\n        b += (da ^ c) + blocks[14] - 35309556;\\n        b = (b << 23 | b >>> 9) + c << 0;\\n        bc = b ^ c;\\n        a += (bc ^ d) + blocks[1] - 1530992060;\\n        a = (a << 4 | a >>> 28) + b << 0;\\n        d += (bc ^ a) + blocks[4] + 1272893353;\\n        d = (d << 11 | d >>> 21) + a << 0;\\n        da = d ^ a;\\n        c += (da ^ b) + blocks[7] - 155497632;\\n        c = (c << 16 | c >>> 16) + d << 0;\\n        b += (da ^ c) + blocks[10] - 1094730640;\\n        b = (b << 23 | b >>> 9) + c << 0;\\n        bc = b ^ c;\\n        a += (bc ^ d) + blocks[13] + 681279174;\\n        a = (a << 4 | a >>> 28) + b << 0;\\n        d += (bc ^ a) + blocks[0] - 358537222;\\n        d = (d << 11 | d >>> 21) + a << 0;\\n        da = d ^ a;\\n        c += (da ^ b) + blocks[3] - 722521979;\\n        c = (c << 16 | c >>> 16) + d << 0;\\n        b += (da ^ c) + blocks[6] + 76029189;\\n        b = (b << 23 | b >>> 9) + c << 0;\\n        bc = b ^ c;\\n        a += (bc ^ d) + blocks[9] - 640364487;\\n        a = (a << 4 | a >>> 28) + b << 0;\\n       ";\n  builder.string += " d += (bc ^ a) + blocks[12] - 421815835;\\n        d = (d << 11 | d >>> 21) + a << 0;\\n        da = d ^ a;\\n        c += (da ^ b) + blocks[15] + 530742520;\\n        c = (c << 16 | c >>> 16) + d << 0;\\n        b += (da ^ c) + blocks[2] - 995338651;\\n        b = (b << 23 | b >>> 9) + c << 0;\\n        a += (c ^ (b | ~d)) + blocks[0] - 198630844;\\n        a = (a << 6 | a >>> 26) + b << 0;\\n        d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\\n        d = (d << 10 | d >>> 22) + a << 0;\\n        c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\\n        c = (c << 15 | c >>> 17) + d << 0;\\n        b += (d ^ (c | ~a)) + blocks[5] - 57434055;\\n        b = (b << 21 | b >>> 11) + c << 0;\\n        a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\\n        a = (a << 6 | a >>> 26) + b << 0;\\n        d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\\n        d = (d << 10 | d >>> 22) + a << 0;\\n        c += (a ^ (d | ~b)) + blocks[10] - 1051523;\\n        c = (c << 15 | c >>> 17) + d << 0;\\n        b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\\n        b = (b << 21 | b >>> 11) + c << 0;\\n        a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\\n        a = (a << 6 | a >>> 26) + b << 0;\\n        d += (b ^ (a | ~c)) + blocks[15] - 30611744;\\n        d = (d << 10 | d >>> 22) + a << 0;\\n        c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\\n        c = (c << 15 | c >>> 17) + d << 0;\\n        b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\\n        b = (b << 21 | b >>> 11) + c << 0;\\n        a += (c ^ (b | ~d)) + blocks[4] - 145523070;\\n        a = (a << 6 | a >>> 26) + b << 0;\\n        d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\\n        d = (d << 10 | d >>> 22) + a << 0;\\n        c += (a ^ (d | ~b)) + blocks[2] + 718787259;\\n        c = (c << 15 | c >>> 17) + d << 0;\\n        b += (d ^ (c | ~a)) + blocks[9] - 343485551;\\n        b = (b << 21 | b >>> 11) + c << 0;\\n\\n        if (this.first) {\\n            this.h0 = a + 1732584193 << 0;\\n            this.h1 = b - 271733879 << 0;\\n            this.h2 = c - 1732584194 << 0;\\n            this.h3 = d + 271733878 << 0;\\n            this.first = false;\\n        } else {\\n            this.h0 = this.h0 + a << 0;\\n            this.h1 = this.h1 + b << 0;\\n            this.h2 = this.h2 + c << 0;\\n            this.h3 = this.h3 + d << 0;\\n        }\\n    };\\n\\n    /**\\n     * @method hex\\n     * @memberof Md5\\n     * @instance\\n     * @description Output hash as hex string\\n     * @returns {String} Hex string\\n     * @see {@link md5.hex}\\n     * @example\\n     * hash.hex();\\n     */\\n    Md5.prototype.hex = function () {\\n        this.finalize();\\n\\n        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\\n\\n        return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\\n            HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\\n            HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\\n            HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\\n            HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\\n            HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\\n            HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\\n            HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\\n            HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\\n            HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\\n            HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\\n            HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\\n            HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\\n            HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\\n            HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\\n            HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\\n    };\\n\\n    /**\\n     * @method toString\\n     * @memberof Md5\\n     * @instance\\n     * @description Output hash as hex string\\n     * @returns {String} Hex string\\n     * @see {@link md5.hex}\\n     * @example\\n     * hash.toString();\\n     */\\n    Md5.prototype.toString = Md5.prototype.hex;\\n\\n    /**\\n     * @method digest\\n     * @memberof Md5\\n     * @instance\\n     * @description Output hash as bytes array\\n     * @returns {Array} Bytes array\\n     * @see {@link md5.digest}\\n     * @example\\n     * hash.digest();\\n     */\\n    Md5.prototype.digest = function () {\\n        this.finalize();\\n\\n        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\\n        return [\\n            h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\\n            h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\\n            h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\\n            h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\\n        ];\\n    };\\n\\n    /**\\n     * @method array\\n     * @memberof Md5\\n     * @instance\\n     * @description Output hash as bytes array\\n     * @returns {Array} Bytes array\\n     * @see {@link md5.array}\\n     * @example\\n     * hash.array();\\n     */\\n    Md5.prototype.array = Md5.prototype.digest;\\n\\n    /**\\n     * @method arrayBuffer\\n     * @memberof Md5\\n     * @instance\\n     * @description Output hash as ArrayBuffer\\n     * @returns {ArrayBuffer} ArrayBuffer\\n     * @see {@link md5.arrayBuffer}\\n     * @example\\n     * hash.arrayBuffer();\\n     */\\n    Md5.prototype.arrayBuffer = function () {\\n        this.finalize();\\n\\n        var buffer = new ArrayBuffer(16);\\n        var blocks = new Uint32Array(buffer);\\n        blocks[0] = this.h0;\\n        blocks[1] = this.h1;\\n        blocks[2] = this.h2;\\n        blocks[3] = this.h3;\\n        return buffer;\\n    };\\n\\n    /**\\n     * @method buffer\\n     * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\\n     * @memberof Md5\\n     * @instance\\n     * @description Output hash as ArrayBuffer\\n     * @returns {ArrayBuffer} ArrayBuffer\\n     * @see {@link md5.buffer}\\n     * @example\\n     * hash.buffer();\\n     */\\n    Md5.prototype.buffer = Md5.prototype.arrayBuffer;\\n\\n    var exports = createMethod();\\n\\n    if (COMMON_JS) {\\n        module.exports = exports;\\n    } else {\\n        /**\\n         * @method md5\\b\\n         * @description Md5 hash function, export to global in browsers.\\n         * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n         * @returns {String} md5 hashes\\n         * @example\\n         * md5(\'\'); // d41d8cd98f00b204e9800998ecf8427e\\n         * md5(\'The quick brown fox jumps over the lazy dog\'); // 9e107d9d372bb6826bd81d3542a419d6\\n         * md5(\'The quick brown fox jumps over the lazy dog.\'); // e4d909c290d0fb1ca068ffaddf22cbd0\\n         *\\n         * // It also supports UTF-8 encoding\\n         * md5(\'\\u4E2D\\u6587\'); // a7bac2239fcdcb3a067903d8077c4a07\\n         *\\n         * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\\n         * md5([]); // d41d8cd98f00b204e9800998ecf8427e\\n         * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\\n         */\\n        root.md5 = exports;\\n        if (AMD) {\\n            define(function () {\\n                return exports;\\n            });\\n        }\\n    }\\n}(this));";\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarDebugClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator/2\', 2354);\nfunction $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$jdenticonDebugJsInitializer(){\n  $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$jdenticonDebugJsInitializer = emptyMethod;\n  jdenticonDebugJs = new MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$md5DebugJsInitializer(){\n  $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$md5DebugJsInitializer = emptyMethod;\n  md5DebugJs = new MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nfunction AvatarPresenter(eventBus, view, proxy){\n  $clinit_PresenterWidget();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MAIN));\n}\n\ndefineClass(819, 60, $intern_54, AvatarPresenter);\n_.onReveal = function onReveal_3(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent(\'Avatar\', \'Generated avatar based on JDenticon that provides a unique avatar based on unique name.\', \'addins/avatar/AvatarView\', \'\'));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarPresenter_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarPresenter\', 819);\nfunction $lambda$0_40(this$static, valueChangeEvent_0){\n  var dimension;\n  dimension = castTo(castTo(valueChangeEvent_0.value_0, 100).get_2(0), 270);\n  $setDimension(this$static.avatar, dimension.width_0, dimension.height_0);\n}\n\nfunction $onUpdateAvatar(this$static){\n  $setValue_4(this$static.avatar, $getText(this$static.txtAvatarName.valueBoxBase), checkNotNull($getValue_2(this$static.autoReload)));\n}\n\nfunction AvatarView(){\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_HTMLPanel1_2(new AvatarView_BinderImpl$Widgets(this)));\n  $addItem_2(this.dimensions, \'50 x 50 px\', new AvatarView$AvatarDimension(100, 100));\n  $addItem_2(this.dimensions, \'100 x 100 px\', new AvatarView$AvatarDimension(200, 200));\n  $addItem_2(this.dimensions, \'150 x 150 px\', new AvatarView$AvatarDimension(300, 300));\n  $addItem_2(this.dimensions, \'200 x 200 px\', new AvatarView$AvatarDimension(400, 400));\n  $addHandler(this.dimensions, new AvatarView$lambda$0$Type(this), (!TYPE_18 && (TYPE_18 = new GwtEvent$Type) , TYPE_18));\n}\n\ndefineClass(1072, 67, $intern_55, AvatarView);\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView\', 1072);\nfunction AvatarView$AvatarDimension(width_0, height){\n  this.width_0 = width_0;\n  this.height_0 = height;\n}\n\ndefineClass(270, 1, {270:1}, AvatarView$AvatarDimension);\n_.height_0 = 0;\n_.width_0 = 0;\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView$AvatarDimension_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView/AvatarDimension\', 270);\nfunction AvatarView$lambda$0$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1073, 1, $intern_45, AvatarView$lambda$0$Type);\n_.onValueChange = function onValueChange_14(arg0){\n  $lambda$0_40(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView$lambda$0$Type_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView/lambda$0$Type\', 1073);\nfunction $build_f_HTMLPanel1_2(this$static){\n  var __attachRecord__, f_HTMLPanel1, f_MaterialRow2, f_MaterialRow7, f_MaterialTitle3, f_ExternalLibrary4, f_PrettyPre5, sb, f_avatar$MaterialAvatar6, f_MaterialTitle8, f_MaterialRow9, f_MaterialColumn10, f_MaterialRow11, f_PrettyPre14, f_MaterialRow12, avatar, txtAvatarName, dimensions, f_MaterialRow13, autoReload, reload;\n  f_HTMLPanel1 = new HTMLPanel($html2(this$static.domId0, this$static.domId1).html_0);\n  __attachRecord__ = attachToDom(($clinit_DOM() , f_HTMLPanel1.element_0));\n  $get_0(this$static.domId0Element);\n  $get_0(this$static.domId1Element);\n  __attachRecord__.origParent?$insertBefore(__attachRecord__.origParent, __attachRecord__.element, __attachRecord__.origSibling):orphan(__attachRecord__.element);\n  $addAndReplaceElement(f_HTMLPanel1, (f_MaterialRow2 = new MaterialRow , $add_9(f_MaterialRow2, (f_MaterialTitle3 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle3.header), ($clinit_SafeHtmlUtils() , (new SafeHtmlString(htmlEscape(\'Usage\'))).html_0)) , fire_5(f_MaterialTitle3, \'Usage\') , f_MaterialTitle3)) , $add_9(f_MaterialRow2, (f_ExternalLibrary4 = new ExternalLibrary , $setHref(f_ExternalLibrary4.externalLink, \'https://github.com/dmester/jdenticon\') , $setTarget_0(f_ExternalLibrary4.externalLink) , $setText_2(f_ExternalLibrary4.externalLink, \'JDenticon 1.3.2\') , f_ExternalLibrary4)) , $add_9(f_MaterialRow2, (f_PrettyPre5 = new PrettyPre , $setHTML_0(f_PrettyPre5, (sb = new StringBuilder , sb.string += \'\\u2003&lt;!-- Addin Import --&gt;<br> xmlns:ma="urn:import:gwt.material.design.addins.client"<br><br> &lt;!-- Addin Usage --&gt;<br> &lt;ma:avatar.MaterialAvatar name="kevzlou7979" width="150" height="150" /&gt;\' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string)).html_0) , setStyleName(f_PrettyPre5.element_0, \'lang-xml\', true) , f_PrettyPre5)) , $add_9(f_MaterialRow2, (f_avatar$MaterialAvatar6 = new MaterialAvatar , f_avatar$MaterialAvatar6.element_0.setAttribute(\'width\', \'150\') , fire_5(f_avatar$MaterialAvatar6, \'kevzlou7979\') , $setAttribute(f_avatar$MaterialAvatar6.element_0, \'data-jdenticon-hash\', (f_avatar$MaterialAvatar6.value_0 = \'kevzlou7979\' , $wnd.md5(\'kevzlou7979\'))) , f_avatar$MaterialAvatar6.element_0.setAttribute(\'height\', \'150\') , f_avatar$MaterialAvatar6)) , setStyleName(f_MaterialRow2.element_0, \'code\', true) , f_MaterialRow2), $get_0(this$static.domId0Element));\n  $addAndReplaceElement(f_HTMLPanel1, (f_MaterialRow7 = new MaterialRow , $add_9(f_MaterialRow7, (f_MaterialTitle8 = new MaterialTitle , $setText_12(f_MaterialTitle8.paragraph, \'You can easily update the avatar during textbox key up events.\') , $setInnerHTML($getElement(f_MaterialTitle8.header), (new SafeHtmlString(htmlEscape(\'setValue() and setDimension()\'))).html_0) , fire_5(f_MaterialTitle8, \'setValue() and setDimension()\') , f_MaterialTitle8)) , $add_9(f_MaterialRow7, (f_MaterialRow9 = new MaterialRow , $add_9(f_MaterialRow9, (f_MaterialColumn10 = new MaterialColumn , $add_9(f_MaterialColumn10, (f_MaterialRow11 = new MaterialRow , $add_9(f_MaterialRow11, (f_MaterialRow12 = new MaterialRow , $add_9(f_MaterialRow12, (avatar = new MaterialAvatar , $setBackgroundColor(avatar, ($clinit_Color() , WHITE)) , $setShadow_0((!avatar.shadowMixin && (avatar.shadowMixin = new ShadowMixin(avatar)) , avatar.shadowMixin), 1) , avatar.element_0.setAttribute(\'width\', \'150\') , fire_5(avatar, \'marjorie\') , $setAttribute(avatar.element_0, \'data-jdenticon-hash\', (avatar.value_0 = \'marjorie\' , $wnd.md5(\'marjorie\'))) , $setOn((!avatar.circleMixin && (avatar.circleMixin = new ToggleStyleMixin(avatar, \'circle\')) , avatar.circleMixin), true) , avatar.element_0.setAttribute(\'height\', \'150\') , this$static.owner.avatar = avatar , avatar)) , $setTextAlign(f_MaterialRow12, ($clinit_TextAlign() , CENTER_4)) , f_MaterialRow12)) , $add_9(f_MaterialRow11, (txtAvatarName = new MaterialTextBox , $setGrid((!txtAvatarName.gridMixin && (txtAvatarName.gridMixin = new GridMixin(txtAvatarName)) , txtAvatarName.gridMixin), \'s12\') , $setText_1(txtAvatarName.valueBoxBase, \'marjorie\') , \'marjorie\'.length != 0 && $addStyleName(txtAvatarName.label_1, \'active\') , $setText_11(txtAvatarName.label_1, \'Avatar Name\') , ($getElement(txtAvatarName.valueBoxBase).getAttribute(\'placeholder\') || \'\').length == 0 || $setStyleName(txtAvatarName.label_1, \'active\') , $addKeyUpHandler_0(txtAvatarName, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1) , this$static.owner.txtAvatarName = txtAvatarName , txtAvatarName)) , $add_9(f_MaterialRow11, (dimensions = new MaterialComboBox , $setTextAlign(dimensions, LEFT_8) , $setGrid((!dimensions.gridMixin && (dimensions.gridMixin = new GridMixin(dimensions)) , dimensions.gridMixin), \'s12\') , $setText_11(dimensions.label_0, \'Dimension\') , this$static.owner.dimensions = dimensions , dimensions)) , $add_9(f_MaterialRow11, (f_MaterialRow13 = new MaterialRow , $add_9(f_MaterialRow13, (autoReload = new MaterialCheckBox , $setGrid((!autoReload.gridMixin && (autoReload.gridMixin = new GridMixin(autoReload)) , autoReload.gridMixin), \'s6\') , $setTextOrHtml(autoReload.directionalTextHelper, \'Auto Reload\') , $setValue_14(autoReload, ($clinit_Boolean() , $clinit_Boolean() , true), false) , this$static.owner.autoReload = autoReload , autoReload)) , $add_9(f_MaterialRow13, (reload = new MaterialButton , $setGrid((!reload.gridMixin && (reload.gridMixin = new GridMixin(reload)) , reload.gridMixin), \'s6\') , $setText_6(reload.span_1, \'Reload\') , reload.span_1.attached || $add_9(reload, reload.span_1) , $addClickHandler(reload, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2) , reload)) , f_MaterialRow13)) , f_MaterialRow11)) , $setGrid((!f_MaterialColumn10.gridMixin && (f_MaterialColumn10.gridMixin = new GridMixin(f_MaterialColumn10)) , f_MaterialColumn10.gridMixin), \'l6 m6 s12\') , f_MaterialColumn10)) , f_MaterialRow9)) , $add_9(f_MaterialRow7, (f_PrettyPre14 = new PrettyPre , setStyleName(f_PrettyPre14.element_0, \'lang-java\', true) , f_PrettyPre14)) , setStyleName(f_MaterialRow7.element_0, \'code\', true) , f_MaterialRow7), $get_0(this$static.domId1Element));\n  return f_HTMLPanel1;\n}\n\nfunction AvatarView_BinderImpl$Widgets(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new AvatarView_BinderImpl$Widgets$1(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2 = new AvatarView_BinderImpl$Widgets$2;\n  this.owner = owner;\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement(this.domId0);\n  this.domId1Element = new LazyDomElement(this.domId1);\n}\n\ndefineClass(1488, 1, {}, AvatarView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_1BinderImpl$Widgets_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView_BinderImpl/Widgets\', 1488);\nfunction AvatarView_BinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1489, 1, $intern_94, AvatarView_BinderImpl$Widgets$1);\n_.onKeyUp = function onKeyUp_3(event_0){\n  $onUpdateAvatar(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_1BinderImpl$Widgets$1_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView_BinderImpl/Widgets/1\', 1489);\nfunction AvatarView_BinderImpl$Widgets$2(){\n}\n\ndefineClass(1490, 1, $intern_64, AvatarView_BinderImpl$Widgets$2);\n_.onClick = function onClick_39(event_0){\n  $wnd.jdenticon();\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_1BinderImpl$Widgets$2_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView_BinderImpl/Widgets/2\', 1490);\nfunction $html2(arg0, arg1){\n  var sb;\n  sb = new StringBuilder;\n  sb.string += "<span id=\'";\n  $append_1(sb, htmlEscape(arg0));\n  sb.string += "\'><\\/span>  <span id=\'";\n  $append_1(sb, htmlEscape(arg1));\n  sb.string += "\'><\\/span>";\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string);\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$(this$static){\n  var result, result0;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$) {\n    result0 = new AvatarPresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), (result = $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$(this$static) , result), $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result0), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$ = result0;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$) {\n    result = new AvatarView;\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$;\n}\n\ndefineClass(688, 1, $intern_103);\n_.onSuccess_0 = function onSuccess_1(){\n  $onSuccess(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\n$entry(onLoad_1)(1);\n\n//# sourceURL=gwtmaterialdemo-1.js\n')
